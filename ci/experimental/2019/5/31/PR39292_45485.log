Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ubuntu-1604-aufs (i-047fb33633c985728) (docker-edge ubuntu aufs docker-stable docker ubuntu-1604-aufs-edge x86_64 ec2 linux ubuntu-1604-aufs ubuntu-1604 amd64 ubuntu-1604-aufs-stable) in workspace /home/ubuntu/workspace/Docker-PRs-experimental
No credentials specified
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/ubuntu/workspace/Docker-PRs-experimental # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision 8d760280a232f98d92440539e1e8a8f66c213bdb (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 8d760280a232f98d92440539e1e8a8f66c213bdb
Commit message: "Merge pull request #39275 from wiktor-k/move-var-run-to-run"
 > git rev-list --no-walk 8d760280a232f98d92440539e1e8a8f66c213bdb # timeout=10
Set build name.
New build name is '#39292'
[Docker-PRs-experimental] $ /bin/bash /tmp/jenkins1505783538328587296.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/39292/head -> origin/pr/39292
Updating 8d76028..be1219c
Fast-forward
 daemon/archive.go                    |  15 ++--
 daemon/export.go                     |   2 +-
 pkg/chrootarchive/archive.go         |  31 +++++++-
 pkg/chrootarchive/archive_unix.go    | 137 ++++++++++++++++++++++++++++++++++-
 pkg/chrootarchive/archive_windows.go |   2 +-
 pkg/chrootarchive/init_unix.go       |   1 +
 6 files changed, 171 insertions(+), 17 deletions(-)
Sending build context to Docker daemon     48MB
Step 1/112 : ARG CROSS="false"
Step 2/112 : FROM golang:1.12.5 AS base
 ---> 7ced090ee82e
Step 3/112 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> f5cbc41df44a
Step 4/112 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> 396d8d3d3038
Step 5/112 : FROM base AS criu
 ---> 396d8d3d3038
Step 6/112 : ENV CRIU_VERSION 3.11
 ---> Using cache
 ---> fb9d5759025f
Step 7/112 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> a11fbae096ae
Step 8/112 : FROM base AS registry
 ---> 396d8d3d3038
Step 9/112 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> b156b3d211f0
Step 10/112 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 2a590c80f175
Step 11/112 : FROM base AS docker-py
 ---> 396d8d3d3038
Step 12/112 : ENV DOCKER_PY_COMMIT ac922192959870774ad8428344d9faa0555f7ba6
 ---> Using cache
 ---> 3e5ca66ac33d
Step 13/112 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> 98e4b50214b1
Step 14/112 : FROM base AS swagger
 ---> 396d8d3d3038
Step 15/112 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> 9717edca2bbe
Step 16/112 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> e319d3b2f055
Step 17/112 : FROM base AS frozen-images
 ---> 396d8d3d3038
Step 18/112 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> 0f56e3c1f343
Step 19/112 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> 302ab011afb2
Step 20/112 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> 46ecb6019973
Step 21/112 : FROM base AS cross-false
 ---> 396d8d3d3038
Step 22/112 : FROM base AS cross-true
 ---> 396d8d3d3038
Step 23/112 : RUN dpkg --add-architecture armhf
 ---> Using cache
 ---> df5a92362594
Step 24/112 : RUN dpkg --add-architecture arm64
 ---> Using cache
 ---> 967b56cd1542
Step 25/112 : RUN dpkg --add-architecture armel
 ---> Using cache
 ---> e94809782387
Step 26/112 : RUN if [ "$(go env GOHOSTARCH)" = "amd64" ]; then 	apt-get update 	&& apt-get install -y --no-install-recommends 		crossbuild-essential-armhf 		crossbuild-essential-arm64 		crossbuild-essential-armel; 	fi
 ---> Using cache
 ---> 34ff285804cb
Step 27/112 : FROM cross-${CROSS} as dev-base
 ---> 396d8d3d3038
Step 28/112 : FROM dev-base AS runtime-dev-cross-false
 ---> 396d8d3d3038
Step 29/112 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> 1d891d177783
Step 30/112 : FROM cross-true AS runtime-dev-cross-true
 ---> 34ff285804cb
Step 31/112 : RUN if [ "$(go env GOHOSTARCH)" = "amd64" ]; then 	apt-get update 	&& apt-get install -y 		libseccomp-dev:armhf 		libseccomp-dev:arm64 		libseccomp-dev:armel 		libapparmor-dev:armhf 		libapparmor-dev:arm64 		libapparmor-dev:armel 		libapparmor-dev 		libseccomp-dev; 	fi
 ---> Using cache
 ---> 2428ff41bb4d
Step 32/112 : FROM runtime-dev-cross-${CROSS} AS runtime-dev
 ---> 1d891d177783
Step 33/112 : FROM base AS tomlv
 ---> 396d8d3d3038
Step 34/112 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> cf56988f4138
Step 35/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 64e7e15a96cb
Step 36/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> f30577e73e6b
Step 37/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 470dc8530040
Step 38/112 : FROM base AS vndr
 ---> 396d8d3d3038
Step 39/112 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> 15c1ecac0ccc
Step 40/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 95dfd1bd80a1
Step 41/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 3fb6e2f5415d
Step 42/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 6dc284fa3857
Step 43/112 : FROM dev-base AS containerd
 ---> 396d8d3d3038
Step 44/112 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> 50268b2a6e96
Step 45/112 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> 4367b7a46bc0
Step 46/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 43b672ac61a6
Step 47/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 82c0ec3c1195
Step 48/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 6dd5bca2b7a0
Step 49/112 : FROM dev-base AS proxy
 ---> 396d8d3d3038
Step 50/112 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> 3f0325f0a4d9
Step 51/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 5291a0b19848
Step 52/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> b8bf282c8840
Step 53/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 77c87dc7a879
Step 54/112 : FROM base AS gometalinter
 ---> 396d8d3d3038
Step 55/112 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> c9b105ce97aa
Step 56/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> b1fac570fed1
Step 57/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> b066433cc5c9
Step 58/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> a9ddab9f392a
Step 59/112 : FROM dev-base AS dockercli
 ---> 396d8d3d3038
Step 60/112 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> 1c310a5d8777
Step 61/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 002862699ce4
Step 62/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 08597a3d20f8
Step 63/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 95cd868a7d16
Step 64/112 : FROM runtime-dev AS runc
 ---> 1d891d177783
Step 65/112 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> c0ad6f2edd23
Step 66/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 77a444b6bfc2
Step 67/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> b188d9f2a90c
Step 68/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> d612c46ac929
Step 69/112 : FROM dev-base AS tini
 ---> 396d8d3d3038
Step 70/112 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> 5712e75438b4
Step 71/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 643b9c8d48f6
Step 72/112 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> af3540bee295
Step 73/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 28ff3f667a4a
Step 74/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 83d3c9b59885
Step 75/112 : FROM dev-base AS rootlesskit
 ---> 396d8d3d3038
Step 76/112 : ENV INSTALL_BINARY_NAME=rootlesskit
 ---> Using cache
 ---> fa6f395c53ad
Step 77/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> af511ed1a41c
Step 78/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 6dbe7387d9da
Step 79/112 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 84db09a49111
Step 80/112 : COPY ./contrib/dockerd-rootless.sh /build
 ---> Using cache
 ---> e9faf7159a7d
Step 81/112 : FROM runtime-dev AS dev
 ---> 1d891d177783
Step 82/112 : RUN groupadd -r docker
 ---> Using cache
 ---> 5eb1ed3bcc67
Step 83/112 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> 088f453463dd
Step 84/112 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> fee39590f2fe
Step 85/112 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> 6d3217fa2f02
Step 86/112 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> 93cb46be7e2f
Step 87/112 : RUN ldconfig
 ---> Using cache
 ---> e47c234cdbc4
Step 88/112 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libffi-dev 	libssl-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-cffi 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	libprotobuf-c1 	libnet1 	libnl-3-200 	--no-install-recommends
 ---> Using cache
 ---> ee2e23e98651
Step 89/112 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> 501b69d69826
Step 90/112 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> 5f3069a85175
Step 91/112 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> aaf6d3e1aa18
Step 92/112 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> 485e1b5e1f9e
Step 93/112 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> 5ce5da43be09
Step 94/112 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> ebcc53d55a06
Step 95/112 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> de2c7491e4d2
Step 96/112 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> 382639652d14
Step 97/112 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> 6af666732bd2
Step 98/112 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> d3113ee2d7bd
Step 99/112 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> 57cf9ee874b2
Step 100/112 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> 118b76008389
Step 101/112 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> f27512e79a84
Step 102/112 : RUN cd /docker-py 	&& pip install docker-pycreds==0.4.0 	&& pip install paramiko==2.4.2 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> 98d1cc4ca6a9
Step 103/112 : COPY --from=rootlesskit /build/ /usr/local/bin/
 ---> Using cache
 ---> 6af4d88a7fce
Step 104/112 : COPY --from=djs55/vpnkit@sha256:e508a17cfacc8fd39261d5b4e397df2b953690da577e2c987a47630cd0c42f8e /vpnkit /usr/local/bin/vpnkit.x86_64
 ---> Using cache
 ---> dbb8b04d6421
Step 105/112 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> bf6f1b6ce8ab
Step 106/112 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> 623ef048afc1
Step 107/112 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> 2a8d99b717d2
Step 108/112 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> 07b85fcc1f12
Step 109/112 : VOLUME /var/lib/docker
 ---> Using cache
 ---> 8ce0bc16545a
Step 110/112 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 245f19784395
Step 111/112 : FROM dev AS final
 ---> 245f19784395
Step 112/112 : COPY . /go/src/github.com/docker/docker
 ---> 77e6fbb7e60d
Successfully built 77e6fbb7e60d
Successfully tagged docker:be1219c-exp

Removing bundles/

---> Making bundle: binary-daemon (in bundles/binary-daemon)
Building: bundles/binary-daemon/dockerd-dev
GOOS="" GOARCH="" GOARM=""
Created binary: bundles/binary-daemon/dockerd-dev
Copying nested executables into bundles/binary-daemon

---> Making bundle: test-integration (in bundles/test-integration)
Building test suite binary ./integration-cli/test.main
Building test suite binary ./integration/system/test.main
Building test suite binary ./integration/secret/test.main
Building test suite binary ./integration/build/test.main
Building test suite binary ./integration/service/test.main
Building test suite binary ./integration/config/test.main
Building test suite binary ./integration/plugin/test.main
Building test suite binary ./integration/plugin/common/test.main
Building test suite binary ./integration/plugin/graphdriver/test.main
Building test suite binary ./integration/plugin/authz/test.main
Building test suite binary ./integration/plugin/volumes/test.main
Building test suite binary ./integration/plugin/volumes/cmd/test.main
Building test suite binary ./integration/plugin/volumes/cmd/dummy/test.main
Building test suite binary ./integration/plugin/logging/test.main
Building test suite binary ./integration/plugin/logging/cmd/test.main
Building test suite binary ./integration/plugin/logging/cmd/close_on_start/test.main
Building test suite binary ./integration/plugin/logging/cmd/dummy/test.main
Building test suite binary ./integration/container/test.main
Building test suite binary ./integration/image/test.main
Building test suite binary ./integration/network/test.main
Building test suite binary ./integration/network/macvlan/test.main
Building test suite binary ./integration/network/ipvlan/test.main
Building test suite binary ./integration/session/test.main
Building test suite binary ./integration/volume/test.main
---> Making bundle: .integration-daemon-start (in bundles/test-integration)
Using test binary docker
# DOCKER_EXPERIMENTAL is set: starting daemon with experimental features enabled! 
/etc/init.d/apparmor: 130: /etc/init.d/apparmor: systemd-detect-virt: not found
Starting AppArmor profiles:Warning from stdin (line 1): /sbin/apparmor_parser: cannot use or update cache, disable, or force-complain via stdin
Warning failed to create cache: (null)
.
Starting dockerd
INFO: Waiting for daemon to start...
.
---> Making bundle: .integration-daemon-setup (in bundles/test-integration)
---> Making bundle: .ensure-emptyfs (in bundles/test-integration)
Error: No such image: emptyfs
Running integration-test (iteration 1)
Running /go/src/github.com/docker/docker/integration/system
Loaded image: buildpack-deps:jessie
Loaded image: busybox:latest
Loaded image: busybox:glibc
Loaded image: debian:jessie
Loaded image: hello-world:latest
INFO: Testing against a local daemon
=== RUN   TestCgroupDriverSystemdMemoryLimit
--- SKIP: TestCgroupDriverSystemdMemoryLimit (0.00s)
    cgroupdriver_systemd_test.go:32: !hasSystemd()
=== RUN   TestEventsExecDie
--- PASS: TestEventsExecDie (0.63s)
=== RUN   TestEventsBackwardsCompatible
--- PASS: TestEventsBackwardsCompatible (0.07s)
=== RUN   TestInfoBinaryCommits
--- PASS: TestInfoBinaryCommits (0.01s)
=== RUN   TestInfoAPIVersioned
--- PASS: TestInfoAPIVersioned (0.01s)
=== RUN   TestInfoAPI
--- PASS: TestInfoAPI (0.01s)
=== RUN   TestInfoAPIWarnings
--- PASS: TestInfoAPIWarnings (0.76s)
    info_test.go:49: Creating a new daemon
    daemon.go:317: [d5085356d4e72] waiting for daemon to start
    daemon.go:335: [d5085356d4e72] daemon started
    daemon.go:445: [d5085356d4e72] Stopping daemon
    daemon.go:284: [d5085356d4e72] exiting daemon
    daemon.go:432: [d5085356d4e72] Daemon stopped
=== RUN   TestLoginFailsWithBadCredentials
--- PASS: TestLoginFailsWithBadCredentials (1.19s)
=== RUN   TestPingCacheHeaders
--- PASS: TestPingCacheHeaders (0.01s)
=== RUN   TestPingGet
--- PASS: TestPingGet (0.01s)
=== RUN   TestPingHead
--- PASS: TestPingHead (0.01s)
=== RUN   TestUUIDGeneration
--- PASS: TestUUIDGeneration (0.01s)
=== RUN   TestVersion
--- PASS: TestVersion (0.01s)
PASS
Running /go/src/github.com/docker/docker/integration/secret
INFO: Testing against a local daemon
=== RUN   TestSecretInspect
--- PASS: TestSecretInspect (1.55s)
    secret_test.go:25: Creating a new daemon
    daemon.go:317: [d9499a4c17d65] waiting for daemon to start
    daemon.go:335: [d9499a4c17d65] daemon started
    daemon.go:445: [d9499a4c17d65] Stopping daemon
    daemon.go:284: [d9499a4c17d65] exiting daemon
    daemon.go:432: [d9499a4c17d65] Daemon stopped
=== RUN   TestSecretList
--- PASS: TestSecretList (1.94s)
    secret_test.go:48: Creating a new daemon
    daemon.go:317: [d76fbca63be89] waiting for daemon to start
    daemon.go:335: [d76fbca63be89] daemon started
    daemon.go:445: [d76fbca63be89] Stopping daemon
    daemon.go:284: [d76fbca63be89] exiting daemon
    daemon.go:432: [d76fbca63be89] Daemon stopped
=== RUN   TestSecretsCreateAndDelete
--- PASS: TestSecretsCreateAndDelete (1.96s)
    secret_test.go:125: Creating a new daemon
    daemon.go:317: [dc2bf2a2a4109] waiting for daemon to start
    daemon.go:335: [dc2bf2a2a4109] daemon started
    daemon.go:445: [dc2bf2a2a4109] Stopping daemon
    daemon.go:284: [dc2bf2a2a4109] exiting daemon
    daemon.go:432: [dc2bf2a2a4109] Daemon stopped
=== RUN   TestSecretsUpdate
--- PASS: TestSecretsUpdate (1.93s)
    secret_test.go:172: Creating a new daemon
    daemon.go:317: [dc6adbeec6d2e] waiting for daemon to start
    daemon.go:335: [dc6adbeec6d2e] daemon started
    daemon.go:445: [dc6adbeec6d2e] Stopping daemon
    daemon.go:284: [dc6adbeec6d2e] exiting daemon
    daemon.go:432: [dc6adbeec6d2e] Daemon stopped
=== RUN   TestTemplatedSecret
--- PASS: TestTemplatedSecret (2.62s)
    secret_test.go:221: Creating a new daemon
    daemon.go:317: [dbf55a5df6441] waiting for daemon to start
    daemon.go:335: [dbf55a5df6441] daemon started
    daemon.go:445: [dbf55a5df6441] Stopping daemon
    daemon.go:284: [dbf55a5df6441] exiting daemon
    daemon.go:432: [dbf55a5df6441] Daemon stopped
=== RUN   TestSecretCreateResolve
--- PASS: TestSecretCreateResolve (2.02s)
    secret_test.go:342: Creating a new daemon
    daemon.go:317: [d2ce940c48569] waiting for daemon to start
    daemon.go:335: [d2ce940c48569] daemon started
    daemon.go:445: [d2ce940c48569] Stopping daemon
    daemon.go:284: [d2ce940c48569] exiting daemon
    daemon.go:432: [d2ce940c48569] Daemon stopped
PASS
Running /go/src/github.com/docker/docker/integration/build
INFO: Testing against a local daemon
=== RUN   TestCgroupNamespacesBuild
--- PASS: TestCgroupNamespacesBuild (1.44s)
    build_cgroupns_linux_test.go:42: Creating a new daemon
    daemon.go:317: [dbb2f6f419bba] waiting for daemon to start
    daemon.go:335: [dbb2f6f419bba] daemon started
    daemon.go:445: [dbb2f6f419bba] Stopping daemon
    daemon.go:284: [dbb2f6f419bba] exiting daemon
    daemon.go:432: [dbb2f6f419bba] Daemon stopped
=== RUN   TestCgroupNamespacesBuildDaemonHostMode
--- PASS: TestCgroupNamespacesBuildDaemonHostMode (1.42s)
    build_cgroupns_linux_test.go:42: Creating a new daemon
    daemon.go:317: [ddd1fdd958d5a] waiting for daemon to start
    daemon.go:335: [ddd1fdd958d5a] daemon started
    daemon.go:445: [ddd1fdd958d5a] Stopping daemon
    daemon.go:284: [ddd1fdd958d5a] exiting daemon
    daemon.go:432: [ddd1fdd958d5a] Daemon stopped
=== RUN   TestBuildWithSession
--- PASS: TestBuildWithSession (4.07s)
=== RUN   TestBuildSquashParent
Set build name.
New build name is '#39292'
Build was aborted
Aborted by Gordon
[PostBuildScript] - Executing post build scripts.
/tmp/jenkins1505783538328587296.sh: line 21: 23615 Terminated              docker run --rm -t --privileged -v "$WORKSPACE/bundles:/go/src/github.com/docker/docker/bundles" -e DOCKER_EXPERIMENTAL=y --name docker-pr-exp$BUILD_NUMBER -e DOCKER_GITCOMMIT=${GITCOMMIT} -e DOCKER_GRAPHDRIVER=vfs -e DOCKER_EXECDRIVER=native docker:${GITCOMMIT}-exp hack/ci/experimental
[Docker-PRs-experimental] $ /bin/sh -xe /tmp/jenkins8508730103836571970.sh
+ echo Ensuring container killed.
Ensuring container killed.
+ docker rm -vf docker-pr-exp45485
docker-pr-exp45485
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/ubuntu/workspace/Docker-PRs-experimental:/workspace busybox chown -R 1000:1000 /workspace
[Docker-PRs-experimental] $ /bin/sh -xe /tmp/jenkins7001305983923731327.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ + xargs tar -czf bundles.tar.gz
find bundles -name *.log
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: ABORTED
