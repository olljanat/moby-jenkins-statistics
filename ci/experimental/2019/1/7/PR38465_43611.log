Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ubuntu-1604-aufs-stable (i-08c598125b2fb362a) (docker-edge ubuntu aufs docker-stable docker ubuntu-1604-aufs-edge x86_64 ec2 linux ubuntu-1604-aufs ubuntu-1604 amd64 ubuntu-1604-aufs-stable us-west-2) in workspace /home/ubuntu/workspace/Docker-PRs-experimental
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/ubuntu/workspace/Docker-PRs-experimental # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision 545d00e7521414f648140b5834d41a072592a484 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 545d00e7521414f648140b5834d41a072592a484
Commit message: "Merge pull request #38416 from thaJeztah/fix_build_session_test"
 > git rev-list --no-walk 545d00e7521414f648140b5834d41a072592a484 # timeout=10
Set build name.
New build name is '#38465'
[Docker-PRs-experimental] $ /bin/bash /tmp/jenkins5138402854055568710.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38465/head -> origin/pr/38465
Merge made by the 'recursive' strategy.
 volume/mounts/lcow_parser.go    |   4 +-
 volume/mounts/parser_test.go    | 180 ++++++++++++++++++++--------------------
 volume/mounts/validate.go       |   5 ++
 volume/mounts/windows_parser.go |  38 +++++----
 4 files changed, 119 insertions(+), 108 deletions(-)
Sending build context to Docker daemon  45.11MB
Step 1/94 : FROM golang:1.11.4 AS base
 ---> 343df9d12b7b
Step 2/94 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> d790e64aabf1
Step 3/94 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> fac085a3c7ff
Step 4/94 : FROM base AS criu
 ---> fac085a3c7ff
Step 5/94 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> 12511c24ad10
Step 6/94 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> 803fb70d0e1a
Step 7/94 : FROM base AS registry
 ---> fac085a3c7ff
Step 8/94 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> 7f5290347f56
Step 9/94 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> 4cbf3b489fc4
Step 10/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 5788e795bc9f
Step 11/94 : FROM base AS docker-py
 ---> fac085a3c7ff
Step 12/94 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> 6483de9412fe
Step 13/94 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> 0713ed53fcac
Step 14/94 : FROM base AS swagger
 ---> fac085a3c7ff
Step 15/94 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> 91e646667e7d
Step 16/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 914bb933c870
Step 17/94 : FROM base AS frozen-images
 ---> fac085a3c7ff
Step 18/94 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> 14df71ae3e6f
Step 19/94 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> c9513d7ed439
Step 20/94 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> 01953c015e17
Step 21/94 : FROM base AS runtime-dev
 ---> fac085a3c7ff
Step 22/94 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> 7939da0413c2
Step 23/94 : FROM base AS tomlv
 ---> fac085a3c7ff
Step 24/94 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> 5ef93011f894
Step 25/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 8a8be8a12ea7
Step 26/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> e9232a2479d0
Step 27/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 65a13533413c
Step 28/94 : FROM base AS vndr
 ---> fac085a3c7ff
Step 29/94 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> 292722ab49ec
Step 30/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 77e07a19fae1
Step 31/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 40ed1b4aef58
Step 32/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 4fc711089827
Step 33/94 : FROM base AS containerd
 ---> fac085a3c7ff
Step 34/94 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> 108ecdc924c4
Step 35/94 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> af8108f513f5
Step 36/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> e497cf1dd7c2
Step 37/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> e92b79f68621
Step 38/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> df61bcacf505
Step 39/94 : FROM base AS proxy
 ---> fac085a3c7ff
Step 40/94 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> 46a90e527033
Step 41/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> bf8efc463b21
Step 42/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> a420d7abc9ce
Step 43/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 06bfca64e0c8
Step 44/94 : FROM base AS gometalinter
 ---> fac085a3c7ff
Step 45/94 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> b43b34bf0709
Step 46/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 1fffd5e1b11a
Step 47/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> d8a237f3e5c1
Step 48/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> cfcdaf0a8cb6
Step 49/94 : FROM base AS dockercli
 ---> fac085a3c7ff
Step 50/94 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> 9eed3de254e8
Step 51/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 624473445b9c
Step 52/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> f2e8a6a4aaeb
Step 53/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 1223c990e7b4
Step 54/94 : FROM runtime-dev AS runc
 ---> 7939da0413c2
Step 55/94 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> 25ae6ac58c79
Step 56/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> d7c46cd72790
Step 57/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> b62eeeb00393
Step 58/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> a497e38366c3
Step 59/94 : FROM base AS tini
 ---> fac085a3c7ff
Step 60/94 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> df90da101cc9
Step 61/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> d58808a4bca0
Step 62/94 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> fccf40e720b0
Step 63/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 6d25353267f2
Step 64/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> df68d7416d4a
Step 65/94 : FROM runtime-dev AS dev
 ---> 7939da0413c2
Step 66/94 : RUN groupadd -r docker
 ---> Using cache
 ---> 43680d6b803b
Step 67/94 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> 44f7536b65c6
Step 68/94 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> ad66cde79775
Step 69/94 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> 195e05a34077
Step 70/94 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> ed67966dd52e
Step 71/94 : RUN ldconfig
 ---> Using cache
 ---> 09faf05e73c7
Step 72/94 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> 11cab3fc5932
Step 73/94 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> 4c3cd085cf90
Step 74/94 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> cf28ecaf05cf
Step 75/94 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> 2cef715308b4
Step 76/94 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> 2b8d611c945c
Step 77/94 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> e0bfb59f3a0e
Step 78/94 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> 8be028235a6c
Step 79/94 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> a006a15a3ad4
Step 80/94 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> 62a794034dcc
Step 81/94 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> c178bfe96e26
Step 82/94 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> 9c8678b6b81e
Step 83/94 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> 26ce1958e897
Step 84/94 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> ed35d0b3bdf1
Step 85/94 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> be091b6af725
Step 86/94 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> 211233b00a83
Step 87/94 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> 1277229c4066
Step 88/94 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> a1d847e969b6
Step 89/94 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> 5784716194d1
Step 90/94 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> 7be81007ccd0
Step 91/94 : VOLUME /var/lib/docker
 ---> Using cache
 ---> af845e385bbc
Step 92/94 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 0dcb0bfc076b
Step 93/94 : FROM dev AS final
 ---> 0dcb0bfc076b
Step 94/94 : COPY . /go/src/github.com/docker/docker
 ---> a2b1c7a614a3
Successfully built a2b1c7a614a3
Successfully tagged docker:dd9c7f9-exp

Removing bundles/

---> Making bundle: binary-daemon (in bundles/binary-daemon)
Building: bundles/binary-daemon/dockerd-dev
Set build name.
New build name is '#38465'
Build was aborted
Aborted by Gordon
[PostBuildScript] - Executing post build scripts.
[Docker-PRs-experimental] $ /bin/sh -xe /tmp/jenkins5711002435488317618.sh
/tmp/jenkins5138402854055568710.sh: line 21: 15361 Terminated              docker run --rm -t --privileged -v "$WORKSPACE/bundles:/go/src/github.com/docker/docker/bundles" -e DOCKER_EXPERIMENTAL=y --name docker-pr-exp$BUILD_NUMBER -e DOCKER_GITCOMMIT=${GITCOMMIT} -e DOCKER_GRAPHDRIVER=vfs -e DOCKER_EXECDRIVER=native docker:${GITCOMMIT}-exp hack/ci/experimental
+ echo Ensuring container killed.
Ensuring container killed.
+ docker rm -vf docker-pr-exp43611
docker-pr-exp43611
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/ubuntu/workspace/Docker-PRs-experimental:/workspace busybox chown -R 1000:1000 /workspace
[Docker-PRs-experimental] $ /bin/sh -xe /tmp/jenkins7423213442101014297.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ xargs tar -czf bundles.tar.gz
+ find bundles -name *.log
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: ABORTED
