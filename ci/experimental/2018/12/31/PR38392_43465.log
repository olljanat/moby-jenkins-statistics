Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ubuntu-1604-aufs-stable (i-0d0da2dda4a22a9cf) (docker-edge ubuntu aufs docker-stable docker ubuntu-1604-aufs-edge x86_64 ec2 linux ubuntu-1604-aufs ubuntu-1604 amd64 ubuntu-1604-aufs-stable us-west-2) in workspace /home/ubuntu/workspace/Docker-PRs-experimental
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/ubuntu/workspace/Docker-PRs-experimental # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision f76d6a078d881f410c00e8d900dcdfc2e026c841 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f f76d6a078d881f410c00e8d900dcdfc2e026c841
Commit message: "Merge pull request #38370 from farnasirim/36413-bind-dir-skip-copy"
 > git rev-list --no-walk f76d6a078d881f410c00e8d900dcdfc2e026c841 # timeout=10
Set build name.
New build name is '#38392'
[Docker-PRs-experimental] $ /bin/bash /tmp/jenkins1390874216239594903.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38392/head -> origin/pr/38392
Merge made by the 'recursive' strategy.
 hack/ci/windows.ps1 | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)
Sending build context to Docker daemon  45.09MB
Step 1/94 : FROM golang:1.11.4 AS base
 ---> 343df9d12b7b
Step 2/94 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> 73a17bb52f04
Step 3/94 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> b1f4e57014d9
Step 4/94 : FROM base AS criu
 ---> b1f4e57014d9
Step 5/94 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> 156ef5283b8d
Step 6/94 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> 760e680c1237
Step 7/94 : FROM base AS registry
 ---> b1f4e57014d9
Step 8/94 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> c9361018604f
Step 9/94 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> 508f26366d0c
Step 10/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 263374e22a5f
Step 11/94 : FROM base AS docker-py
 ---> b1f4e57014d9
Step 12/94 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> 4c1a4f08ca41
Step 13/94 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> 0b2a2a6745c4
Step 14/94 : FROM base AS swagger
 ---> b1f4e57014d9
Step 15/94 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> 7a0ae0f6f74d
Step 16/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 0a037efc3edd
Step 17/94 : FROM base AS frozen-images
 ---> b1f4e57014d9
Step 18/94 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> 04ee3bb7db3d
Step 19/94 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> 70e234b200bf
Step 20/94 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> a9e0cb393ff7
Step 21/94 : FROM base AS runtime-dev
 ---> b1f4e57014d9
Step 22/94 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> 456a681fbd8e
Step 23/94 : FROM base AS tomlv
 ---> b1f4e57014d9
Step 24/94 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> 856e8353d203
Step 25/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 86a1211d47e1
Step 26/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 3af918bca596
Step 27/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> d7f4724e1d1b
Step 28/94 : FROM base AS vndr
 ---> b1f4e57014d9
Step 29/94 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> a18a6ded267e
Step 30/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 78450c1d2622
Step 31/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 6da422cf38a2
Step 32/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> e1ab50d0de90
Step 33/94 : FROM base AS containerd
 ---> b1f4e57014d9
Step 34/94 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> f8eb495db5be
Step 35/94 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> ea64dfa13ab6
Step 36/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 64ca99e5eb42
Step 37/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 860a74f00b94
Step 38/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Running in 94018bc979df
+ RM_GOPATH=0
+ TMP_GOPATH=
+ : /build
+ [[ -z '' ]]
++ mktemp -d
+ export GOPATH=/tmp/tmp.q9ABoWXtlI
+ GOPATH=/tmp/tmp.q9ABoWXtlI
+ RM_GOPATH=1
++ dirname ./install.sh
+ dir=.
+ bin=containerd
+ shift
+ [[ ! -f ./containerd.installer ]]
+ . ./containerd.installer
++ CONTAINERD_COMMIT=aa5e000c963756778ab3ebd1a12c67449c503a34
+ install_containerd
+ echo 'Install containerd version aa5e000c963756778ab3ebd1a12c67449c503a34'
+ git clone https://github.com/containerd/containerd.git /tmp/tmp.q9ABoWXtlI/src/github.com/containerd/containerd
Cloning into '/tmp/tmp.q9ABoWXtlI/src/github.com/containerd/containerd'...
Install containerd version aa5e000c963756778ab3ebd1a12c67449c503a34
+ cd /tmp/tmp.q9ABoWXtlI/src/github.com/containerd/containerd
+ git checkout -q aa5e000c963756778ab3ebd1a12c67449c503a34
+ export 'BUILDTAGS=netgo osusergo static_build'
+ BUILDTAGS='netgo osusergo static_build'
+ export EXTRA_FLAGS=-buildmode=pie
+ EXTRA_FLAGS=-buildmode=pie
+ export 'EXTRA_LDFLAGS=-extldflags "-fno-PIC -static"'
+ EXTRA_LDFLAGS='-extldflags "-fno-PIC -static"'
+ '[' '' == dynamic ']'
+ make
ðŸ‡© bin/ctr
Set build name.
New build name is '#38392'
Build was aborted
Aborted by Gordon
[PostBuildScript] - Executing post build scripts.
/tmp/jenkins1390874216239594903.sh: line 11: 22895 Terminated              docker build --rm --force-rm --build-arg APT_MIRROR=cdn-fastly.deb.debian.org -t docker:${GITCOMMIT}-exp .
[Docker-PRs-experimental] $ /bin/sh -xe /tmp/jenkins2057474061963516071.sh
+ echo Ensuring container killed.
Ensuring container killed.
+ docker rm -vf docker-pr-exp43465
Error: No such container: docker-pr-exp43465
+ true
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/ubuntu/workspace/Docker-PRs-experimental:/workspace busybox chown -R 1000:1000 /workspace
[Docker-PRs-experimental] $ /bin/sh -xe /tmp/jenkins2783035012871685310.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ + xargs tar -czf bundles.tar.gz
find bundles -name *.log
find: â€˜bundlesâ€™: No such file or directory
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: ABORTED
