Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on s390x-ubuntu-32 (linux s390x-ubuntu-1604 s390x) in workspace /home/jenkins/workspace/Docker-PRs-s390x
Running Prebuild steps
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins2831112863194009988.sh
+ pwd
+ id -u
+ id -g
+ docker run --rm -v /home/jenkins/workspace/Docker-PRs-s390x:/workspace s390x/busybox chown -R 1001:1001 /workspace
Success build forhudson.tasks.Shell@2d096b56
No credentials specified
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/jenkins/workspace/Docker-PRs-s390x # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision 8d760280a232f98d92440539e1e8a8f66c213bdb (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 8d760280a232f98d92440539e1e8a8f66c213bdb
Commit message: "Merge pull request #39275 from wiktor-k/move-var-run-to-run"
 > git rev-list --no-walk 8d760280a232f98d92440539e1e8a8f66c213bdb # timeout=10
Set build name.
New build name is '#39292'
[Docker-PRs-s390x] $ /bin/bash /tmp/jenkins6654111315928200656.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/39292/head -> origin/pr/39292
Updating 8d76028..8978894
Fast-forward
 daemon/archive.go                    |  15 ++--
 daemon/export.go                     |   2 +-
 pkg/chrootarchive/archive.go         |  32 +++++++-
 pkg/chrootarchive/archive_unix.go    | 137 ++++++++++++++++++++++++++++++++++-
 pkg/chrootarchive/archive_windows.go |   9 ++-
 pkg/chrootarchive/init_unix.go       |   1 +
 6 files changed, 179 insertions(+), 17 deletions(-)
Sending build context to Docker daemon     48MB
Step 1/112 : ARG CROSS="false"
Step 2/112 : FROM golang:1.12.5 AS base
 ---> b47f884b941c
Step 3/112 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> d90cdbc195d5
Step 4/112 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> f91963806a2f
Step 5/112 : FROM base AS criu
 ---> f91963806a2f
Step 6/112 : ENV CRIU_VERSION 3.11
 ---> Using cache
 ---> 460636872507
Step 7/112 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> 110476ce6ef4
Step 8/112 : FROM base AS registry
 ---> f91963806a2f
Step 9/112 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> 6287b0630299
Step 10/112 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 7d4eb6b2e4e6
Step 11/112 : FROM base AS docker-py
 ---> f91963806a2f
Step 12/112 : ENV DOCKER_PY_COMMIT ac922192959870774ad8428344d9faa0555f7ba6
 ---> Using cache
 ---> c5355cdc7693
Step 13/112 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> 722027c7eee9
Step 14/112 : FROM base AS swagger
 ---> f91963806a2f
Step 15/112 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> cc1abb72c4d4
Step 16/112 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> a477d5c81bcc
Step 17/112 : FROM base AS frozen-images
 ---> f91963806a2f
Step 18/112 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> c35154865740
Step 19/112 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> 295372740a36
Step 20/112 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> 0315b04a4f25
Step 21/112 : FROM base AS cross-false
 ---> f91963806a2f
Step 22/112 : FROM base AS cross-true
 ---> f91963806a2f
Step 23/112 : RUN dpkg --add-architecture armhf
 ---> Using cache
 ---> 622a4cfee0c5
Step 24/112 : RUN dpkg --add-architecture arm64
 ---> Using cache
 ---> c5897b5eaa33
Step 25/112 : RUN dpkg --add-architecture armel
 ---> Using cache
 ---> 8cb76a8aa331
Step 26/112 : RUN if [ "$(go env GOHOSTARCH)" = "amd64" ]; then 	apt-get update 	&& apt-get install -y --no-install-recommends 		crossbuild-essential-armhf 		crossbuild-essential-arm64 		crossbuild-essential-armel; 	fi
 ---> Using cache
 ---> ca8a8c976c61
Step 27/112 : FROM cross-${CROSS} as dev-base
 ---> f91963806a2f
Step 28/112 : FROM dev-base AS runtime-dev-cross-false
 ---> f91963806a2f
Step 29/112 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> ca2c59485581
Step 30/112 : FROM cross-true AS runtime-dev-cross-true
 ---> ca8a8c976c61
Step 31/112 : RUN if [ "$(go env GOHOSTARCH)" = "amd64" ]; then 	apt-get update 	&& apt-get install -y 		libseccomp-dev:armhf 		libseccomp-dev:arm64 		libseccomp-dev:armel 		libapparmor-dev:armhf 		libapparmor-dev:arm64 		libapparmor-dev:armel 		libapparmor-dev 		libseccomp-dev; 	fi
 ---> Using cache
 ---> c8809459d09c
Step 32/112 : FROM runtime-dev-cross-${CROSS} AS runtime-dev
 ---> ca2c59485581
Step 33/112 : FROM base AS tomlv
 ---> f91963806a2f
Step 34/112 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> d7e8333e4fa1
Step 35/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 95035a14ddf6
Step 36/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> d44e4f312c3d
Step 37/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> c79b07d4438a
Step 38/112 : FROM base AS vndr
 ---> f91963806a2f
Step 39/112 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> cc34d3683418
Step 40/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 1d38057b8ef0
Step 41/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 0f3bcac5acd9
Step 42/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 286528be3ae4
Step 43/112 : FROM dev-base AS containerd
 ---> f91963806a2f
Step 44/112 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> 15960d947a7f
Step 45/112 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> f44d720b77fc
Step 46/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 4d7f315b3de5
Step 47/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 184684b02053
Step 48/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 14f21fd33b66
Step 49/112 : FROM dev-base AS proxy
 ---> f91963806a2f
Step 50/112 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> 7f5e64e375a4
Step 51/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 441ff2bb30e8
Step 52/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> a6949937b153
Step 53/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 16ba20a4f995
Step 54/112 : FROM base AS gometalinter
 ---> f91963806a2f
Step 55/112 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> d25ea379fd05
Step 56/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 620820417b3d
Step 57/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 594b5db2e7a6
Step 58/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> ee9b6ab41fc6
Step 59/112 : FROM dev-base AS dockercli
 ---> f91963806a2f
Step 60/112 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> a941a7d49837
Step 61/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 0624cdb5283b
Step 62/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 1c42a2815cc4
Step 63/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 4327ee5a431a
Step 64/112 : FROM runtime-dev AS runc
 ---> ca2c59485581
Step 65/112 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> fbd4505fd0ae
Step 66/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> d52011855725
Step 67/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> d8a40a050f34
Step 68/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 74a2c6c67842
Step 69/112 : FROM dev-base AS tini
 ---> f91963806a2f
Step 70/112 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> 5d05fc2bf851
Step 71/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 711509c16874
Step 72/112 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> 7e74358717b0
Step 73/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 1e650bb2a4d5
Step 74/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> a246313a7030
Step 75/112 : FROM dev-base AS rootlesskit
 ---> f91963806a2f
Step 76/112 : ENV INSTALL_BINARY_NAME=rootlesskit
 ---> Using cache
 ---> c7e01662c498
Step 77/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> a5eb557e0773
Step 78/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> f3852ab318c7
Step 79/112 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 257105aa8820
Step 80/112 : COPY ./contrib/dockerd-rootless.sh /build
 ---> Using cache
 ---> a3f7c9f7076e
Step 81/112 : FROM runtime-dev AS dev
 ---> ca2c59485581
Step 82/112 : RUN groupadd -r docker
 ---> Using cache
 ---> fc891cefb008
Step 83/112 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> 39249df3d31e
Step 84/112 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> 3f8dd815b084
Step 85/112 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> 4e071c7bbce4
Step 86/112 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> 95fd525ca56b
Step 87/112 : RUN ldconfig
 ---> Using cache
 ---> 098ac9e051e7
Step 88/112 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libffi-dev 	libssl-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-cffi 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	libprotobuf-c1 	libnet1 	libnl-3-200 	--no-install-recommends
 ---> Using cache
 ---> 83ec64d92d52
Step 89/112 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> 076e1adda69d
Step 90/112 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> 6851f7701887
Step 91/112 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> 090e756891ca
Step 92/112 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> 056d2cf8d6d8
Step 93/112 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> bdfdea8cb06f
Step 94/112 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> 2f50554040dd
Step 95/112 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> 8c16b75db8bc
Step 96/112 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> d94a997f0580
Step 97/112 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> 319c19b55196
Step 98/112 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> d72079629753
Step 99/112 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> a417268494f3
Step 100/112 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> df4a8bbf5179
Step 101/112 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> 9ee318ed6a36
Step 102/112 : RUN cd /docker-py 	&& pip install docker-pycreds==0.4.0 	&& pip install paramiko==2.4.2 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> 0decbfda9bef
Step 103/112 : COPY --from=rootlesskit /build/ /usr/local/bin/
 ---> Using cache
 ---> b86bd31d0797
Step 104/112 : COPY --from=djs55/vpnkit@sha256:e508a17cfacc8fd39261d5b4e397df2b953690da577e2c987a47630cd0c42f8e /vpnkit /usr/local/bin/vpnkit.x86_64
 ---> Using cache
 ---> f758f9b33822
Step 105/112 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> 158bdd791c61
Step 106/112 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> 3a423ab7cac3
Step 107/112 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> 16ec577749f9
Step 108/112 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> 44a3a8afd57e
Step 109/112 : VOLUME /var/lib/docker
 ---> Using cache
 ---> 74e85700f639
Step 110/112 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> df3e9c258b75
Step 111/112 : FROM dev AS final
 ---> df3e9c258b75
Step 112/112 : COPY . /go/src/github.com/docker/docker
 ---> d5db61ee887a
Successfully built d5db61ee887a
Successfully tagged docker-s390x:8978894
?   	github.com/docker/docker/api	[no test files]
ok  	github.com/docker/docker/api/server	0.005s	coverage: 7.9% of statements
?   	github.com/docker/docker/api/server/backend/build	[no test files]
ok  	github.com/docker/docker/api/server/httputils	0.004s	coverage: 14.7% of statements
ok  	github.com/docker/docker/api/server/middleware	0.005s	coverage: 43.4% of statements
?   	github.com/docker/docker/api/server/router	[no test files]
?   	github.com/docker/docker/api/server/router/build	[no test files]
?   	github.com/docker/docker/api/server/router/checkpoint	[no test files]
?   	github.com/docker/docker/api/server/router/container	[no test files]
?   	github.com/docker/docker/api/server/router/debug	[no test files]
?   	github.com/docker/docker/api/server/router/distribution	[no test files]
?   	github.com/docker/docker/api/server/router/grpc	[no test files]
?   	github.com/docker/docker/api/server/router/image	[no test files]
?   	github.com/docker/docker/api/server/router/network	[no test files]
?   	github.com/docker/docker/api/server/router/plugin	[no test files]
?   	github.com/docker/docker/api/server/router/session	[no test files]
ok  	github.com/docker/docker/api/server/router/swarm	0.004s	coverage: 3.1% of statements
?   	github.com/docker/docker/api/server/router/system	[no test files]
?   	github.com/docker/docker/api/server/router/volume	[no test files]
?   	github.com/docker/docker/api/types	[no test files]
?   	github.com/docker/docker/api/types/backend	[no test files]
?   	github.com/docker/docker/api/types/blkiodev	[no test files]
?   	github.com/docker/docker/api/types/container	[no test files]
?   	github.com/docker/docker/api/types/events	[no test files]
ok  	github.com/docker/docker/api/types/filters	0.004s	coverage: 95.2% of statements
?   	github.com/docker/docker/api/types/image	[no test files]
?   	github.com/docker/docker/api/types/mount	[no test files]
?   	github.com/docker/docker/api/types/network	[no test files]
?   	github.com/docker/docker/api/types/plugins/logdriver	[no test files]
?   	github.com/docker/docker/api/types/registry	[no test files]
ok  	github.com/docker/docker/api/types/strslice	0.003s	coverage: 90.0% of statements
?   	github.com/docker/docker/api/types/swarm	[no test files]
?   	github.com/docker/docker/api/types/swarm/runtime	[no test files]
ok  	github.com/docker/docker/api/types/time	0.003s	coverage: 100.0% of statements
ok  	github.com/docker/docker/api/types/versions	0.002s	coverage: 75.0% of statements
?   	github.com/docker/docker/api/types/versions/v1p19	[no test files]
?   	github.com/docker/docker/api/types/versions/v1p20	[no test files]
?   	github.com/docker/docker/api/types/volume	[no test files]
?   	github.com/docker/docker/builder	[no test files]
?   	github.com/docker/docker/builder/builder-next	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/containerimage	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/localinlinecache	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/snapshot	[no test files]
?   	github.com/docker/docker/builder/builder-next/exporter	[no test files]
?   	github.com/docker/docker/builder/builder-next/imagerefchecker	[no test files]
?   	github.com/docker/docker/builder/builder-next/worker	[no test files]
ok  	github.com/docker/docker/builder/dockerfile	0.749s	coverage: 45.1% of statements
ok  	github.com/docker/docker/builder/dockerignore	0.002s	coverage: 96.8% of statements
ok  	github.com/docker/docker/builder/fscache	0.112s	coverage: 69.2% of statements
ok  	github.com/docker/docker/builder/remotecontext	0.318s	coverage: 13.6% of statements
ok  	github.com/docker/docker/builder/remotecontext/git	0.584s	coverage: 85.1% of statements
?   	github.com/docker/docker/cli	[no test files]
?   	github.com/docker/docker/cli/config	[no test files]
ok  	github.com/docker/docker/cli/debug	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/client	0.147s	coverage: 75.8% of statements
ok  	github.com/docker/docker/cmd/dockerd	0.039s	coverage: 29.0% of statements
ok  	github.com/docker/docker/cmd/dockerd/hack	0.002s	coverage: 72.9% of statements
ok  	github.com/docker/docker/container	0.113s	coverage: 35.6% of statements
?   	github.com/docker/docker/container/stream	[no test files]
?   	github.com/docker/docker/contrib/apparmor	[no test files]
?   	github.com/docker/docker/contrib/docker-device-tool	[no test files]
?   	github.com/docker/docker/contrib/httpserver	[no test files]
/tmp/jenkins6654111315928200656.sh: line 22: 26687 Terminated              docker run --rm -t --privileged -v "$WORKSPACE/bundles:/go/src/github.com/docker/docker/bundles" --name docker-pr-s390x$BUILD_NUMBER -e DOCKER_GRAPHDRIVER=vfs -e DOCKER_EXECDRIVER=native -e TIMEOUT="300m" -e DOCKER_GITCOMMIT=${GITCOMMIT} docker-s390x:$GITCOMMIT hack/ci/z
Set build name.
New build name is '#39292'
Build was aborted
Aborted by Gordon
[PostBuildScript] - Executing post build scripts.
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins1814664740010754534.sh
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/jenkins/workspace/Docker-PRs-s390x:/workspace s390x/busybox chown -R 1001:1001 /workspace
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins2925196194211927082.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ xargs tar -czf bundles.tar.gz
+ find bundles -name *.log
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
Finished: ABORTED
