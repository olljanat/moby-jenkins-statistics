Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on s390x-ubuntu-25 (linux s390x-ubuntu-1604 s390x) in workspace /home/jenkins/workspace/Docker-PRs-s390x
Running Prebuild steps
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins1800741348394572475.sh
+ pwd
+ id -u
+ id -g
+ docker run --rm -v /home/jenkins/workspace/Docker-PRs-s390x:/workspace s390x/busybox chown -R 1001:1001 /workspace
Unable to find image 's390x/busybox:latest' locally
latest: Pulling from s390x/busybox
e27cb5f7cb08: Pulling fs layer
e27cb5f7cb08: Verifying Checksum
e27cb5f7cb08: Download complete
e27cb5f7cb08: Pull complete
Digest: sha256:a96ac102195557231128367b35920c085157ee8c5e378cb2842147f0b71e9d58
Status: Downloaded newer image for s390x/busybox:latest
Success build forhudson.tasks.Shell@54493290
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/jenkins/workspace/Docker-PRs-s390x # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision 2b7e084dc98b1259e3be82d4c8d4fdfdcf615ba5 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 2b7e084dc98b1259e3be82d4c8d4fdfdcf615ba5
Commit message: "Merge pull request #38473 from thaJeztah/use_testenv_client"
 > git rev-list --no-walk 2b7e084dc98b1259e3be82d4c8d4fdfdcf615ba5 # timeout=10
Set build name.
New build name is '#38486'
[Docker-PRs-s390x] $ /bin/bash /tmp/jenkins2966634490745477744.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38486/head -> origin/pr/38486
Updating 2b7e084..c8ff5ec
Fast-forward
 client/README.md                                   |   2 +-
 client/client.go                                   |   2 +-
 client/client_test.go                              |  16 ++--
 client/container_logs_test.go                      |   2 +-
 client/container_wait_test.go                      |   2 +-
 client/service_logs_test.go                        |   2 +-
 .../agent/worker/executor.go                       |   2 +-
 hack/integration-cli-on-swarm/host/host.go         |   2 +-
 integration-cli/docker_api_attach_test.go          |   2 +-
 integration-cli/docker_api_containers_test.go      | 102 ++++++++++-----------
 integration-cli/docker_api_exec_test.go            |   4 +-
 integration-cli/docker_api_images_test.go          |   6 +-
 integration-cli/docker_api_inspect_test.go         |   2 +-
 integration-cli/docker_api_logs_test.go            |   8 +-
 integration-cli/docker_api_stats_test.go           |   2 +-
 integration-cli/docker_cli_events_test.go          |   2 +-
 integration-cli/docker_cli_exec_test.go            |   2 +-
 .../docker_cli_plugins_logdriver_test.go           |   2 +-
 integration-cli/docker_cli_run_test.go             |   2 +-
 integration-cli/docker_cli_run_unix_test.go        |   2 +-
 integration-cli/docker_cli_update_unix_test.go     |   2 +-
 integration-cli/docker_cli_volume_test.go          |   2 +-
 integration-cli/docker_utils_test.go               |   4 +-
 integration-cli/requirements_test.go               |   2 +-
 integration/container/mounts_linux_test.go         |   2 +-
 internal/test/daemon/daemon.go                     |   2 +-
 26 files changed, 90 insertions(+), 90 deletions(-)
Sending build context to Docker daemon   45.1MB
Step 1/94 : FROM golang:1.11.4 AS base
1.11.4: Pulling from library/golang
c5e4ba148bd1: Pulling fs layer
e4ab879437b7: Pulling fs layer
a26d08cd7690: Pulling fs layer
05dfbcf77830: Pulling fs layer
8c8a7e70110e: Pulling fs layer
3455ff1f6719: Pulling fs layer
f5c4a8ef739f: Pulling fs layer
8c8a7e70110e: Waiting
3455ff1f6719: Waiting
f5c4a8ef739f: Waiting
05dfbcf77830: Waiting
e4ab879437b7: Verifying Checksum
e4ab879437b7: Download complete
c5e4ba148bd1: Verifying Checksum
c5e4ba148bd1: Download complete
a26d08cd7690: Verifying Checksum
a26d08cd7690: Download complete
05dfbcf77830: Verifying Checksum
05dfbcf77830: Download complete
f5c4a8ef739f: Verifying Checksum
f5c4a8ef739f: Download complete
8c8a7e70110e: Verifying Checksum
8c8a7e70110e: Download complete
c5e4ba148bd1: Pull complete
e4ab879437b7: Pull complete
a26d08cd7690: Pull complete
3455ff1f6719: Verifying Checksum
3455ff1f6719: Download complete
05dfbcf77830: Pull complete
8c8a7e70110e: Pull complete
3455ff1f6719: Pull complete
f5c4a8ef739f: Pull complete
Digest: sha256:4f1cd313c3d59faa0ca93910f9d853bd74be7afbf6f6997aee06924415ec7dc9
Status: Downloaded newer image for golang:1.11.4
 ---> ee5c1a481166
Step 2/94 : ARG APT_MIRROR=deb.debian.org
 ---> Running in cb6ef0cd027d
Removing intermediate container cb6ef0cd027d
 ---> 4382bb2574ee
Step 3/94 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Running in fc86c6460f10
Removing intermediate container fc86c6460f10
 ---> 3634a0e6a1ea
Step 4/94 : FROM base AS criu
 ---> 3634a0e6a1ea
Step 5/94 : ENV CRIU_VERSION 3.6
 ---> Running in 0ff33e879d00
Removing intermediate container 0ff33e879d00
 ---> fa41c7dfe5cb
Step 6/94 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Running in ce52605273d9
Err:1 http://security.debian.org/debian-security stretch/updates InRelease
  Could not resolve 'security.debian.org'
Err:2 http://cdn-fastly.deb.debian.org/debian stretch InRelease
  Could not resolve 'cdn-fastly.deb.debian.org'
Err:3 http://cdn-fastly.deb.debian.org/debian stretch-updates InRelease
  Could not resolve 'cdn-fastly.deb.debian.org'
Reading package lists...
W: Failed to fetch http://cdn-fastly.deb.debian.org/debian/dists/stretch/InRelease  Could not resolve 'cdn-fastly.deb.debian.org'
W: Failed to fetch http://security.debian.org/debian-security/dists/stretch/updates/InRelease  Could not resolve 'security.debian.org'
W: Failed to fetch http://cdn-fastly.deb.debian.org/debian/dists/stretch-updates/InRelease  Could not resolve 'cdn-fastly.deb.debian.org'
W: Some index files failed to download. They have been ignored, or old ones used instead.
Reading package lists...
Building dependency tree...
Reading state information...
E: Unable to locate package libnet-dev
E: Unable to locate package libprotobuf-c0-dev
E: Unable to locate package libprotobuf-dev
E: Unable to locate package libnl-3-dev
E: Unable to locate package libcap-dev
E: Unable to locate package protobuf-compiler
E: Unable to locate package protobuf-c-compiler
E: Unable to locate package python-protobuf
Removing intermediate container ce52605273d9
The command '/bin/sh -c apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu' returned a non-zero code: 100
Unable to find image 'docker-s390x:c8ff5ec' locally
docker: Error response from daemon: pull access denied for docker-s390x, repository does not exist or may require 'docker login'.
See 'docker run --help'.
Build step 'Execute shell' marked build as failure
Set build name.
New build name is '#38486'
[PostBuildScript] - Executing post build scripts.
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins2755344682677637775.sh
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/jenkins/workspace/Docker-PRs-s390x:/workspace s390x/busybox chown -R 1001:1001 /workspace
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins7228541132433833669.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ xargs tar -czf bundles.tar.gz
+ find bundles -name *.log
find: ‘bundles’: No such file or directory
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
Finished: FAILURE
