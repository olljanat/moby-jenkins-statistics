Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on s390x-ubuntu-28 (linux s390x-ubuntu-1604 s390x) in workspace /home/jenkins/workspace/Docker-PRs-s390x
Running Prebuild steps
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins3461032301677826251.sh
+ pwd
+ id -u
+ id -g
+ docker run --rm -v /home/jenkins/workspace/Docker-PRs-s390x:/workspace s390x/busybox chown -R 1001:1001 /workspace
Success build forhudson.tasks.Shell@54493290
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/jenkins/workspace/Docker-PRs-s390x # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision 77df18c24acf62778f132d30a058d559a0b8b2ba (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 77df18c24acf62778f132d30a058d559a0b8b2ba
Commit message: "Merge pull request #38509 from thaJeztah/bump_containerd_v1.2.2"
 > git rev-list --no-walk 77df18c24acf62778f132d30a058d559a0b8b2ba # timeout=10
Set build name.
New build name is '#38499'
[Docker-PRs-s390x] $ /bin/bash /tmp/jenkins4787451937460735503.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38499/head -> origin/pr/38499
Merge made by the 'recursive' strategy.
 integration/service/update_test.go | 34 +++++++++++++++++++++++++++-------
 1 file changed, 27 insertions(+), 7 deletions(-)
Sending build context to Docker daemon  45.11MB
Step 1/94 : FROM golang:1.11.4 AS base
 ---> ee5c1a481166
Step 2/94 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> fdf719209cd2
Step 3/94 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> 9f03b0fae8e8
Step 4/94 : FROM base AS criu
 ---> 9f03b0fae8e8
Step 5/94 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> 1d7c25250574
Step 6/94 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> a9047d97b72e
Step 7/94 : FROM base AS registry
 ---> 9f03b0fae8e8
Step 8/94 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> 3682911425e5
Step 9/94 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> d3a1d6ad99a8
Step 10/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 3b94c2a2e0c7
Step 11/94 : FROM base AS docker-py
 ---> 9f03b0fae8e8
Step 12/94 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> df514735a90e
Step 13/94 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> 0c34c0ff7f80
Step 14/94 : FROM base AS swagger
 ---> 9f03b0fae8e8
Step 15/94 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> 50775075d906
Step 16/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 1225f2ce09b0
Step 17/94 : FROM base AS frozen-images
 ---> 9f03b0fae8e8
Step 18/94 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> e733288d7e77
Step 19/94 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> f59c54c035a5
Step 20/94 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> c5b4b32e5852
Step 21/94 : FROM base AS runtime-dev
 ---> 9f03b0fae8e8
Step 22/94 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> c030846e4619
Step 23/94 : FROM base AS tomlv
 ---> 9f03b0fae8e8
Step 24/94 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> 243f821c1b3d
Step 25/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 71462d88517f
Step 26/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 1fc809662dac
Step 27/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> db3fbd05451d
Step 28/94 : FROM base AS vndr
 ---> 9f03b0fae8e8
Step 29/94 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> 138289543329
Step 30/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> c1d0a0274abc
Step 31/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 19dc780fda15
Step 32/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 65fd81039ac2
Step 33/94 : FROM base AS containerd
 ---> 9f03b0fae8e8
Step 34/94 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> a295d5d1a968
Step 35/94 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> be2b37b7c9c4
Step 36/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> b0a0e856c49f
Step 37/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 75c4c21c51ad
Step 38/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> b4deef9dfa5c
Step 39/94 : FROM base AS proxy
 ---> 9f03b0fae8e8
Step 40/94 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> 33b7cfaafd3e
Step 41/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 65e3a9c7eafe
Step 42/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> d48ea6812c71
Step 43/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 99d55981403c
Step 44/94 : FROM base AS gometalinter
 ---> 9f03b0fae8e8
Step 45/94 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> b92093f0ba02
Step 46/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 46a44503d36c
Step 47/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 8f1fddb8d0bd
Step 48/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> fc5b064f34b8
Step 49/94 : FROM base AS dockercli
 ---> 9f03b0fae8e8
Step 50/94 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> 0021beec52ba
Step 51/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 141c7567de38
Step 52/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 7132d45e04e3
Step 53/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 081af2e3664f
Step 54/94 : FROM runtime-dev AS runc
 ---> c030846e4619
Step 55/94 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> 8c51494e22a8
Step 56/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> cb93cc7a935c
Step 57/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 9c476f297291
Step 58/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> b93d605b8f07
Step 59/94 : FROM base AS tini
 ---> 9f03b0fae8e8
Step 60/94 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> 655e921bfc64
Step 61/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 053c0e760f59
Step 62/94 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> 9be6f730b8a4
Step 63/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 100114958ab7
Step 64/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> c3f114a05503
Step 65/94 : FROM runtime-dev AS dev
 ---> c030846e4619
Step 66/94 : RUN groupadd -r docker
 ---> Using cache
 ---> 1ce742b37915
Step 67/94 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> 6d4e54e456d9
Step 68/94 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> 1669cd04fa04
Step 69/94 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> be297e830ba1
Step 70/94 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> 5729e41fc21a
Step 71/94 : RUN ldconfig
 ---> Using cache
 ---> 0c5bb8e08a0f
Step 72/94 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> c5e970615cae
Step 73/94 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> 2e480bbcbf72
Step 74/94 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> 55feb5dff495
Step 75/94 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> ec4b68886275
Step 76/94 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> 4287ac715187
Step 77/94 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> b788f2ea9c04
Step 78/94 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> 4dd689c5bed5
Step 79/94 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> ceb1e76e32be
Step 80/94 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> 9d5f051b4eda
Step 81/94 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> 44a4274c66ca
Step 82/94 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> e8939a0246b8
Step 83/94 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> 0cec1d7ee500
Step 84/94 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> 447efe77ec43
Step 85/94 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> b70bf22e56cd
Step 86/94 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> 82187a5ba1b1
Step 87/94 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> 7b4022cd389e
Step 88/94 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> fa3d3fc7c1dc
Step 89/94 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> 5e279130833a
Step 90/94 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> b2fe23d3f736
Step 91/94 : VOLUME /var/lib/docker
 ---> Using cache
 ---> bf2d970a2a11
Step 92/94 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 5ba4dcea8b1a
Step 93/94 : FROM dev AS final
 ---> 5ba4dcea8b1a
Step 94/94 : COPY . /go/src/github.com/docker/docker
 ---> ce97aa7aab55
Successfully built ce97aa7aab55
Successfully tagged docker-s390x:8f23043
?   	github.com/docker/docker/api	[no test files]
ok  	github.com/docker/docker/api/server	0.004s	coverage: 7.9% of statements
?   	github.com/docker/docker/api/server/backend/build	[no test files]
ok  	github.com/docker/docker/api/server/httputils	0.004s	coverage: 11.1% of statements
ok  	github.com/docker/docker/api/server/middleware	0.004s	coverage: 43.4% of statements
?   	github.com/docker/docker/api/server/router	[no test files]
?   	github.com/docker/docker/api/server/router/build	[no test files]
?   	github.com/docker/docker/api/server/router/checkpoint	[no test files]
?   	github.com/docker/docker/api/server/router/container	[no test files]
?   	github.com/docker/docker/api/server/router/debug	[no test files]
?   	github.com/docker/docker/api/server/router/distribution	[no test files]
?   	github.com/docker/docker/api/server/router/image	[no test files]
?   	github.com/docker/docker/api/server/router/network	[no test files]
?   	github.com/docker/docker/api/server/router/plugin	[no test files]
?   	github.com/docker/docker/api/server/router/session	[no test files]
?   	github.com/docker/docker/api/server/router/swarm	[no test files]
?   	github.com/docker/docker/api/server/router/system	[no test files]
?   	github.com/docker/docker/api/server/router/volume	[no test files]
?   	github.com/docker/docker/api/types	[no test files]
?   	github.com/docker/docker/api/types/backend	[no test files]
?   	github.com/docker/docker/api/types/blkiodev	[no test files]
?   	github.com/docker/docker/api/types/container	[no test files]
?   	github.com/docker/docker/api/types/events	[no test files]
ok  	github.com/docker/docker/api/types/filters	0.003s	coverage: 94.2% of statements
?   	github.com/docker/docker/api/types/image	[no test files]
?   	github.com/docker/docker/api/types/mount	[no test files]
?   	github.com/docker/docker/api/types/network	[no test files]
?   	github.com/docker/docker/api/types/plugins/logdriver	[no test files]
?   	github.com/docker/docker/api/types/registry	[no test files]
ok  	github.com/docker/docker/api/types/strslice	0.002s	coverage: 90.0% of statements
?   	github.com/docker/docker/api/types/swarm	[no test files]
?   	github.com/docker/docker/api/types/swarm/runtime	[no test files]
ok  	github.com/docker/docker/api/types/time	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/api/types/versions	0.002s	coverage: 75.0% of statements
?   	github.com/docker/docker/api/types/versions/v1p19	[no test files]
?   	github.com/docker/docker/api/types/versions/v1p20	[no test files]
?   	github.com/docker/docker/api/types/volume	[no test files]
?   	github.com/docker/docker/builder	[no test files]
?   	github.com/docker/docker/builder/builder-next	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/containerimage	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/snapshot	[no test files]
?   	github.com/docker/docker/builder/builder-next/exporter	[no test files]
?   	github.com/docker/docker/builder/builder-next/imagerefchecker	[no test files]
?   	github.com/docker/docker/builder/builder-next/worker	[no test files]
ok  	github.com/docker/docker/builder/dockerfile	0.780s	coverage: 45.4% of statements
ok  	github.com/docker/docker/builder/dockerignore	0.002s	coverage: 96.8% of statements
ok  	github.com/docker/docker/builder/fscache	0.110s	coverage: 69.2% of statements
ok  	github.com/docker/docker/builder/remotecontext	0.303s	coverage: 13.7% of statements
ok  	github.com/docker/docker/builder/remotecontext/git	0.500s	coverage: 78.8% of statements
?   	github.com/docker/docker/cli	[no test files]
?   	github.com/docker/docker/cli/config	[no test files]
ok  	github.com/docker/docker/cli/debug	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/client	0.140s	coverage: 75.6% of statements
ok  	github.com/docker/docker/cmd/dockerd	0.038s	coverage: 31.4% of statements
ok  	github.com/docker/docker/cmd/dockerd/hack	0.002s	coverage: 72.9% of statements
ok  	github.com/docker/docker/container	0.112s	coverage: 35.6% of statements
?   	github.com/docker/docker/container/stream	[no test files]
?   	github.com/docker/docker/contrib/apparmor	[no test files]
?   	github.com/docker/docker/contrib/docker-device-tool	[no test files]
?   	github.com/docker/docker/contrib/httpserver	[no test files]
ok  	github.com/docker/docker/daemon	12.190s	coverage: 17.1% of statements
ok  	github.com/docker/docker/daemon/cluster	0.028s	coverage: 0.5% of statements
ok  	github.com/docker/docker/daemon/cluster/controllers/plugin	0.008s	coverage: 65.3% of statements
ok  	github.com/docker/docker/daemon/cluster/convert	0.007s	coverage: 28.0% of statements
?   	github.com/docker/docker/daemon/cluster/executor	[no test files]
ok  	github.com/docker/docker/daemon/cluster/executor/container	3.432s	coverage: 12.7% of statements
?   	github.com/docker/docker/daemon/cluster/provider	[no test files]
ok  	github.com/docker/docker/daemon/config	0.046s	coverage: 84.8% of statements
ok  	github.com/docker/docker/daemon/discovery	0.004s	coverage: 30.4% of statements
ok  	github.com/docker/docker/daemon/events	0.058s	coverage: 50.0% of statements
?   	github.com/docker/docker/daemon/events/testutils	[no test files]
?   	github.com/docker/docker/daemon/exec	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver	0.004s	coverage: 2.2% of statements
/tmp/jenkins4787451937460735503.sh: line 22:  8943 Terminated              docker run --rm -t --privileged -v "$WORKSPACE/bundles:/go/src/github.com/docker/docker/bundles" --name docker-pr-s390x$BUILD_NUMBER -e DOCKER_GRAPHDRIVER=vfs -e DOCKER_EXECDRIVER=native -e TIMEOUT="300m" -e DOCKER_GITCOMMIT=${GITCOMMIT} docker-s390x:$GITCOMMIT hack/ci/z
Set build name.
New build name is '#38499'
Build was aborted
Aborted by Gordon
[PostBuildScript] - Executing post build scripts.
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins5092870875196873573.sh
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/jenkins/workspace/Docker-PRs-s390x:/workspace s390x/busybox chown -R 1001:1001 /workspace
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins6345425005986388687.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ xargs tar -czf bundles.tar.gz
+ find bundles -name *.log
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
Finished: ABORTED
