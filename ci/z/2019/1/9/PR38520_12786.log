Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on s390x-ubuntu-29 (linux s390x-ubuntu-1604 s390x) in workspace /home/jenkins/workspace/Docker-PRs-s390x
Running Prebuild steps
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins5410189263781960265.sh
+ pwd
+ id -u
+ id -g
+ docker run --rm -v /home/jenkins/workspace/Docker-PRs-s390x:/workspace s390x/busybox chown -R 1001:1001 /workspace
Success build forhudson.tasks.Shell@54493290
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/jenkins/workspace/Docker-PRs-s390x # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision cb501886db2b46594a66cc2f54e81b53097e5fd8 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f cb501886db2b46594a66cc2f54e81b53097e5fd8
Commit message: "Merge pull request #38456 from thaJeztah/make_errdefs_idempotent"
 > git rev-list --no-walk cb501886db2b46594a66cc2f54e81b53097e5fd8 # timeout=10
Set build name.
New build name is '#38520'
[Docker-PRs-s390x] $ /bin/bash /tmp/jenkins7115775342696701320.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38520/head -> origin/pr/38520
Updating cb50188..b3b739a
Fast-forward
 integration/service/update_test.go                 | 24 +++---------
 .../manager/orchestrator/update/updater.go         | 45 ++++++++++++++++------
 2 files changed, 38 insertions(+), 31 deletions(-)
Sending build context to Docker daemon  45.11MB
Step 1/94 : FROM golang:1.11.4 AS base
 ---> ee5c1a481166
Step 2/94 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> be3bb54b4151
Step 3/94 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> 52ff2c71657a
Step 4/94 : FROM base AS criu
 ---> 52ff2c71657a
Step 5/94 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> a9c577756f79
Step 6/94 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> 0ec5f3fdd10c
Step 7/94 : FROM base AS registry
 ---> 52ff2c71657a
Step 8/94 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> db45a082b595
Step 9/94 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> a197d9b6f7c0
Step 10/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> dd8a4ce2b57b
Step 11/94 : FROM base AS docker-py
 ---> 52ff2c71657a
Step 12/94 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> 6a10709bd00e
Step 13/94 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> fa50849f577c
Step 14/94 : FROM base AS swagger
 ---> 52ff2c71657a
Step 15/94 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> 0521f0b9eb93
Step 16/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> aa2691cfd43d
Step 17/94 : FROM base AS frozen-images
 ---> 52ff2c71657a
Step 18/94 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> d5b997b6127a
Step 19/94 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> ddcf8b791b97
Step 20/94 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> b7116192a4a6
Step 21/94 : FROM base AS runtime-dev
 ---> 52ff2c71657a
Step 22/94 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> db718622ceed
Step 23/94 : FROM base AS tomlv
 ---> 52ff2c71657a
Step 24/94 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> 4062e314b253
Step 25/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 212168066fcd
Step 26/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> fa7edf3a2ea2
Step 27/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 2fa0d5e2732d
Step 28/94 : FROM base AS vndr
 ---> 52ff2c71657a
Step 29/94 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> ff7197848206
Step 30/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 197eb3719c43
Step 31/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 40fe38044508
Step 32/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 6c2b5d225a04
Step 33/94 : FROM base AS containerd
 ---> 52ff2c71657a
Step 34/94 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> 08e34011fef5
Step 35/94 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> f0544c0696fc
Step 36/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> cf058a194a81
Step 37/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> fee1e4232a15
Step 38/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 0a5ef463c27e
Step 39/94 : FROM base AS proxy
 ---> 52ff2c71657a
Step 40/94 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> dd8ff94e5cd7
Step 41/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 1fb45f7d0212
Step 42/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 115acaeaa79d
Step 43/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 7b4eb5187a93
Step 44/94 : FROM base AS gometalinter
 ---> 52ff2c71657a
Step 45/94 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> f2afef2d43ed
Step 46/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> ffd9af295b88
Step 47/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 38be39437bb3
Step 48/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 576c817d2789
Step 49/94 : FROM base AS dockercli
 ---> 52ff2c71657a
Step 50/94 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> 73f81c6390e5
Step 51/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> b6421b729e8b
Step 52/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 7ed59dd90926
Step 53/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 78b0a1797b71
Step 54/94 : FROM runtime-dev AS runc
 ---> db718622ceed
Step 55/94 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> 7a079a3b3f04
Step 56/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 16bfac87eaff
Step 57/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> c5849e0715eb
Step 58/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> b46c6a4f3c0a
Step 59/94 : FROM base AS tini
 ---> 52ff2c71657a
Step 60/94 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> 4a49985a2c46
Step 61/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 026680dd8876
Step 62/94 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> c0ad18735574
Step 63/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 8fa884b3f1dd
Step 64/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> fbea9eb2edb8
Step 65/94 : FROM runtime-dev AS dev
 ---> db718622ceed
Step 66/94 : RUN groupadd -r docker
 ---> Using cache
 ---> a83888c73d88
Step 67/94 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> dd6d9f492cad
Step 68/94 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> da87f4efe6f2
Step 69/94 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> ab75966ea575
Step 70/94 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> 0a796e98debf
Step 71/94 : RUN ldconfig
 ---> Using cache
 ---> 14e221738838
Step 72/94 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> c0fdd4d39aee
Step 73/94 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> 46fdccbe06ea
Step 74/94 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> c8eb900a388f
Step 75/94 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> 556e47d78a23
Step 76/94 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> 4bc1e19a7e44
Step 77/94 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> 098f113f930b
Step 78/94 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> 1624cc070a0c
Step 79/94 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> d2dfdd1f6660
Step 80/94 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> e3cccb8dbd92
Step 81/94 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> 99e40c044b33
Step 82/94 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> f564d2a23dec
Step 83/94 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> c687c5bb1dca
Step 84/94 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> 9bfafe8eca82
Step 85/94 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> 976a7bc72f96
Step 86/94 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> 02bf4fb6f081
Step 87/94 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> 8be3e8f4e4a9
Step 88/94 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> df11b7aeac8b
Step 89/94 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> 9146d8a152f6
Step 90/94 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> fb029f7555be
Step 91/94 : VOLUME /var/lib/docker
 ---> Using cache
 ---> 7de0fdece21b
Step 92/94 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 05e6ee273a86
Step 93/94 : FROM dev AS final
 ---> 05e6ee273a86
Step 94/94 : COPY . /go/src/github.com/docker/docker
 ---> 3209d5c59dac
Successfully built 3209d5c59dac
Successfully tagged docker-s390x:b3b739a
?   	github.com/docker/docker/api	[no test files]
ok  	github.com/docker/docker/api/server	0.006s	coverage: 7.9% of statements
?   	github.com/docker/docker/api/server/backend/build	[no test files]
ok  	github.com/docker/docker/api/server/httputils	0.004s	coverage: 11.1% of statements
ok  	github.com/docker/docker/api/server/middleware	0.004s	coverage: 43.4% of statements
?   	github.com/docker/docker/api/server/router	[no test files]
?   	github.com/docker/docker/api/server/router/build	[no test files]
?   	github.com/docker/docker/api/server/router/checkpoint	[no test files]
?   	github.com/docker/docker/api/server/router/container	[no test files]
?   	github.com/docker/docker/api/server/router/debug	[no test files]
?   	github.com/docker/docker/api/server/router/distribution	[no test files]
?   	github.com/docker/docker/api/server/router/image	[no test files]
?   	github.com/docker/docker/api/server/router/network	[no test files]
?   	github.com/docker/docker/api/server/router/plugin	[no test files]
?   	github.com/docker/docker/api/server/router/session	[no test files]
?   	github.com/docker/docker/api/server/router/swarm	[no test files]
?   	github.com/docker/docker/api/server/router/system	[no test files]
?   	github.com/docker/docker/api/server/router/volume	[no test files]
?   	github.com/docker/docker/api/types	[no test files]
?   	github.com/docker/docker/api/types/backend	[no test files]
?   	github.com/docker/docker/api/types/blkiodev	[no test files]
?   	github.com/docker/docker/api/types/container	[no test files]
?   	github.com/docker/docker/api/types/events	[no test files]
ok  	github.com/docker/docker/api/types/filters	0.003s	coverage: 94.2% of statements
?   	github.com/docker/docker/api/types/image	[no test files]
?   	github.com/docker/docker/api/types/mount	[no test files]
?   	github.com/docker/docker/api/types/network	[no test files]
?   	github.com/docker/docker/api/types/plugins/logdriver	[no test files]
?   	github.com/docker/docker/api/types/registry	[no test files]
ok  	github.com/docker/docker/api/types/strslice	0.002s	coverage: 90.0% of statements
?   	github.com/docker/docker/api/types/swarm	[no test files]
?   	github.com/docker/docker/api/types/swarm/runtime	[no test files]
ok  	github.com/docker/docker/api/types/time	0.003s	coverage: 100.0% of statements
ok  	github.com/docker/docker/api/types/versions	0.003s	coverage: 75.0% of statements
?   	github.com/docker/docker/api/types/versions/v1p19	[no test files]
?   	github.com/docker/docker/api/types/versions/v1p20	[no test files]
?   	github.com/docker/docker/api/types/volume	[no test files]
?   	github.com/docker/docker/builder	[no test files]
?   	github.com/docker/docker/builder/builder-next	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/containerimage	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/snapshot	[no test files]
?   	github.com/docker/docker/builder/builder-next/exporter	[no test files]
?   	github.com/docker/docker/builder/builder-next/imagerefchecker	[no test files]
?   	github.com/docker/docker/builder/builder-next/worker	[no test files]
ok  	github.com/docker/docker/builder/dockerfile	0.856s	coverage: 45.4% of statements
ok  	github.com/docker/docker/builder/dockerignore	0.003s	coverage: 96.8% of statements
ok  	github.com/docker/docker/builder/fscache	0.113s	coverage: 69.2% of statements
ok  	github.com/docker/docker/builder/remotecontext	0.346s	coverage: 13.7% of statements
ok  	github.com/docker/docker/builder/remotecontext/git	0.563s	coverage: 78.8% of statements
?   	github.com/docker/docker/cli	[no test files]
?   	github.com/docker/docker/cli/config	[no test files]
ok  	github.com/docker/docker/cli/debug	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/client	0.162s	coverage: 75.6% of statements
# github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/orchestrator/update
vendor/github.com/docker/swarmkit/manager/orchestrator/update/updater.go:636:25: cannot use api.UpdateStatus literal (type api.UpdateStatus) as type *api.UpdateStatus in assignment
FAIL	github.com/docker/docker/cmd/dockerd [build failed]
Build step 'Execute shell' marked build as failure
Set build name.
New build name is '#38520'
[PostBuildScript] - Executing post build scripts.
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins8879163745430924131.sh
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/jenkins/workspace/Docker-PRs-s390x:/workspace s390x/busybox chown -R 1001:1001 /workspace
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins462854190791518617.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ xargs tar -czf bundles.tar.gz
+ find bundles -name *.log
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
Finished: FAILURE
