Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on s390x-ubuntu-29 (linux s390x-ubuntu-1604 s390x) in workspace /home/jenkins/workspace/Docker-PRs-s390x
Running Prebuild steps
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins1934046210199283575.sh
+ pwd
+ id -u
+ id -g
+ docker run --rm -v /home/jenkins/workspace/Docker-PRs-s390x:/workspace s390x/busybox chown -R 1001:1001 /workspace
Success build forhudson.tasks.Shell@54493290
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/jenkins/workspace/Docker-PRs-s390x # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision f76d6a078d881f410c00e8d900dcdfc2e026c841 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f f76d6a078d881f410c00e8d900dcdfc2e026c841
Commit message: "Merge pull request #38370 from farnasirim/36413-bind-dir-skip-copy"
 > git rev-list --no-walk f76d6a078d881f410c00e8d900dcdfc2e026c841 # timeout=10
Set build name.
New build name is '#38432'
[Docker-PRs-s390x] $ /bin/bash /tmp/jenkins5754203561837898466.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38432/head -> origin/pr/38432
Merge made by the 'recursive' strategy.
 hack/ci/windows.ps1                                |   9 +-
 integration-cli/check_test.go                      |   3 +-
 integration-cli/docker_api_swarm_node_test.go      |   2 -
 integration-cli/docker_api_swarm_service_test.go   |  79 ---------
 .../docker_api_swarm_service_unix_test.go          |  90 ++++++++++
 integration-cli/docker_api_swarm_test.go           |   2 -
 integration-cli/docker_cli_swarm_test.go           | 196 ---------------------
 integration-cli/docker_cli_swarm_unix_test.go      | 195 ++++++++++++++++++++
 internal/test/daemon/daemon.go                     |  17 +-
 internal/test/daemon/daemon_unix.go                |   6 +
 internal/test/daemon/daemon_windows.go             |   6 +
 internal/test/daemon/swarm.go                      |   4 -
 internal/test/daemon/swarm_unix.go                 |   7 +
 internal/test/daemon/swarm_windows.go              |   7 +
 14 files changed, 325 insertions(+), 298 deletions(-)
 create mode 100644 integration-cli/docker_api_swarm_service_unix_test.go
 create mode 100644 internal/test/daemon/swarm_unix.go
 create mode 100644 internal/test/daemon/swarm_windows.go
Sending build context to Docker daemon  45.09MB
Step 1/94 : FROM golang:1.11.4 AS base
 ---> ee5c1a481166
Step 2/94 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> ecc1e6fa568c
Step 3/94 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> ec041c6a135e
Step 4/94 : FROM base AS criu
 ---> ec041c6a135e
Step 5/94 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> cadcf65b10be
Step 6/94 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> 14dc93e41f4c
Step 7/94 : FROM base AS registry
 ---> ec041c6a135e
Step 8/94 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> 275f5e439572
Step 9/94 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> 36b5150e0d85
Step 10/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 9367bf59b6c2
Step 11/94 : FROM base AS docker-py
 ---> ec041c6a135e
Step 12/94 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> 00d868f3cf17
Step 13/94 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> 391da410265a
Step 14/94 : FROM base AS swagger
 ---> ec041c6a135e
Step 15/94 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> 11c6e13531b8
Step 16/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> fd90bdee0ff0
Step 17/94 : FROM base AS frozen-images
 ---> ec041c6a135e
Step 18/94 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> 4c9651a0c647
Step 19/94 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> ed33012b6114
Step 20/94 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> 338c9c555007
Step 21/94 : FROM base AS runtime-dev
 ---> ec041c6a135e
Step 22/94 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> f837b8f4a1d5
Step 23/94 : FROM base AS tomlv
 ---> ec041c6a135e
Step 24/94 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> 4a06080b2252
Step 25/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 70ef4c6007e6
Step 26/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> dc89378503fe
Step 27/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> eba5cc101bf9
Step 28/94 : FROM base AS vndr
 ---> ec041c6a135e
Step 29/94 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> a181ff168e3c
Step 30/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 22e8aa2f0efb
Step 31/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> f220bef5493b
Step 32/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 0173ec22dcf6
Step 33/94 : FROM base AS containerd
 ---> ec041c6a135e
Step 34/94 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> e597707934db
Step 35/94 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> 78a80e444c0d
Step 36/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> a01d73dc194c
Step 37/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 5e9de40cde32
Step 38/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 158cfafa6ae9
Step 39/94 : FROM base AS proxy
 ---> ec041c6a135e
Step 40/94 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> 529016fd2f53
Step 41/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 79d4f908dc46
Step 42/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 3b115e405e29
Step 43/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> b2ec929bc1e2
Step 44/94 : FROM base AS gometalinter
 ---> ec041c6a135e
Step 45/94 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> 4341fc97f1f5
Step 46/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 76f3fa17321d
Step 47/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 6d224b5dd905
Step 48/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 5bbbdeb24392
Step 49/94 : FROM base AS dockercli
 ---> ec041c6a135e
Step 50/94 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> c3c4017e8e89
Step 51/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> bbdecded3cb1
Step 52/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 3a36f251ee0e
Step 53/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 465fe646b236
Step 54/94 : FROM runtime-dev AS runc
 ---> f837b8f4a1d5
Step 55/94 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> de541502c78d
Step 56/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 43f95dd04a6b
Step 57/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 6bf68c717fa3
Step 58/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 2c313b061bb7
Step 59/94 : FROM base AS tini
 ---> ec041c6a135e
Step 60/94 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> f789682b6f81
Step 61/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> db2bafd22680
Step 62/94 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> 7b30e5c5bdbc
Step 63/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 7805b997ec7a
Step 64/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> f908b6601221
Step 65/94 : FROM runtime-dev AS dev
 ---> f837b8f4a1d5
Step 66/94 : RUN groupadd -r docker
 ---> Using cache
 ---> 49d1ac110ddd
Step 67/94 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> 93727732406c
Step 68/94 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> 471fc04a156c
Step 69/94 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> b2bd8671ac62
Step 70/94 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> c2831fa2b8f0
Step 71/94 : RUN ldconfig
 ---> Using cache
 ---> 15d70fe72710
Step 72/94 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> deb81f67c04a
Step 73/94 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> 8739832c6281
Step 74/94 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> 2141972271bf
Step 75/94 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> 007aabc37ca6
Step 76/94 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> 5b4f9626b6cc
Step 77/94 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> 42ed2e9992c1
Step 78/94 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> 4a5447634267
Step 79/94 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> 3db8f673b99b
Step 80/94 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> 725b81e68571
Step 81/94 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> c79f72d97b2a
Step 82/94 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> e7e96a6601f1
Step 83/94 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> ef99da7d8d54
Step 84/94 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> bd3ef3cec140
Step 85/94 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> f40454050ad2
Step 86/94 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> 3ba6e04ebd8b
Step 87/94 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> 59b7927ea941
Step 88/94 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> a309adc8cee0
Step 89/94 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> 7b046394b7ac
Step 90/94 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> b672c99ad7fc
Step 91/94 : VOLUME /var/lib/docker
 ---> Using cache
 ---> c7d68d7c2806
Step 92/94 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 1f101dff7504
Step 93/94 : FROM dev AS final
 ---> 1f101dff7504
Step 94/94 : COPY . /go/src/github.com/docker/docker
 ---> 73dec7a8567a
Successfully built 73dec7a8567a
Successfully tagged docker-s390x:bae44d4
?   	github.com/docker/docker/api	[no test files]
ok  	github.com/docker/docker/api/server	0.005s	coverage: 7.9% of statements
?   	github.com/docker/docker/api/server/backend/build	[no test files]
ok  	github.com/docker/docker/api/server/httputils	0.004s	coverage: 11.1% of statements
ok  	github.com/docker/docker/api/server/middleware	0.004s	coverage: 43.4% of statements
?   	github.com/docker/docker/api/server/router	[no test files]
?   	github.com/docker/docker/api/server/router/build	[no test files]
?   	github.com/docker/docker/api/server/router/checkpoint	[no test files]
?   	github.com/docker/docker/api/server/router/container	[no test files]
?   	github.com/docker/docker/api/server/router/debug	[no test files]
?   	github.com/docker/docker/api/server/router/distribution	[no test files]
?   	github.com/docker/docker/api/server/router/image	[no test files]
?   	github.com/docker/docker/api/server/router/network	[no test files]
?   	github.com/docker/docker/api/server/router/plugin	[no test files]
?   	github.com/docker/docker/api/server/router/session	[no test files]
?   	github.com/docker/docker/api/server/router/swarm	[no test files]
?   	github.com/docker/docker/api/server/router/system	[no test files]
?   	github.com/docker/docker/api/server/router/volume	[no test files]
?   	github.com/docker/docker/api/types	[no test files]
?   	github.com/docker/docker/api/types/backend	[no test files]
?   	github.com/docker/docker/api/types/blkiodev	[no test files]
?   	github.com/docker/docker/api/types/container	[no test files]
?   	github.com/docker/docker/api/types/events	[no test files]
ok  	github.com/docker/docker/api/types/filters	0.002s	coverage: 94.2% of statements
?   	github.com/docker/docker/api/types/image	[no test files]
?   	github.com/docker/docker/api/types/mount	[no test files]
?   	github.com/docker/docker/api/types/network	[no test files]
?   	github.com/docker/docker/api/types/plugins/logdriver	[no test files]
?   	github.com/docker/docker/api/types/registry	[no test files]
ok  	github.com/docker/docker/api/types/strslice	0.002s	coverage: 90.0% of statements
?   	github.com/docker/docker/api/types/swarm	[no test files]
?   	github.com/docker/docker/api/types/swarm/runtime	[no test files]
ok  	github.com/docker/docker/api/types/time	0.003s	coverage: 100.0% of statements
ok  	github.com/docker/docker/api/types/versions	0.002s	coverage: 75.0% of statements
?   	github.com/docker/docker/api/types/versions/v1p19	[no test files]
?   	github.com/docker/docker/api/types/versions/v1p20	[no test files]
?   	github.com/docker/docker/api/types/volume	[no test files]
?   	github.com/docker/docker/builder	[no test files]
?   	github.com/docker/docker/builder/builder-next	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/containerimage	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/snapshot	[no test files]
?   	github.com/docker/docker/builder/builder-next/exporter	[no test files]
?   	github.com/docker/docker/builder/builder-next/imagerefchecker	[no test files]
?   	github.com/docker/docker/builder/builder-next/worker	[no test files]
ok  	github.com/docker/docker/builder/dockerfile	0.829s	coverage: 45.4% of statements
ok  	github.com/docker/docker/builder/dockerignore	0.002s	coverage: 96.8% of statements
ok  	github.com/docker/docker/builder/fscache	0.110s	coverage: 69.5% of statements
ok  	github.com/docker/docker/builder/remotecontext	0.299s	coverage: 13.7% of statements
ok  	github.com/docker/docker/builder/remotecontext/git	0.495s	coverage: 78.8% of statements
?   	github.com/docker/docker/cli	[no test files]
?   	github.com/docker/docker/cli/config	[no test files]
ok  	github.com/docker/docker/cli/debug	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/client	0.139s	coverage: 75.6% of statements
ok  	github.com/docker/docker/cmd/dockerd	0.034s	coverage: 31.4% of statements
ok  	github.com/docker/docker/cmd/dockerd/hack	0.002s	coverage: 72.9% of statements
ok  	github.com/docker/docker/container	0.112s	coverage: 35.6% of statements
?   	github.com/docker/docker/container/stream	[no test files]
?   	github.com/docker/docker/contrib/apparmor	[no test files]
?   	github.com/docker/docker/contrib/docker-device-tool	[no test files]
?   	github.com/docker/docker/contrib/httpserver	[no test files]
ok  	github.com/docker/docker/daemon	12.201s	coverage: 17.1% of statements
ok  	github.com/docker/docker/daemon/cluster	0.026s	coverage: 0.5% of statements
ok  	github.com/docker/docker/daemon/cluster/controllers/plugin	0.007s	coverage: 65.3% of statements
ok  	github.com/docker/docker/daemon/cluster/convert	0.006s	coverage: 28.0% of statements
?   	github.com/docker/docker/daemon/cluster/executor	[no test files]
ok  	github.com/docker/docker/daemon/cluster/executor/container	3.439s	coverage: 12.7% of statements
?   	github.com/docker/docker/daemon/cluster/provider	[no test files]
ok  	github.com/docker/docker/daemon/config	0.025s	coverage: 84.8% of statements
ok  	github.com/docker/docker/daemon/discovery	0.004s	coverage: 30.4% of statements
ok  	github.com/docker/docker/daemon/events	0.058s	coverage: 50.0% of statements
?   	github.com/docker/docker/daemon/events/testutils	[no test files]
?   	github.com/docker/docker/daemon/exec	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver	0.004s	coverage: 2.2% of statements
ok  	github.com/docker/docker/daemon/graphdriver/aufs	11.468s	coverage: 73.6% of statements
ok  	github.com/docker/docker/daemon/graphdriver/btrfs	0.004s	coverage: 2.9% of statements
ok  	github.com/docker/docker/daemon/graphdriver/copy	0.189s	coverage: 57.0% of statements
ok  	github.com/docker/docker/daemon/graphdriver/devmapper	4.613s	coverage: 46.1% of statements
?   	github.com/docker/docker/daemon/graphdriver/graphtest	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver/overlay	1.681s	coverage: 50.8% of statements
ok  	github.com/docker/docker/daemon/graphdriver/overlay2	4.869s	coverage: 56.8% of statements
?   	github.com/docker/docker/daemon/graphdriver/overlayutils	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver/quota	0.621s	coverage: 75.2% of statements
?   	github.com/docker/docker/daemon/graphdriver/register	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver/vfs	0.005s	coverage: 70.5% of statements
ok  	github.com/docker/docker/daemon/graphdriver/zfs	0.004s	coverage: 3.0% of statements
ok  	github.com/docker/docker/daemon/images	0.009s	coverage: 4.9% of statements
?   	github.com/docker/docker/daemon/initlayer	[no test files]
ok  	github.com/docker/docker/daemon/links	0.002s	coverage: 93.0% of statements
?   	github.com/docker/docker/daemon/listeners	[no test files]
ok  	github.com/docker/docker/daemon/logger	0.213s	coverage: 43.7% of statements
ok  	github.com/docker/docker/daemon/logger/awslogs	0.081s	coverage: 71.4% of statements
?   	github.com/docker/docker/daemon/logger/fluentd	[no test files]
?   	github.com/docker/docker/daemon/logger/gcplogs	[no test files]
ok  	github.com/docker/docker/daemon/logger/gelf	0.004s	coverage: 68.2% of statements
ok  	github.com/docker/docker/daemon/logger/journald	0.004s	coverage: 26.2% of statements
ok  	github.com/docker/docker/daemon/logger/jsonfilelog	0.005s	coverage: 62.1% of statements
ok  	github.com/docker/docker/daemon/logger/jsonfilelog/jsonlog	0.003s	coverage: 88.3% of statements
ok  	github.com/docker/docker/daemon/logger/local	0.010s	coverage: 74.7% of statements
?   	github.com/docker/docker/daemon/logger/logentries	[no test files]
ok  	github.com/docker/docker/daemon/logger/loggerutils	0.008s	coverage: 18.6% of statements
ok  	github.com/docker/docker/daemon/logger/splunk	1.545s	coverage: 84.5% of statements
ok  	github.com/docker/docker/daemon/logger/syslog	0.004s	coverage: 22.8% of statements
ok  	github.com/docker/docker/daemon/logger/templates	0.002s	coverage: 8.3% of statements
?   	github.com/docker/docker/daemon/names	[no test files]
ok  	github.com/docker/docker/daemon/network	0.002s	coverage: 57.1% of statements
?   	github.com/docker/docker/daemon/stats	[no test files]
ok  	github.com/docker/docker/distribution	0.288s	coverage: 16.8% of statements
ok  	github.com/docker/docker/distribution/metadata	0.026s	coverage: 48.2% of statements
?   	github.com/docker/docker/distribution/utils	[no test files]
ok  	github.com/docker/docker/distribution/xfer	1.427s	coverage: 83.4% of statements
?   	github.com/docker/docker/dockerversion	[no test files]
ok  	github.com/docker/docker/errdefs	0.002s	coverage: 76.6% of statements
ok  	github.com/docker/docker/image	0.014s	coverage: 86.3% of statements
ok  	github.com/docker/docker/image/cache	0.005s	coverage: 19.2% of statements
?   	github.com/docker/docker/image/tarexport	[no test files]
ok  	github.com/docker/docker/image/v1	0.006s	coverage: 25.0% of statements
ok  	github.com/docker/docker/internal/procfs	0.002s	coverage: 78.4% of statements
?   	github.com/docker/docker/internal/test	[no test files]
?   	github.com/docker/docker/internal/test/daemon	[no test files]
?   	github.com/docker/docker/internal/test/environment	[no test files]
?   	github.com/docker/docker/internal/test/fakecontext	[no test files]
?   	github.com/docker/docker/internal/test/fakegit	[no test files]
?   	github.com/docker/docker/internal/test/fakestorage	[no test files]
?   	github.com/docker/docker/internal/test/fixtures/load	[no test files]
?   	github.com/docker/docker/internal/test/fixtures/plugin	[no test files]
?   	github.com/docker/docker/internal/test/fixtures/plugin/basic	[no test files]
?   	github.com/docker/docker/internal/test/registry	[no test files]
?   	github.com/docker/docker/internal/test/request	[no test files]
ok  	github.com/docker/docker/internal/testutil	0.003s	coverage: 62.5% of statements
ok  	github.com/docker/docker/layer	7.511s	coverage: 71.4% of statements
ok  	github.com/docker/docker/libcontainerd	0.029s	coverage: 3.4% of statements
?   	github.com/docker/docker/libcontainerd/supervisor	[no test files]
?   	github.com/docker/docker/oci	[no test files]
?   	github.com/docker/docker/oci/caps	[no test files]
ok  	github.com/docker/docker/opts	0.025s	coverage: 68.4% of statements
ok  	github.com/docker/docker/pkg/aaparser	0.002s	coverage: 50.0% of statements
ok  	github.com/docker/docker/pkg/archive	0.280s	coverage: 82.2% of statements
ok  	github.com/docker/docker/pkg/authorization	0.307s	coverage: 66.7% of statements
ok  	github.com/docker/docker/pkg/broadcaster	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/pkg/chrootarchive	3.198s	coverage: 37.0% of statements
?   	github.com/docker/docker/pkg/containerfs	[no test files]
?   	github.com/docker/docker/pkg/devicemapper	[no test files]
ok  	github.com/docker/docker/pkg/directory	0.003s	coverage: 80.0% of statements
ok  	github.com/docker/docker/pkg/discovery	0.004s	coverage: 58.3% of statements
ok  	github.com/docker/docker/pkg/discovery/file	0.003s	coverage: 97.6% of statements
ok  	github.com/docker/docker/pkg/discovery/kv	3.108s	coverage: 84.1% of statements
ok  	github.com/docker/docker/pkg/discovery/memory	0.003s	coverage: 92.3% of statements
ok  	github.com/docker/docker/pkg/discovery/nodes	0.003s	coverage: 93.8% of statements
ok  	github.com/docker/docker/pkg/dmesg	0.002s	coverage: 83.3% of statements
ok  	github.com/docker/docker/pkg/filenotify	0.603s	coverage: 66.3% of statements
ok  	github.com/docker/docker/pkg/fileutils	0.005s	coverage: 89.5% of statements
ok  	github.com/docker/docker/pkg/fsutils	0.410s	coverage: 85.1% of statements
ok  	github.com/docker/docker/pkg/homedir	0.003s	coverage: 41.7% of statements
ok  	github.com/docker/docker/pkg/idtools	0.187s	coverage: 70.2% of statements
ok  	github.com/docker/docker/pkg/ioutils	0.326s	coverage: 69.1% of statements
ok  	github.com/docker/docker/pkg/jsonmessage	0.004s	coverage: 88.3% of statements
ok  	github.com/docker/docker/pkg/locker	0.014s	coverage: 88.9% of statements
ok  	github.com/docker/docker/pkg/longpath	0.002s	coverage: 100.0% of statements
?   	github.com/docker/docker/pkg/loopback	[no test files]
ok  	github.com/docker/docker/pkg/mount	1.023s	coverage: 68.6% of statements
ok  	github.com/docker/docker/pkg/namesgenerator	0.002s	coverage: 85.7% of statements
?   	github.com/docker/docker/pkg/namesgenerator/cmd/names-generator	[no test files]
ok  	github.com/docker/docker/pkg/parsers	0.002s	coverage: 97.0% of statements
ok  	github.com/docker/docker/pkg/parsers/kernel	0.002s	coverage: 60.0% of statements
ok  	github.com/docker/docker/pkg/parsers/operatingsystem	0.002s	coverage: 90.0% of statements
ok  	github.com/docker/docker/pkg/pidfile	0.002s	coverage: 82.4% of statements
?   	github.com/docker/docker/pkg/platform	[no test files]
?   	github.com/docker/docker/pkg/plugingetter	[no test files]
ok  	github.com/docker/docker/pkg/plugins	33.617s	coverage: 76.8% of statements
ok  	github.com/docker/docker/pkg/plugins/pluginrpc-gen	0.010s	coverage: 56.8% of statements
?   	github.com/docker/docker/pkg/plugins/pluginrpc-gen/fixtures	[no test files]
?   	github.com/docker/docker/pkg/plugins/pluginrpc-gen/fixtures/otherfixture	[no test files]
ok  	github.com/docker/docker/pkg/plugins/transport	0.003s	coverage: 85.7% of statements
ok  	github.com/docker/docker/pkg/pools	0.002s	coverage: 87.9% of statements
ok  	github.com/docker/docker/pkg/progress	0.002s	coverage: 75.9% of statements
ok  	github.com/docker/docker/pkg/pubsub	1.036s	coverage: 72.7% of statements
ok  	github.com/docker/docker/pkg/reexec	0.005s	coverage: 82.4% of statements
ok  	github.com/docker/docker/pkg/signal	2.440s	coverage: 61.0% of statements
?   	github.com/docker/docker/pkg/signal/testfiles	[no test files]
ok  	github.com/docker/docker/pkg/stdcopy	0.003s	coverage: 100.0% of statements
ok  	github.com/docker/docker/pkg/streamformatter	0.003s	coverage: 66.2% of statements
ok  	github.com/docker/docker/pkg/stringid	0.002s	coverage: 76.0% of statements
ok  	github.com/docker/docker/pkg/symlink	0.007s	coverage: 87.7% of statements
ok  	github.com/docker/docker/pkg/sysinfo	0.004s	coverage: 75.8% of statements
ok  	github.com/docker/docker/pkg/system	0.024s	coverage: 36.1% of statements
ok  	github.com/docker/docker/pkg/tailfile	0.013s	coverage: 88.6% of statements
ok  	github.com/docker/docker/pkg/tarsum	0.033s	coverage: 89.3% of statements
ok  	github.com/docker/docker/pkg/term	0.003s	coverage: 85.9% of statements
ok  	github.com/docker/docker/pkg/term/windows	0.002s	coverage: 0.0% of statements [no tests to run]
ok  	github.com/docker/docker/pkg/truncindex	0.102s	coverage: 91.5% of statements
ok  	github.com/docker/docker/pkg/urlutil	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/pkg/useragent	0.002s	coverage: 88.9% of statements
ok  	github.com/docker/docker/plugin	0.556s	coverage: 27.3% of statements
ok  	github.com/docker/docker/plugin/executor/containerd	0.007s	coverage: 33.3% of statements
ok  	github.com/docker/docker/plugin/v2	0.003s	coverage: 14.5% of statements
?   	github.com/docker/docker/profiles/apparmor	[no test files]
ok  	github.com/docker/docker/profiles/seccomp	0.004s	coverage: 81.0% of statements
ok  	github.com/docker/docker/reference	0.006s	coverage: 84.4% of statements
ok  	github.com/docker/docker/registry	0.165s	coverage: 57.0% of statements
ok  	github.com/docker/docker/registry/resumable	0.015s	coverage: 100.0% of statements
ok  	github.com/docker/docker/restartmanager	0.002s	coverage: 49.0% of statements
ok  	github.com/docker/docker/runconfig	0.006s	coverage: 68.2% of statements
?   	github.com/docker/docker/runconfig/opts	[no test files]
?   	github.com/docker/docker/volume	[no test files]
ok  	github.com/docker/docker/volume/drivers	0.004s	coverage: 36.1% of statements
ok  	github.com/docker/docker/volume/local	0.051s	coverage: 73.0% of statements
ok  	github.com/docker/docker/volume/mounts	0.023s	coverage: 66.8% of statements
ok  	github.com/docker/docker/volume/service	0.014s	coverage: 73.0% of statements
?   	github.com/docker/docker/volume/service/opts	[no test files]
?   	github.com/docker/docker/volume/testutils	[no test files]

Removing bundles/

---> Making bundle: dynbinary (in bundles/dynbinary)
Building: bundles/dynbinary-daemon/dockerd-dev
Created binary: bundles/dynbinary-daemon/dockerd-dev

---> Making bundle: test-integration (in bundles/test-integration)
Building test suite binary ./integration-cli/test.main
Building test suite binary ./integration/config/test.main
Building test suite binary ./integration/secret/test.main
Building test suite binary ./integration/session/test.main
Building test suite binary ./integration/plugin/test.main
Building test suite binary ./integration/plugin/logging/test.main
Building test suite binary ./integration/plugin/logging/cmd/test.main
Building test suite binary ./integration/plugin/logging/cmd/dummy/test.main
Building test suite binary ./integration/plugin/logging/cmd/close_on_start/test.main
Building test suite binary ./integration/plugin/authz/test.main
Building test suite binary ./integration/plugin/graphdriver/test.main
Building test suite binary ./integration/plugin/common/test.main
Building test suite binary ./integration/plugin/volumes/test.main
Building test suite binary ./integration/plugin/volumes/cmd/test.main
Building test suite binary ./integration/plugin/volumes/cmd/dummy/test.main
Building test suite binary ./integration/container/test.main
Building test suite binary ./integration/system/test.main
Building test suite binary ./integration/volume/test.main
Building test suite binary ./integration/build/test.main
Building test suite binary ./integration/network/test.main
Building test suite binary ./integration/network/ipvlan/test.main
Building test suite binary ./integration/network/macvlan/test.main
Building test suite binary ./integration/service/test.main
Building test suite binary ./integration/image/test.main
---> Making bundle: .integration-daemon-start (in bundles/test-integration)
Using test binary docker
/etc/init.d/apparmor: 130: /etc/init.d/apparmor: systemd-detect-virt: not found
Starting AppArmor profiles:Warning from stdin (line 1): /sbin/apparmor_parser: cannot use or update cache, disable, or force-complain via stdin
Warning failed to create cache: (null)
.
Starting dockerd
INFO: Waiting for daemon to start...
.
---> Making bundle: .integration-daemon-setup (in bundles/test-integration)
---> Making bundle: .ensure-emptyfs (in bundles/test-integration)
Error: No such image: emptyfs
Running integration-test (iteration 1)
Running /go/src/github.com/docker/docker/integration/config
Loaded image: buildpack-deps:jessie
Loaded image: busybox:latest
Loaded image: busybox:glibc
Loaded image: debian:jessie
Loaded image: hello-world:latest
INFO: Testing against a local daemon
=== RUN   TestConfigList
--- FAIL: TestConfigList (0.01s)
    swarm.go:40: failed to start daemon with arguments [--iptables=false --swarm-default-advertise-addr=lo] : arguments: /go/src/github.com/docker/docker/bundles/dynbinary-daemon/dockerd : [--containerd /var/run/docker/containerd/containerd.sock --data-root /go/src/github.com/docker/docker/bundles/test-integration/dd5e1775524ed/root --exec-root /tmp/dxr/dd5e1775524ed --pidfile /go/src/github.com/docker/docker/bundles/test-integration/dd5e1775524ed/docker.pid --userland-proxy=true --host unix:///tmp/docker-integration/dd5e1775524ed.sock --debug --storage-driver vfs --iptables=false --swarm-default-advertise-addr=lo]
=== RUN   TestConfigsCreateAndDelete
--- FAIL: TestConfigsCreateAndDelete (0.01s)
    swarm.go:40: failed to start daemon with arguments [--iptables=false --swarm-default-advertise-addr=lo] : arguments: /go/src/github.com/docker/docker/bundles/dynbinary-daemon/dockerd : [--containerd /var/run/docker/containerd/containerd.sock --data-root /go/src/github.com/docker/docker/bundles/test-integration/d2703a4a921f1/root --exec-root /tmp/dxr/d2703a4a921f1 --pidfile /go/src/github.com/docker/docker/bundles/test-integration/d2703a4a921f1/docker.pid --userland-proxy=true --host unix:///tmp/docker-integration/d2703a4a921f1.sock --debug --storage-driver vfs --iptables=false --swarm-default-advertise-addr=lo]
=== RUN   TestConfigsUpdate
--- FAIL: TestConfigsUpdate (0.00s)
    swarm.go:40: failed to start daemon with arguments [--iptables=false --swarm-default-advertise-addr=lo] : arguments: /go/src/github.com/docker/docker/bundles/dynbinary-daemon/dockerd : [--containerd /var/run/docker/containerd/containerd.sock --data-root /go/src/github.com/docker/docker/bundles/test-integration/d20e46d3417ce/root --exec-root /tmp/dxr/d20e46d3417ce --pidfile /go/src/github.com/docker/docker/bundles/test-integration/d20e46d3417ce/docker.pid --userland-proxy=true --host unix:///tmp/docker-integration/d20e46d3417ce.sock --debug --storage-driver vfs --iptables=false --swarm-default-advertise-addr=lo]
=== RUN   TestTemplatedConfig
--- FAIL: TestTemplatedConfig (0.00s)
    swarm.go:40: failed to start daemon with arguments [--iptables=false --swarm-default-advertise-addr=lo] : arguments: /go/src/github.com/docker/docker/bundles/dynbinary-daemon/dockerd : [--containerd /var/run/docker/containerd/containerd.sock --data-root /go/src/github.com/docker/docker/bundles/test-integration/d737d7906b485/root --exec-root /tmp/dxr/d737d7906b485 --pidfile /go/src/github.com/docker/docker/bundles/test-integration/d737d7906b485/docker.pid --userland-proxy=true --host unix:///tmp/docker-integration/d737d7906b485.sock --debug --storage-driver vfs --iptables=false --swarm-default-advertise-addr=lo]
=== RUN   TestConfigInspect
--- FAIL: TestConfigInspect (0.01s)
    swarm.go:40: failed to start daemon with arguments [--iptables=false --swarm-default-advertise-addr=lo] : arguments: /go/src/github.com/docker/docker/bundles/dynbinary-daemon/dockerd : [--containerd /var/run/docker/containerd/containerd.sock --data-root /go/src/github.com/docker/docker/bundles/test-integration/d0c7de317be18/root --exec-root /tmp/dxr/d0c7de317be18 --pidfile /go/src/github.com/docker/docker/bundles/test-integration/d0c7de317be18/docker.pid --userland-proxy=true --host unix:///tmp/docker-integration/d0c7de317be18.sock --debug --storage-driver vfs --iptables=false --swarm-default-advertise-addr=lo]
=== RUN   TestConfigCreateWithLabels
--- FAIL: TestConfigCreateWithLabels (0.01s)
    swarm.go:40: failed to start daemon with arguments [--iptables=false --swarm-default-advertise-addr=lo] : arguments: /go/src/github.com/docker/docker/bundles/dynbinary-daemon/dockerd : [--containerd /var/run/docker/containerd/containerd.sock --data-root /go/src/github.com/docker/docker/bundles/test-integration/d4cc72f42cb0b/root --exec-root /tmp/dxr/d4cc72f42cb0b --pidfile /go/src/github.com/docker/docker/bundles/test-integration/d4cc72f42cb0b/docker.pid --userland-proxy=true --host unix:///tmp/docker-integration/d4cc72f42cb0b.sock --debug --storage-driver vfs --iptables=false --swarm-default-advertise-addr=lo]
=== RUN   TestConfigCreateResolve
--- FAIL: TestConfigCreateResolve (0.01s)
    swarm.go:40: failed to start daemon with arguments [--iptables=false --swarm-default-advertise-addr=lo] : arguments: /go/src/github.com/docker/docker/bundles/dynbinary-daemon/dockerd : [--containerd /var/run/docker/containerd/containerd.sock --data-root /go/src/github.com/docker/docker/bundles/test-integration/d52ce647b299e/root --exec-root /tmp/dxr/d52ce647b299e --pidfile /go/src/github.com/docker/docker/bundles/test-integration/d52ce647b299e/docker.pid --userland-proxy=true --host unix:///tmp/docker-integration/d52ce647b299e.sock --debug --storage-driver vfs --iptables=false --swarm-default-advertise-addr=lo]
FAIL
---> Making bundle: .integration-daemon-stop (in bundles/test-integration)
Clearing AppArmor profiles cache:.
All profile caches have been cleared, but no profiles have been unloaded.
Unloading profiles will leave already running processes permanently
unconfined, which can lead to unexpected situations.

To set a process to complain mode, use the command line tool
'aa-complain'. To really tear down all profiles, run the init script
with the 'teardown' option."
Removing test suite binaries
Build step 'Execute shell' marked build as failure
Set build name.
New build name is '#38432'
[PostBuildScript] - Executing post build scripts.
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins2033534010701891550.sh
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/jenkins/workspace/Docker-PRs-s390x:/workspace s390x/busybox chown -R 1001:1001 /workspace
[Docker-PRs-s390x] $ /bin/sh -xe /tmp/jenkins1778541018563251111.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ xargs tar -czf bundles.tar.gz
+ find bundles -name *.log
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
Finished: FAILURE
