Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ppc64le-ubuntu-26 (linux ppc64le-ubuntu-1604 ppc64le) in workspace /home/docker/workspace/Docker-PRs-powerpc
Running Prebuild steps
[Docker-PRs-powerpc] $ /bin/sh -xe /tmp/jenkins6374178955940227958.sh
+ id -u
+ id -g
+ sudo chown -R 1001:1001 /home/docker/workspace/Docker-PRs-powerpc/bundles
Success build forhudson.tasks.Shell@39ff8a96
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/docker/workspace/Docker-PRs-powerpc # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision 2b7e084dc98b1259e3be82d4c8d4fdfdcf615ba5 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 2b7e084dc98b1259e3be82d4c8d4fdfdcf615ba5
Commit message: "Merge pull request #38473 from thaJeztah/use_testenv_client"
 > git rev-list --no-walk 2b7e084dc98b1259e3be82d4c8d4fdfdcf615ba5 # timeout=10
Set build name.
New build name is '#38487'
[Set GitHub commit status (universal)] PENDING on repos [] (sha:2b7e084) with context:Docker-PRs-powerpc
[Docker-PRs-powerpc] $ /bin/bash /tmp/jenkins4258143835776049254.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38487/head -> origin/pr/38487
Auto-merging integration/build/build_test.go
Merge made by the 'recursive' strategy.
 builder/remotecontext/detect.go | 16 +++++++++++++-
 integration/build/build_test.go | 46 +++++++++++++++++++++++++++++++++++++++++
 2 files changed, 61 insertions(+), 1 deletion(-)
Sending build context to Docker daemon   45.1MB
Step 1/94 : FROM golang:1.11.4 AS base
 ---> c35b367ad4c4
Step 2/94 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> 6b77956b5c2c
Step 3/94 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> 9f70598130d5
Step 4/94 : FROM base AS criu
 ---> 9f70598130d5
Step 5/94 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> 2e75ba708cd8
Step 6/94 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> 6c31f5ad72e6
Step 7/94 : FROM base AS registry
 ---> 9f70598130d5
Step 8/94 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> a47fed60a813
Step 9/94 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> 1e62d3b2a9d9
Step 10/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> a1745fbc7eb2
Step 11/94 : FROM base AS docker-py
 ---> 9f70598130d5
Step 12/94 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> 33820f33863c
Step 13/94 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> 3884b6757892
Step 14/94 : FROM base AS swagger
 ---> 9f70598130d5
Step 15/94 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> abd9f6ca54b8
Step 16/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 4be699c343fe
Step 17/94 : FROM base AS frozen-images
 ---> 9f70598130d5
Step 18/94 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> f50d6767179d
Step 19/94 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> 4f5054a48a20
Step 20/94 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> a31f28b313b3
Step 21/94 : FROM base AS runtime-dev
 ---> 9f70598130d5
Step 22/94 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> 5d180309e339
Step 23/94 : FROM base AS tomlv
 ---> 9f70598130d5
Step 24/94 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> 2241b58cf438
Step 25/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> a38df373bebf
Step 26/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 04a91ed8f636
Step 27/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 8461bbb26fa9
Step 28/94 : FROM base AS vndr
 ---> 9f70598130d5
Step 29/94 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> c52113f08f47
Step 30/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 0ba83e487dab
Step 31/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 56db78f559e6
Step 32/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 1feac04b3757
Step 33/94 : FROM base AS containerd
 ---> 9f70598130d5
Step 34/94 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> be09f54bdd8d
Step 35/94 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> 2341bfa229ab
Step 36/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> fcc9b6ba11fb
Step 37/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 378934c590c6
Step 38/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> dafcbdbb58bf
Step 39/94 : FROM base AS proxy
 ---> 9f70598130d5
Step 40/94 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> ea9bbc60f9eb
Step 41/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> e1e4dee7ede9
Step 42/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> dfbf2960d6c5
Step 43/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 6286ecfb12b9
Step 44/94 : FROM base AS gometalinter
 ---> 9f70598130d5
Step 45/94 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> 514e4a55e4a2
Step 46/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> afbffc2783ed
Step 47/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 7476ec1dcf5e
Step 48/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 6287e29c8ade
Step 49/94 : FROM base AS dockercli
 ---> 9f70598130d5
Step 50/94 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> 83b74eb50b32
Step 51/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 1779257df858
Step 52/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 2e609246aa24
Step 53/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 0b59f7a079f7
Step 54/94 : FROM runtime-dev AS runc
 ---> 5d180309e339
Step 55/94 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> 9693761ed87a
Step 56/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> c1f24855225c
Step 57/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 3b4c0c02e7e4
Step 58/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 8bdbcfe3dc40
Step 59/94 : FROM base AS tini
 ---> 9f70598130d5
Step 60/94 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> 56e414abb0aa
Step 61/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> ced036b77430
Step 62/94 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> 076dc68f0cc2
Step 63/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> be3f704533f8
Step 64/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> ef6926b6819d
Step 65/94 : FROM runtime-dev AS dev
 ---> 5d180309e339
Step 66/94 : RUN groupadd -r docker
 ---> Using cache
 ---> 1a554a84e236
Step 67/94 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> fa04dbd91e00
Step 68/94 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> d34fe9ec7198
Step 69/94 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> f930f979b661
Step 70/94 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> a36ff9578cca
Step 71/94 : RUN ldconfig
 ---> Using cache
 ---> 17ed991793d2
Step 72/94 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> 6eac8e4f4ee9
Step 73/94 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> a1ac2a6f08b0
Step 74/94 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> 5a0d35614eb1
Step 75/94 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> dd246ee83669
Step 76/94 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> 943b63156f2b
Step 77/94 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> d49c22a98516
Step 78/94 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> 0e1d4f2990b8
Step 79/94 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> 3fc7fe631294
Step 80/94 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> 19e3d45c622a
Step 81/94 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> dcecf42d6f3b
Step 82/94 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> 16b03d75c300
Step 83/94 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> b6912d7e39d4
Step 84/94 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> 09ea2625eadf
Step 85/94 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> fc8a0d6f47b9
Step 86/94 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> 152f3dc22d3d
Step 87/94 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> a5e1f638f8c1
Step 88/94 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> d67c54011fbc
Step 89/94 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> a600e7081ff5
Step 90/94 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> 44fd897157dd
Step 91/94 : VOLUME /var/lib/docker
 ---> Using cache
 ---> 2fea0779cc85
Step 92/94 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 8fa7f8f4cbaa
Step 93/94 : FROM dev AS final
 ---> 8fa7f8f4cbaa
Step 94/94 : COPY . /go/src/github.com/docker/docker
 ---> e4b9a3cf4bed
Successfully built e4b9a3cf4bed
Successfully tagged docker-powerpc:3350eeb
?   	github.com/docker/docker/api	[no test files]
ok  	github.com/docker/docker/api/server	0.006s	coverage: 7.9% of statements
?   	github.com/docker/docker/api/server/backend/build	[no test files]
ok  	github.com/docker/docker/api/server/httputils	0.008s	coverage: 11.1% of statements
ok  	github.com/docker/docker/api/server/middleware	0.008s	coverage: 43.4% of statements
?   	github.com/docker/docker/api/server/router	[no test files]
?   	github.com/docker/docker/api/server/router/build	[no test files]
?   	github.com/docker/docker/api/server/router/checkpoint	[no test files]
?   	github.com/docker/docker/api/server/router/container	[no test files]
?   	github.com/docker/docker/api/server/router/debug	[no test files]
?   	github.com/docker/docker/api/server/router/distribution	[no test files]
?   	github.com/docker/docker/api/server/router/image	[no test files]
?   	github.com/docker/docker/api/server/router/network	[no test files]
?   	github.com/docker/docker/api/server/router/plugin	[no test files]
?   	github.com/docker/docker/api/server/router/session	[no test files]
?   	github.com/docker/docker/api/server/router/swarm	[no test files]
?   	github.com/docker/docker/api/server/router/system	[no test files]
?   	github.com/docker/docker/api/server/router/volume	[no test files]
?   	github.com/docker/docker/api/types	[no test files]
?   	github.com/docker/docker/api/types/backend	[no test files]
?   	github.com/docker/docker/api/types/blkiodev	[no test files]
?   	github.com/docker/docker/api/types/container	[no test files]
?   	github.com/docker/docker/api/types/events	[no test files]
ok  	github.com/docker/docker/api/types/filters	0.004s	coverage: 94.2% of statements
?   	github.com/docker/docker/api/types/image	[no test files]
?   	github.com/docker/docker/api/types/mount	[no test files]
?   	github.com/docker/docker/api/types/network	[no test files]
?   	github.com/docker/docker/api/types/plugins/logdriver	[no test files]
?   	github.com/docker/docker/api/types/registry	[no test files]
ok  	github.com/docker/docker/api/types/strslice	0.004s	coverage: 90.0% of statements
?   	github.com/docker/docker/api/types/swarm	[no test files]
?   	github.com/docker/docker/api/types/swarm/runtime	[no test files]
ok  	github.com/docker/docker/api/types/time	0.004s	coverage: 100.0% of statements
ok  	github.com/docker/docker/api/types/versions	0.002s	coverage: 75.0% of statements
?   	github.com/docker/docker/api/types/versions/v1p19	[no test files]
?   	github.com/docker/docker/api/types/versions/v1p20	[no test files]
?   	github.com/docker/docker/api/types/volume	[no test files]
?   	github.com/docker/docker/builder	[no test files]
?   	github.com/docker/docker/builder/builder-next	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/containerimage	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/snapshot	[no test files]
?   	github.com/docker/docker/builder/builder-next/exporter	[no test files]
?   	github.com/docker/docker/builder/builder-next/imagerefchecker	[no test files]
?   	github.com/docker/docker/builder/builder-next/worker	[no test files]
ok  	github.com/docker/docker/builder/dockerfile	0.529s	coverage: 45.4% of statements
ok  	github.com/docker/docker/builder/dockerignore	0.002s	coverage: 96.8% of statements
ok  	github.com/docker/docker/builder/fscache	0.121s	coverage: 69.2% of statements
ok  	github.com/docker/docker/builder/remotecontext	0.202s	coverage: 13.5% of statements
ok  	github.com/docker/docker/builder/remotecontext/git	1.148s	coverage: 78.8% of statements
?   	github.com/docker/docker/cli	[no test files]
?   	github.com/docker/docker/cli/config	[no test files]
ok  	github.com/docker/docker/cli/debug	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/client	0.288s	coverage: 75.6% of statements
ok  	github.com/docker/docker/cmd/dockerd	0.077s	coverage: 31.4% of statements
ok  	github.com/docker/docker/cmd/dockerd/hack	0.003s	coverage: 72.9% of statements
ok  	github.com/docker/docker/container	0.126s	coverage: 35.6% of statements
?   	github.com/docker/docker/container/stream	[no test files]
?   	github.com/docker/docker/contrib/apparmor	[no test files]
?   	github.com/docker/docker/contrib/docker-device-tool	[no test files]
?   	github.com/docker/docker/contrib/httpserver	[no test files]
ok  	github.com/docker/docker/daemon	12.168s	coverage: 17.1% of statements
ok  	github.com/docker/docker/daemon/cluster	0.063s	coverage: 0.5% of statements
ok  	github.com/docker/docker/daemon/cluster/controllers/plugin	0.017s	coverage: 65.3% of statements
ok  	github.com/docker/docker/daemon/cluster/convert	0.013s	coverage: 28.0% of statements
?   	github.com/docker/docker/daemon/cluster/executor	[no test files]
ok  	github.com/docker/docker/daemon/cluster/executor/container	3.466s	coverage: 12.7% of statements
?   	github.com/docker/docker/daemon/cluster/provider	[no test files]
ok  	github.com/docker/docker/daemon/config	0.051s	coverage: 84.8% of statements
ok  	github.com/docker/docker/daemon/discovery	0.006s	coverage: 30.4% of statements
ok  	github.com/docker/docker/daemon/events	0.062s	coverage: 50.0% of statements
?   	github.com/docker/docker/daemon/events/testutils	[no test files]
?   	github.com/docker/docker/daemon/exec	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver	0.006s	coverage: 2.2% of statements
ok  	github.com/docker/docker/daemon/graphdriver/aufs	7.953s	coverage: 72.3% of statements
ok  	github.com/docker/docker/daemon/graphdriver/btrfs	0.007s	coverage: 2.9% of statements
ok  	github.com/docker/docker/daemon/graphdriver/copy	0.527s	coverage: 57.0% of statements
ok  	github.com/docker/docker/daemon/graphdriver/devmapper	2.566s	coverage: 45.9% of statements
?   	github.com/docker/docker/daemon/graphdriver/graphtest	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver/overlay	1.139s	coverage: 50.8% of statements
ok  	github.com/docker/docker/daemon/graphdriver/overlay2	2.795s	coverage: 57.0% of statements
?   	github.com/docker/docker/daemon/graphdriver/overlayutils	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver/quota	0.348s	coverage: 75.2% of statements
?   	github.com/docker/docker/daemon/graphdriver/register	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver/vfs	0.010s	coverage: 70.5% of statements
ok  	github.com/docker/docker/daemon/graphdriver/zfs	0.009s	coverage: 3.0% of statements
ok  	github.com/docker/docker/daemon/images	0.019s	coverage: 4.9% of statements
?   	github.com/docker/docker/daemon/initlayer	[no test files]
ok  	github.com/docker/docker/daemon/links	0.003s	coverage: 93.0% of statements
?   	github.com/docker/docker/daemon/listeners	[no test files]
ok  	github.com/docker/docker/daemon/logger	0.230s	coverage: 43.7% of statements
ok  	github.com/docker/docker/daemon/logger/awslogs	0.297s	coverage: 78.2% of statements
?   	github.com/docker/docker/daemon/logger/fluentd	[no test files]
?   	github.com/docker/docker/daemon/logger/gcplogs	[no test files]
ok  	github.com/docker/docker/daemon/logger/gelf	0.007s	coverage: 68.2% of statements
ok  	github.com/docker/docker/daemon/logger/journald	0.018s	coverage: 26.2% of statements
ok  	github.com/docker/docker/daemon/logger/jsonfilelog	0.010s	coverage: 62.1% of statements
ok  	github.com/docker/docker/daemon/logger/jsonfilelog/jsonlog	0.007s	coverage: 88.3% of statements
ok  	github.com/docker/docker/daemon/logger/local	0.027s	coverage: 74.7% of statements
?   	github.com/docker/docker/daemon/logger/logentries	[no test files]
ok  	github.com/docker/docker/daemon/logger/loggerutils	0.010s	coverage: 18.6% of statements
ok  	github.com/docker/docker/daemon/logger/splunk	1.917s	coverage: 84.5% of statements
ok  	github.com/docker/docker/daemon/logger/syslog	0.007s	coverage: 47.8% of statements
ok  	github.com/docker/docker/daemon/logger/templates	0.003s	coverage: 8.3% of statements
?   	github.com/docker/docker/daemon/names	[no test files]
ok  	github.com/docker/docker/daemon/network	0.005s	coverage: 57.1% of statements
?   	github.com/docker/docker/daemon/stats	[no test files]
ok  	github.com/docker/docker/distribution	0.541s	coverage: 16.8% of statements
ok  	github.com/docker/docker/distribution/metadata	0.079s	coverage: 48.2% of statements
?   	github.com/docker/docker/distribution/utils	[no test files]
ok  	github.com/docker/docker/distribution/xfer	1.431s	coverage: 82.8% of statements
?   	github.com/docker/docker/dockerversion	[no test files]
ok  	github.com/docker/docker/errdefs	0.014s	coverage: 76.0% of statements
ok  	github.com/docker/docker/image	0.034s	coverage: 86.3% of statements
ok  	github.com/docker/docker/image/cache	0.014s	coverage: 19.2% of statements
?   	github.com/docker/docker/image/tarexport	[no test files]
ok  	github.com/docker/docker/image/v1	0.011s	coverage: 25.0% of statements
ok  	github.com/docker/docker/internal/procfs	0.004s	coverage: 78.4% of statements
?   	github.com/docker/docker/internal/test	[no test files]
?   	github.com/docker/docker/internal/test/daemon	[no test files]
?   	github.com/docker/docker/internal/test/environment	[no test files]
?   	github.com/docker/docker/internal/test/fakecontext	[no test files]
?   	github.com/docker/docker/internal/test/fakegit	[no test files]
?   	github.com/docker/docker/internal/test/fakestorage	[no test files]
?   	github.com/docker/docker/internal/test/fixtures/load	[no test files]
?   	github.com/docker/docker/internal/test/fixtures/plugin	[no test files]
?   	github.com/docker/docker/internal/test/fixtures/plugin/basic	[no test files]
?   	github.com/docker/docker/internal/test/registry	[no test files]
?   	github.com/docker/docker/internal/test/request	[no test files]
ok  	github.com/docker/docker/internal/testutil	0.004s	coverage: 62.5% of statements
ok  	github.com/docker/docker/layer	7.362s	coverage: 71.4% of statements
ok  	github.com/docker/docker/libcontainerd	0.034s	coverage: 3.4% of statements
?   	github.com/docker/docker/libcontainerd/supervisor	[no test files]
?   	github.com/docker/docker/oci	[no test files]
?   	github.com/docker/docker/oci/caps	[no test files]
ok  	github.com/docker/docker/opts	0.038s	coverage: 68.4% of statements
ok  	github.com/docker/docker/pkg/aaparser	0.003s	coverage: 50.0% of statements
ok  	github.com/docker/docker/pkg/archive	0.810s	coverage: 81.7% of statements
ok  	github.com/docker/docker/pkg/authorization	0.802s	coverage: 66.7% of statements
ok  	github.com/docker/docker/pkg/broadcaster	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/pkg/chrootarchive	3.531s	coverage: 37.0% of statements
?   	github.com/docker/docker/pkg/containerfs	[no test files]
?   	github.com/docker/docker/pkg/devicemapper	[no test files]
ok  	github.com/docker/docker/pkg/directory	0.004s	coverage: 80.0% of statements
ok  	github.com/docker/docker/pkg/discovery	0.005s	coverage: 58.3% of statements
ok  	github.com/docker/docker/pkg/discovery/file	0.005s	coverage: 97.6% of statements
ok  	github.com/docker/docker/pkg/discovery/kv	3.166s	coverage: 84.1% of statements
ok  	github.com/docker/docker/pkg/discovery/memory	0.004s	coverage: 92.3% of statements
ok  	github.com/docker/docker/pkg/discovery/nodes	0.004s	coverage: 93.8% of statements
ok  	github.com/docker/docker/pkg/dmesg	0.003s	coverage: 83.3% of statements
ok  	github.com/docker/docker/pkg/filenotify	0.603s	coverage: 66.3% of statements
ok  	github.com/docker/docker/pkg/fileutils	0.010s	coverage: 89.5% of statements
ok  	github.com/docker/docker/pkg/fsutils	0.196s	coverage: 85.1% of statements
ok  	github.com/docker/docker/pkg/homedir	0.004s	coverage: 41.7% of statements
ok  	github.com/docker/docker/pkg/idtools	0.299s	coverage: 70.2% of statements
ok  	github.com/docker/docker/pkg/ioutils	1.118s	coverage: 69.1% of statements
ok  	github.com/docker/docker/pkg/jsonmessage	0.005s	coverage: 88.3% of statements
ok  	github.com/docker/docker/pkg/locker	0.017s	coverage: 88.9% of statements
ok  	github.com/docker/docker/pkg/longpath	0.002s	coverage: 100.0% of statements
?   	github.com/docker/docker/pkg/loopback	[no test files]
ok  	github.com/docker/docker/pkg/mount	0.451s	coverage: 68.6% of statements
ok  	github.com/docker/docker/pkg/namesgenerator	0.002s	coverage: 85.7% of statements
?   	github.com/docker/docker/pkg/namesgenerator/cmd/names-generator	[no test files]
ok  	github.com/docker/docker/pkg/parsers	0.003s	coverage: 97.0% of statements
ok  	github.com/docker/docker/pkg/parsers/kernel	0.003s	coverage: 60.0% of statements
ok  	github.com/docker/docker/pkg/parsers/operatingsystem	0.003s	coverage: 90.0% of statements
ok  	github.com/docker/docker/pkg/pidfile	0.003s	coverage: 82.4% of statements
?   	github.com/docker/docker/pkg/platform	[no test files]
?   	github.com/docker/docker/pkg/plugingetter	[no test files]
ok  	github.com/docker/docker/pkg/plugins	33.627s	coverage: 76.8% of statements
ok  	github.com/docker/docker/pkg/plugins/pluginrpc-gen	0.012s	coverage: 56.8% of statements
?   	github.com/docker/docker/pkg/plugins/pluginrpc-gen/fixtures	[no test files]
?   	github.com/docker/docker/pkg/plugins/pluginrpc-gen/fixtures/otherfixture	[no test files]
ok  	github.com/docker/docker/pkg/plugins/transport	0.005s	coverage: 85.7% of statements
ok  	github.com/docker/docker/pkg/pools	0.003s	coverage: 87.9% of statements
ok  	github.com/docker/docker/pkg/progress	0.003s	coverage: 75.9% of statements
ok  	github.com/docker/docker/pkg/pubsub	1.083s	coverage: 72.7% of statements
ok  	github.com/docker/docker/pkg/reexec	0.006s	coverage: 82.4% of statements
ok  	github.com/docker/docker/pkg/signal	2.777s	coverage: 61.0% of statements
?   	github.com/docker/docker/pkg/signal/testfiles	[no test files]
ok  	github.com/docker/docker/pkg/stdcopy	0.004s	coverage: 100.0% of statements
ok  	github.com/docker/docker/pkg/streamformatter	0.004s	coverage: 66.2% of statements
ok  	github.com/docker/docker/pkg/stringid	0.003s	coverage: 76.0% of statements
ok  	github.com/docker/docker/pkg/symlink	0.016s	coverage: 87.7% of statements
ok  	github.com/docker/docker/pkg/sysinfo	0.006s	coverage: 75.2% of statements
ok  	github.com/docker/docker/pkg/system	0.021s	coverage: 36.1% of statements
ok  	github.com/docker/docker/pkg/tailfile	0.024s	coverage: 88.6% of statements
ok  	github.com/docker/docker/pkg/tarsum	0.118s	coverage: 89.3% of statements
ok  	github.com/docker/docker/pkg/term	0.005s	coverage: 85.9% of statements
ok  	github.com/docker/docker/pkg/term/windows	0.002s	coverage: 0.0% of statements [no tests to run]
ok  	github.com/docker/docker/pkg/truncindex	0.103s	coverage: 91.5% of statements
ok  	github.com/docker/docker/pkg/urlutil	0.003s	coverage: 100.0% of statements
ok  	github.com/docker/docker/pkg/useragent	0.002s	coverage: 88.9% of statements
ok  	github.com/docker/docker/plugin	0.546s	coverage: 27.3% of statements
ok  	github.com/docker/docker/plugin/executor/containerd	0.013s	coverage: 33.3% of statements
ok  	github.com/docker/docker/plugin/v2	0.005s	coverage: 14.5% of statements
?   	github.com/docker/docker/profiles/apparmor	[no test files]
ok  	github.com/docker/docker/profiles/seccomp	0.007s	coverage: 71.4% of statements
ok  	github.com/docker/docker/reference	0.011s	coverage: 84.4% of statements
ok  	github.com/docker/docker/registry	0.235s	coverage: 57.0% of statements
ok  	github.com/docker/docker/registry/resumable	0.017s	coverage: 100.0% of statements
ok  	github.com/docker/docker/restartmanager	0.003s	coverage: 49.0% of statements
ok  	github.com/docker/docker/runconfig	0.013s	coverage: 68.2% of statements
?   	github.com/docker/docker/runconfig/opts	[no test files]
?   	github.com/docker/docker/volume	[no test files]
ok  	github.com/docker/docker/volume/drivers	0.007s	coverage: 36.1% of statements
ok  	github.com/docker/docker/volume/local	0.030s	coverage: 73.0% of statements
ok  	github.com/docker/docker/volume/mounts	0.049s	coverage: 66.8% of statements
ok  	github.com/docker/docker/volume/service	0.025s	coverage: 73.0% of statements
?   	github.com/docker/docker/volume/service/opts	[no test files]
?   	github.com/docker/docker/volume/testutils	[no test files]

Removing bundles/

---> Making bundle: dynbinary (in bundles/dynbinary)
Building: bundles/dynbinary-daemon/dockerd-dev
Created binary: bundles/dynbinary-daemon/dockerd-dev

---> Making bundle: test-integration (in bundles/test-integration)
Building test suite binary ./integration-cli/test.main
Building test suite binary ./integration/plugin/test.main
Building test suite binary ./integration/plugin/volumes/test.main
Building test suite binary ./integration/plugin/volumes/cmd/test.main
Building test suite binary ./integration/plugin/volumes/cmd/dummy/test.main
Building test suite binary ./integration/plugin/common/test.main
Building test suite binary ./integration/plugin/graphdriver/test.main
Building test suite binary ./integration/plugin/logging/test.main
Building test suite binary ./integration/plugin/logging/cmd/test.main
Building test suite binary ./integration/plugin/logging/cmd/close_on_start/test.main
Building test suite binary ./integration/plugin/logging/cmd/dummy/test.main
Building test suite binary ./integration/plugin/authz/test.main
Building test suite binary ./integration/session/test.main
Building test suite binary ./integration/system/test.main
Building test suite binary ./integration/build/test.main
# github.com/docker/docker/integration/build
integration/build/build_test.go:519:4: missing ',' before newline in argument list
integration/build/build_test.go:520:2: expected operand, found '}'
integration/build/build_test.go:535:1: missing ',' in argument list
integration/build/build_test.go:543:2: missing ',' in argument list
integration/build/build_test.go:544:2: expected ']', found 'for'
integration/build/build_test.go:545:3: missing ',' in argument list
integration/build/build_test.go:546:4: expected operand, found 'continue'
integration/build/build_test.go:549:3: missing ',' in argument list
integration/build/build_test.go:550:4: expected operand, found 'return'
integration/build/build_test.go:551:4: missing ',' before newline in argument list
integration/build/build_test.go:552:3: expected operand, found 'if'
FAIL	github.com/docker/docker/integration/build [setup failed]
Build step 'Execute shell' marked build as failure
Set build name.
New build name is '#38487'
Performing Post build task...
Match found for : : True
Logical operation result is TRUE
Running script  : 
[Docker-PRs-powerpc] $ /bin/sh -xe /tmp/jenkins7956765697866803607.sh
POST BUILD TASK : SUCCESS
END OF POST BUILD TASK : 0
[PostBuildScript] - Executing post build scripts.
[Docker-PRs-powerpc] $ /bin/sh -xe /tmp/jenkins231399324397267691.sh
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/docker/workspace/Docker-PRs-powerpc:/workspace ppc64le/busybox chown -R 1001:1001 /workspace
[Docker-PRs-powerpc] $ /bin/sh -xe /tmp/jenkins1557603934236805482.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ find bundles -name *.log
+ xargs tar -czf bundles.tar.gz
Sending e-mails to: tophj@linux.vnet.ibm.com christy@linux.vnet.ibm.com
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: FAILURE
