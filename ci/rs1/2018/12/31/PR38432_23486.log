Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on azure-windows-rs1-3 (windows-rs1) in workspace /gopath/src/github.com/docker/docker
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init C:\gopath\src\github.com\docker\docker # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse "origin/master^{commit}" # timeout=10
Checking out Revision f76d6a078d881f410c00e8d900dcdfc2e026c841 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f f76d6a078d881f410c00e8d900dcdfc2e026c841
Commit message: "Merge pull request #38370 from farnasirim/36413-bind-dir-skip-copy"
 > git rev-list --no-walk f76d6a078d881f410c00e8d900dcdfc2e026c841 # timeout=10
Set build name.
New build name is '#38432'
[docker] $ sh -xe C:\Users\jenkins\jenkins4888295105943745178.sh
+ git fetch origin +refs/pull/38432/head:refs/remotes/origin/pr/38432
From https://github.com/moby/moby
 * [new ref]               refs/pull/38432/head -> origin/pr/38432
+ git merge origin/pr/38432
Merge made by the 'recursive' strategy.
 hack/ci/windows.ps1                                |   9 +-
 integration-cli/check_test.go                      |   3 +-
 integration-cli/docker_api_swarm_node_test.go      |   2 -
 integration-cli/docker_api_swarm_service_test.go   |  79 ---------
 .../docker_api_swarm_service_unix_test.go          |  90 ++++++++++
 integration-cli/docker_api_swarm_test.go           |   2 -
 integration-cli/docker_cli_swarm_test.go           | 196 ---------------------
 integration-cli/docker_cli_swarm_unix_test.go      | 195 ++++++++++++++++++++
 internal/test/daemon/daemon.go                     |  14 +-
 internal/test/daemon/daemon_unix.go                |   6 +
 internal/test/daemon/daemon_windows.go             |   6 +
 internal/test/daemon/swarm.go                      |   4 -
 internal/test/daemon/swarm_unix.go                 |   7 +
 internal/test/daemon/swarm_windows.go              |   7 +
 14 files changed, 324 insertions(+), 296 deletions(-)
 create mode 100644 integration-cli/docker_api_swarm_service_unix_test.go
 create mode 100644 internal/test/daemon/swarm_unix.go
 create mode 100644 internal/test/daemon/swarm_windows.go
[docker] $ powershell.exe -NonInteractive -ExecutionPolicy ByPass "& 'C:\Users\jenkins\jenkins8405116917517838565.ps1'"
NEW entrypoint

INFO: executeCI.ps1 starting at Mon Dec 31 18:18:52 CUT 2018

INFO: Script version 28-Aug-2018 09:33 PDT
INFO: Running git version 2.18.0.windows.1
INFO: Branch:rs1_release Build:14393.2312.180607-1919
INFO: Environment variables:

Name                           Value                                                                                   
----                           -----                                                                                   
_                              /cygdrive/c/ProgramData/Oracle/Java/javapath/java                                       
ALLUSERSPROFILE                C:\ProgramData                                                                          
APPDATA                        C:\Users\jenkins\AppData\Roaming                                                        
BASE_BRANCH                    master                                                                                  
BUILD_CAUSE                    MANUALTRIGGER                                                                           
BUILD_CAUSE_MANUALTRIGGER      true                                                                                    
BUILD_DISPLAY_NAME             #38432                                                                                  
BUILD_ID                       23486                                                                                   
BUILD_NUMBER                   23486                                                                                   
BUILD_TAG                      jenkins-Docker-PRs-WoW-RS1-23486                                                        
BUILD_URL                      https://jenkins.dockerproject.org/job/Docker-PRs-WoW-RS1/23486/                         
CommonProgramFiles             C:\Program Files\Common Files                                                           
CommonProgramFiles(x86)        C:\Program Files (x86)\Common Files                                                     
CommonProgramW6432             C:\Program Files\Common Files                                                           
COMPUTERNAME                   jenkins-rs1-3                                                                           
COMSPEC                        C:\Windows\system32\cmd.exe                                                             
ConfigSet                      rs                                                                                      
CYGWIN                         binmode ntsec                                                                           
EXECUTOR_NUMBER                0                                                                                       
GIT_AUTHOR_EMAIL               janky@dockerproject.org                                                                 
GIT_AUTHOR_NAME                Docker Jenkins                                                                          
GIT_BASE_REPO                  moby/moby                                                                               
GIT_BRANCH                     origin/master                                                                           
GIT_COMMIT                     f76d6a078d881f410c00e8d900dcdfc2e026c841                                                
GIT_COMMITTER_EMAIL            janky@dockerproject.org                                                                 
GIT_COMMITTER_NAME             Docker Jenkins                                                                          
GIT_HEAD_REPO                  olljanat/moby                                                                           
GIT_PREVIOUS_COMMIT            f76d6a078d881f410c00e8d900dcdfc2e026c841                                                
GIT_PREVIOUS_SUCCESSFUL_COMMIT f76d6a078d881f410c00e8d900dcdfc2e026c841                                                
GIT_SHA1                       32fd8adb36f7ae828542b0d425e54254bf725987                                                
GIT_URL                        https://github.com/moby/moby.git                                                        
GITHUB_URL                     https://github.com/moby/moby/pull/38432                                                 
HOME                           C:\cygwin\home\jenkins                                                                  
HOMEDRIVE                      C:                                                                                      
HOMEPATH                       \cygwin\home\jenkins                                                                    
HUDSON_COOKIE                  16c47d35-0a3a-4d39-9b99-f7b4853d8ac9                                                    
HUDSON_HOME                    /var/jenkins_home                                                                       
HUDSON_SERVER_COOKIE           5654907fc74b1465                                                                        
HUDSON_URL                     https://jenkins.dockerproject.org/                                                      
INTEGRATION_TEST_NAME          DockerSwarmSuite                                                                        
JENKINS_HOME                   /var/jenkins_home                                                                       
JENKINS_SERVER_COOKIE          5654907fc74b1465                                                                        
JENKINS_URL                    https://jenkins.dockerproject.org/                                                      
JOB_BASE_NAME                  Docker-PRs-WoW-RS1                                                                      
JOB_DISPLAY_URL                https://jenkins.dockerproject.org/job/Docker-PRs-WoW-RS1/display/redirect               
JOB_NAME                       Docker-PRs-WoW-RS1                                                                      
JOB_URL                        https://jenkins.dockerproject.org/job/Docker-PRs-WoW-RS1/                               
LOCALAPPDATA                   C:\Users\jenkins\AppData\Local                                                          
LOGNAME                        jenkins                                                                                 
LOGONSERVER                    \\jenkins-rs1-3                                                                         
MAIL                           /var/spool/mail//jenkins                                                                
NODE_LABELS                    azure-windows-rs1-3 windows-rs1                                                         
NODE_NAME                      azure-windows-rs1-3                                                                     
NUMBER_OF_PROCESSORS           4                                                                                       
OLDPWD                         /home/jenkins                                                                           
OS                             Windows_NT                                                                              
PATH                           C:\cygwin\bin;C:\ProgramData\Oracle\Java\javapath;C:\pstools;C:\Program Files\Notepad...
PATHEXT                        .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL                              
PR                             38432                                                                                   
PROCESSOR_ARCHITECTURE         AMD64                                                                                   
PROCESSOR_IDENTIFIER           Intel64 Family 6 Model 79 Stepping 1, GenuineIntel                                      
PROCESSOR_LEVEL                6                                                                                       
PROCESSOR_REVISION             4f01                                                                                    
ProgramData                    C:\ProgramData                                                                          
PROGRAMFILES                   C:\Program Files                                                                        
ProgramFiles(x86)              C:\Program Files (x86)                                                                  
ProgramW6432                   C:\Program Files                                                                        
PSExecutionPolicyPreference    Bypass                                                                                  
PSModulePath                   C:\Users\jenkins\Documents\WindowsPowerShell\Modules;C:\Program Files\WindowsPowerShe...
PUBLIC                         C:\Users\Public                                                                         
PWD                            /cygdrive/c/workspace                                                                   
ROOT_BUILD_CAUSE               MANUALTRIGGER                                                                           
ROOT_BUILD_CAUSE_MANUALTRIGGER true                                                                                    
RUN_CHANGES_DISPLAY_URL        https://jenkins.dockerproject.org/job/Docker-PRs-WoW-RS1/23486/display/redirect?page=...
RUN_DISPLAY_URL                https://jenkins.dockerproject.org/job/Docker-PRs-WoW-RS1/23486/display/redirect         
SHELL                          /bin/bash                                                                               
SHLVL                          1                                                                                       
SKIP_UNIT_TESTS                yes                                                                                     
SKIP_VALIDATION_TESTS          yes                                                                                     
SOURCES_DRIVE                  c                                                                                       
SOURCES_SUBDIR                 gopath                                                                                  
SSH_CLIENT                     52.88.204.51 15996 22                                                                   
SSH_CONNECTION                 52.88.204.51 15996 10.0.0.12 22                                                         
SYSTEMDRIVE                    C:                                                                                      
SYSTEMROOT                     C:\Windows                                                                              
TEMP                           d:\temp                                                                                 
TESTRUN_DRIVE                  d                                                                                       
TESTRUN_SUBDIR                 CI                                                                                      
USER                           jenkins                                                                                 
USERDOMAIN                     jenkins-rs1-3                                                                           
USERNAME                       jenkins                                                                                 
USERPROFILE                    C:\Users\jenkins                                                                        
WINDIR                         C:\Windows                                                                              
WORKSPACE                      /gopath/src/github.com/docker/docker                                                    



INFO: PR#38432 (https://github.com/docker/docker/pull/38432)
INFO: Sources under c:\gopath\...
INFO: Test run under d:\CI\...
INFO: Running in C:\gopath\src\github.com\docker\docker
INFO: docker/docker repository was found
INFO: Image microsoft/windowsservercore:latest is already loaded in the control daemon
INFO: Version of microsoft/windowsservercore:latest is '10.0.14393.2312'
INFO: Docker version of control daemon

Client:
 Version:           master-dockerproject-2018-10-09
 API version:       1.39
 Go version:        go1.10.4
 Git commit:        ab50c2f2
 Built:             Tue Oct  9 23:49:39 2018
 OS/Arch:           windows/amd64
 Experimental:      false

Server:
 Engine:
  Version:          master-dockerproject-2018-10-09
  API version:      1.39 (minimum version 1.24)
  Go version:       go1.11.1
  Git commit:       82a4797
  Built:            Tue Oct  9 23:58:23 2018
  OS/Arch:          windows/amd64
  Experimental:     false

INFO: Docker info of control daemon

Containers: 0
 Running: 0
 Paused: 0
 Stopped: 0
Images: 7
Server Version: master-dockerproject-2018-10-09
Storage Driver: windowsfilter
 Windows: 
Logging Driver: json-file
Plugins:
 Volume: local
 Network: ics l2bridge l2tunnel nat null overlay transparent
 Log: awslogs etwlogs fluentd gcplogs gelf json-file local logentries splunk syslog
Swarm: inactive
Default Isolation: process
Kernel Version: 10.0 14393 (14393.2312.amd64fre.rs1_release.180607-1919)
Operating System: Windows Server 2016 Datacenter Version 1607 (OS Build 14393.2312)
OSType: windows
Architecture: x86_64
CPUs: 4
Total Memory: 14GiB
Name: jenkins-rs1-3
ID: ST22:AQMQ:EU4D:3GXY:7YK3:ZLTB:THON:6IRY:XA7E:M3BI:5RVG:LIOT
Docker Root Dir: D:\control
Debug Mode (client): false
Debug Mode (server): false
Registry: https://index.docker.io/v1/
Labels:
Experimental: false
Insecure Registries:
 127.0.0.0/8
Live Restore Enabled: false


INFO: Commit hash is c1d1de12cd
INFO: Nuke-Everything...
INFO: Container count on control daemon to delete is 0
INFO: Nuking d:\CI
INFO: Zapped successfully
INFO: Location for testing is d:\CI\CI-c1d1de12cd
INFO: Validating GOLang consistency in Dockerfile.windows...


INFO: Building the image from Dockerfile.windows at 12/31/2018 18:18:54...

Sending build context to Docker daemon  46.38MB

Step 1/7 : FROM microsoft/windowsservercore
 ---> eb1805404161
Step 2/7 : SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]
 ---> Using cache
 ---> 9b42496e1aea
Step 3/7 : ENV GO_VERSION=1.11.4     GIT_VERSION=2.11.1     GOPATH=C:\go     FROM_DOCKERFILE=1
 ---> Using cache
 ---> f2effea86537
Step 4/7 : RUN   Function Test-Nano() {     $EditionId = (Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion' -Name 'EditionID').EditionId;     return (($EditionId -eq 'ServerStandardNano') -or ($EditionId -eq 'ServerDataCenterNano') -or ($EditionId -eq 'NanoServer'));   }    Function Download-File([string] $source, [string] $target) {     if (Test-Nano) {       $handler = New-Object System.Net.Http.HttpClientHandler;       $client = New-Object System.Net.Http.HttpClient($handler);       $client.Timeout = New-Object System.TimeSpan(0, 30, 0);       $cancelTokenSource = [System.Threading.CancellationTokenSource]::new();       $responseMsg = $client.GetAsync([System.Uri]::new($source), $cancelTokenSource.Token);       $responseMsg.Wait();       if (!$responseMsg.IsCanceled) {         $response = $responseMsg.Result;         if ($response.IsSuccessStatusCode) {           $downloadedFileStream = [System.IO.FileStream]::new($target, [System.IO.FileMode]::Create, [System.IO.FileAccess]::Write);           $copyStreamOp = $response.Content.CopyToAsync($downloadedFileStream);           $copyStreamOp.Wait();           $downloadedFileStream.Close();           if ($copyStreamOp.Exception -ne $null) { throw $copyStreamOp.Exception }         }       } else {       Throw ("Failed to download " + $source)       }    } else {       $webClient = New-Object System.Net.WebClient;       $webClient.DownloadFile($source, $target);     }   }     setx /M PATH $('C:\git\cmd;C:\git\usr\bin;'+$Env:PATH+';C:\gcc\bin;C:\go\bin');     Write-Host INFO: Downloading git...;   $location='https://www.nuget.org/api/v2/package/GitForWindows/'+$Env:GIT_VERSION;   Download-File $location C:\gitsetup.zip;     Write-Host INFO: Downloading go...;   Download-File $('https://golang.org/dl/go'+$Env:GO_VERSION+'.windows-amd64.zip') C:\go.zip;     Write-Host INFO: Downloading compiler 1 of 3...;   Download-File https://raw.githubusercontent.com/jhowardmsft/docker-tdmgcc/master/gcc.zip C:\gcc.zip;     Write-Host INFO: Downloading compiler 2 of 3...;   Download-File https://raw.githubusercontent.com/jhowardmsft/docker-tdmgcc/master/runtime.zip C:\runtime.zip;     Write-Host INFO: Downloading compiler 3 of 3...;   Download-File https://raw.githubusercontent.com/jhowardmsft/docker-tdmgcc/master/binutils.zip C:\binutils.zip;     Write-Host INFO: Extracting git...;   Expand-Archive C:\gitsetup.zip C:\git-tmp;   New-Item -Type Directory C:\git | Out-Null;   Move-Item C:\git-tmp\tools\* C:\git\.;   Remove-Item -Recurse -Force C:\git-tmp;     Write-Host INFO: Expanding go...;   Expand-Archive C:\go.zip -DestinationPath C:\;     Write-Host INFO: Expanding compiler 1 of 3...;   Expand-Archive C:\gcc.zip -DestinationPath C:\gcc -Force;   Write-Host INFO: Expanding compiler 2 of 3...;   Expand-Archive C:\runtime.zip -DestinationPath C:\gcc -Force;   Write-Host INFO: Expanding compiler 3 of 3...;   Expand-Archive C:\binutils.zip -DestinationPath C:\gcc -Force;     Write-Host INFO: Removing downloaded files...;   Remove-Item C:\gcc.zip;   Remove-Item C:\runtime.zip;   Remove-Item C:\binutils.zip;   Remove-Item C:\gitsetup.zip;     Write-Host INFO: Creating source directory...;   New-Item -ItemType Directory -Path C:\go\src\github.com\docker\docker | Out-Null;     Write-Host INFO: Configuring git core.autocrlf...;   C:\git\cmd\git config --global core.autocrlf true;     Write-Host INFO: Completed
 ---> Using cache
 ---> c9af12fc4480
Step 5/7 : ENTRYPOINT ["powershell.exe"]
 ---> Using cache
 ---> f9e9fa35e9d4
Step 6/7 : WORKDIR C:\go\src\github.com\docker\docker
 ---> Using cache
 ---> 30cee57bd49a
Step 7/7 : COPY . .
 ---> e511cdfb3cb4
Successfully built e511cdfb3cb4
Successfully tagged docker:latest
INFO: Image build ended at 12/31/2018 18:19:34. Duration:00:00:39.8897804


INFO: Building the test binaries at 12/31/2018 18:19:34...
INFO: make.ps1 starting at 12/31/2018 18:19:56
INFO: Git commit (c1d1de12cd) assumed from DOCKER_GITCOMMIT environment variable
INFO: Invoking autogen...
INFO: Building daemon...
INFO: Downloading docker/cli version 17.06.0-ce from edge...

 ________   ____  __.
 \_____  \ |    |/ _|
 /   |   \|      <
 /    |    \    |  \
 \_______  /____|__ \
         \/        \/

INFO: make.ps1 ended at 12/31/2018 18:20:59
INFO: Binaries build ended at 12/31/2018 18:21:06. Duration:00:01:32.3164066
INFO: Copying the built daemon binary to d:\CI\CI-c1d1de12cd\binary\dockerd-c1d1de12cd.exe...
INFO: Copying the built client binary to d:\CI\CI-c1d1de12cd\binary\docker-c1d1de12cd.exe...
INFO: Copying dockerversion from the container...
INFO: Copying the golang package from the container to d:\CI\CI-c1d1de12cd\installer\go.zip...
INFO: Extracting go.zip to d:\CI\CI-c1d1de12cd\go
INFO: Extraction ended at 12/31/2018 18:22:08. Duration:00:00:29.0707358
INFO: Updating the golang and path environment variables
INFO: GOPATH=c:\gopath
INFO: go version go1.11.4 windows/amd64
INFO: Starting a daemon under test...
INFO: Args: -H tcp://0.0.0.0:2357 --data-root d:\CI\CI-c1d1de12cd\daemon --pidfile d:\CI\CI-c1d1de12cd\docker.pid
INFO: Process started successfully.
INFO: Waiting for the daemon under test to start...
INFO: Daemon under test started and replied!
INFO: Docker version of the daemon under test

Client:
 Version:      17.06.0-ce
 API version:  1.30
 Go version:   go1.8.3
 Git commit:   02c1d87
 Built:        Fri Jun 23 21:30:30 2017
 OS/Arch:      windows/amd64

Server:
 Version:      0.0.0-dev
 API version:  1.40 (minimum version 1.24)
 Go version:   go1.11.4
 Git commit:   c1d1de12cd
 Built:        12/31/2018 18:19:56
 OS/Arch:      windows/amd64
 Experimental: false

INFO: Docker info of the daemon under test

Containers: 0
 Running: 0
 Paused: 0
 Stopped: 0
Images: 0
Server Version: 0.0.0-dev
Storage Driver: windowsfilter
 Windows: 
Logging Driver: json-file
Plugins: 
 Volume: local
 Network: ics l2bridge l2tunnel nat null overlay transparent
 Log: awslogs etwlogs fluentd gcplogs gelf json-file local logentries splunk syslog
Swarm: inactive
Default Isolation: process
Kernel Version: 10.0 14393 (14393.2312.amd64fre.rs1_release.180607-1919)
Operating System: Windows Server 2016 Datacenter Version 1607 (OS Build 14393.2312)
OSType: windows
Architecture: x86_64
CPUs: 4
Total Memory: 14GiB
Name: jenkins-rs1-3
ID: NFAB:2PIP:L4EX:U5KS:GXK7:B6QQ:SU7S:PS7P:OGMF:GG67:WOPV:2YWT
Docker Root Dir: D:\CI\CI-c1d1de12cd\daemon
Debug Mode (client): false
Debug Mode (server): false
Registry: https://index.docker.io/v1/
Labels:
Experimental: false
Insecure Registries:
 127.0.0.0/8
Live Restore Enabled: false


INFO: Docker images of the daemon under test

REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE

INFO: Base image for tests is microsoft/windowsservercore
INFO: Loading windowsservercore .tar from disk into the daemon under test. This may take some time...
Loaded image: microsoft/windowsservercore:10.0.14393.2312
Loaded image: microsoft/windowsservercore:latest
INFO: docker load of windowsservercore  into daemon under test completed successfully
INFO: Version of microsoft/windowsservercore:latest is '10.0.14393.2312'
WARN: Skipping validation tests
WARN: Skipping unit tests
INFO: Building busybox
Downloading build context from remote url: https://raw.githubusercontent.com/jhowardmsft/busybox/v1.1/Dockerfile     701B
Downloading build context from remote url: https://raw.githubusercontent.com/jhowardmsft/busybox/v1.1/Dockerfile     701B

Sending build context to Docker daemon   2.56kB

Step 1/6 : FROM microsoft/windowsservercore
 ---> eb1805404161
Step 2/6 : RUN mkdir C:\tmp && mkdir C:\bin
 ---> Running in 7d5ef2079204
Removing intermediate container 7d5ef2079204
 ---> d4d7b2cb7d9b
Step 3/6 : ADD http://frippery.org/files/busybox/busybox.exe /bin/

 ---> d479f2d5a9b1
Step 4/6 : RUN setx /M PATH "C:\bin;%PATH%"
 ---> Running in 7fcb55043a37

SUCCESS: Specified value was saved.
Removing intermediate container 7fcb55043a37
 ---> 0ba334757cb5
Step 5/6 : RUN powershell busybox.exe --list ^|%{$nul = cmd /c mklink C:\bin\$_.exe busybox.exe}
 ---> Running in e05105f91a67
Cannot create a file when that file already exists.
Removing intermediate container e05105f91a67
 ---> c4ea8ae00071
Step 6/6 : CMD ["sh"]
 ---> Running in 894cbe7be935
Removing intermediate container 894cbe7be935
 ---> 9ea400c33149
Successfully built 9ea400c33149
Successfully tagged busybox:latest
INFO: Docker images of the daemon under test

REPOSITORY                    TAG                 IMAGE ID            CREATED             SIZE
busybox                       latest              9ea400c33149        1 second ago        7.19GB
microsoft/windowsservercore   10.0.14393.2312     eb1805404161        6 months ago        7.15GB
microsoft/windowsservercore   latest              eb1805404161        6 months ago        7.15GB

INFO: Running integration tests at 12/31/2018 18:28:33...
WARN: Only running integration tests matching DockerSwarmSuite
INFO: Integration tests being run from the host:
INFO: go test "-check.v" "-check.f" "DockerSwarmSuite" "-tags" "autogen" "-check.timeout" "10m" "-test.timeout" "200m" 
INFO: DOCKER_HOST at tcp://127.0.0.1:2357
INFO: Windows Base image is  microsoft/windowsservercore
INFO: Testing against a local daemon

----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:883: DockerSwarmSuite.TestAPIDuplicateNetworks

[df72c0be55329] waiting for daemon to start
docker_api_swarm_test.go:884:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:1010: DockerSwarmSuite.TestAPINetworkInspectWithScope

[d777620c19a1c] waiting for daemon to start
docker_api_swarm_test.go:1011:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_service_test.go:28: DockerSwarmSuite.TestAPIServiceUpdatePort

[d79ab097fcdd8] waiting for daemon to start
docker_api_swarm_service_test.go:29:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:183: DockerSwarmSuite.TestAPISwarmCAHash

[d954f80ae11df] waiting for daemon to start
docker_api_swarm_test.go:184:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:867: DockerSwarmSuite.TestAPISwarmErrorHandling

[db6e074955d1e] waiting for daemon to start
docker_api_swarm_test.go:871:
    d := s.AddDaemon(c, false, false)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:538: DockerSwarmSuite.TestAPISwarmForceNewCluster

[dbdb7c9948f53] waiting for daemon to start
docker_api_swarm_test.go:539:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
SKIP: docker_api_swarm_test.go:914: DockerSwarmSuite.TestAPISwarmHealthcheckNone (Root cause of Issue #36386 is needed)

----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:33: DockerSwarmSuite.TestAPISwarmInit

[d5a8bffdc807e] waiting for daemon to start
docker_api_swarm_test.go:35:
    // todo: should find a better way to verify that components are running than /info
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:520: DockerSwarmSuite.TestAPISwarmInvalidAddress

[d7d37ac0a0773] waiting for daemon to start
docker_api_swarm_test.go:521:
    d := s.AddDaemon(c, false, false)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:79: DockerSwarmSuite.TestAPISwarmJoinToken

[d683cb333a77c] waiting for daemon to start
docker_api_swarm_test.go:80:
    d1 := s.AddDaemon(c, false, false)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:294: DockerSwarmSuite.TestAPISwarmLeaderElection

[d2748de4664be] waiting for daemon to start
docker_api_swarm_test.go:296:
    // Create 3 nodes
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:269: DockerSwarmSuite.TestAPISwarmLeaderProxy

[d334a4325ee2c] waiting for daemon to start
docker_api_swarm_test.go:271:
    // add three managers, one of these is leader
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:421: DockerSwarmSuite.TestAPISwarmLeaveOnPendingJoin

[dae589f075f4c] waiting for daemon to start
docker_api_swarm_test.go:423:
    s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:398: DockerSwarmSuite.TestAPISwarmLeaveRemovesContainer

[d0c1674b32027] waiting for daemon to start
docker_api_swarm_test.go:399:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_node_test.go:12: DockerSwarmSuite.TestAPISwarmListNodes

[d54d0f238666c] waiting for daemon to start
docker_api_swarm_node_test.go:13:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:470: DockerSwarmSuite.TestAPISwarmManagerRestore

[d99a9d3543314] waiting for daemon to start
docker_api_swarm_test.go:471:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_node_test.go:73: DockerSwarmSuite.TestAPISwarmNodeDrainPause

[d78ed1aab8995] waiting for daemon to start
docker_api_swarm_node_test.go:74:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_node_test.go:44: DockerSwarmSuite.TestAPISwarmNodeRemove

[d5c705ebe945a] waiting for daemon to start
docker_api_swarm_node_test.go:46:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_node_test.go:31: DockerSwarmSuite.TestAPISwarmNodeUpdate

[d43bcce23594d] waiting for daemon to start
docker_api_swarm_node_test.go:32:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:199: DockerSwarmSuite.TestAPISwarmPromoteDemote

[dfbc9e9f57577] waiting for daemon to start
docker_api_swarm_test.go:200:
    d1 := s.AddDaemon(c, false, false)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:357: DockerSwarmSuite.TestAPISwarmRaftQuorum

[d773c310980b4] waiting for daemon to start
docker_api_swarm_test.go:358:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:774: DockerSwarmSuite.TestAPISwarmRestartCluster

[d90cd2024056e] waiting for daemon to start
docker_api_swarm_test.go:779:
    manager := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:451: DockerSwarmSuite.TestAPISwarmRestoreOnPendingJoin

[d5496a97ef977] waiting for daemon to start
docker_api_swarm_test.go:453:
    d := s.AddDaemon(c, false, false)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:496: DockerSwarmSuite.TestAPISwarmScaleNoRollingUpdate

[dd49fe943e06d] waiting for daemon to start
docker_api_swarm_test.go:497:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_service_test.go:398: DockerSwarmSuite.TestAPISwarmServiceConstraintLabel

[dee558a1cb2dc] waiting for daemon to start
docker_api_swarm_service_test.go:402:
    daemons[i] = s.AddDaemon(c, true, i == 0)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_service_test.go:346: DockerSwarmSuite.TestAPISwarmServiceConstraintRole

[d70c880331f2c] waiting for daemon to start
docker_api_swarm_service_test.go:350:
    daemons[i] = s.AddDaemon(c, true, i == 0)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_service_test.go:493: DockerSwarmSuite.TestAPISwarmServicePlacementPrefs

[dcbd33fb68a09] waiting for daemon to start
docker_api_swarm_service_test.go:497:
    daemons[i] = s.AddDaemon(c, true, i == 0)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_service_test.go:57: DockerSwarmSuite.TestAPISwarmServicesCreate

[de7d7af354313] waiting for daemon to start
docker_api_swarm_service_test.go:58:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_service_test.go:119: DockerSwarmSuite.TestAPISwarmServicesCreateGlobal

[dbeff5618346d] waiting for daemon to start
docker_api_swarm_service_test.go:120:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_service_test.go:49: DockerSwarmSuite.TestAPISwarmServicesEmptyList

[d4baefc07fd79] waiting for daemon to start
docker_api_swarm_service_test.go:50:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_service_test.go:306: DockerSwarmSuite.TestAPISwarmServicesFailedUpdate

[d8044831e3f6a] waiting for daemon to start
docker_api_swarm_service_test.go:310:
    daemons[i] = s.AddDaemon(c, true, i == 0)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_service_test.go:91: DockerSwarmSuite.TestAPISwarmServicesMultipleAgents

[d63806da6fcb6] waiting for daemon to start
docker_api_swarm_service_test.go:92:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_service_test.go:137: DockerSwarmSuite.TestAPISwarmServicesUpdate

[deb1806d18c09] waiting for daemon to start
docker_api_swarm_service_test.go:141:
    daemons[i] = s.AddDaemon(c, true, i == 0)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_service_test.go:197: DockerSwarmSuite.TestAPISwarmServicesUpdateStartFirst

[dde6d8719c417] waiting for daemon to start
docker_api_swarm_service_test.go:198:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:839: DockerSwarmSuite.TestAPISwarmServicesUpdateWithName

[dea950230feec] waiting for daemon to start
docker_api_swarm_test.go:840:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:859: DockerSwarmSuite.TestAPISwarmUnlockNotLocked

[dd68c58827cd7] waiting for daemon to start
docker_api_swarm_test.go:860:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:749: DockerSwarmSuite.TestDNSConfig

[db6b3692cea2e] waiting for daemon to start
docker_cli_swarm_test.go:750:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:776: DockerSwarmSuite.TestDNSConfigUpdate

[dc2df06f1619e] waiting for daemon to start
docker_cli_swarm_test.go:777:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1216: DockerSwarmSuite.TestExtraHosts

[dfe9fd4c0f367] waiting for daemon to start
docker_cli_swarm_test.go:1217:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1410: DockerSwarmSuite.TestNetworkInspectWithDuplicateNames

[db8ea0779f3e9] waiting for daemon to start
docker_cli_swarm_test.go:1411:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:383: DockerSwarmSuite.TestOverlayAttachable

[d0e36e289e66c] waiting for daemon to start
docker_cli_swarm_test.go:384:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:405: DockerSwarmSuite.TestOverlayAttachableOnSwarmLeave

[decc9b61b03d3] waiting for daemon to start
docker_cli_swarm_test.go:406:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:432: DockerSwarmSuite.TestOverlayAttachableReleaseResourcesOnFailure

[d81642bd7634c] waiting for daemon to start
docker_cli_swarm_test.go:433:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:587: DockerSwarmSuite.TestPsListContainersFilterIsTask

[df71e4aadea7d] waiting for daemon to start
docker_cli_swarm_test.go:588:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1191: DockerSwarmSuite.TestSwarmAlternateLockUnlock

[d872a97edf4be] waiting for daemon to start
docker_cli_swarm_test.go:1192:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1770: DockerSwarmSuite.TestSwarmClusterEventsConfig

[da5f17486788d] waiting for daemon to start
docker_cli_swarm_test.go:1771:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1731: DockerSwarmSuite.TestSwarmClusterEventsNetwork

[de1618e77d7d0] waiting for daemon to start
docker_cli_swarm_test.go:1732:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1701: DockerSwarmSuite.TestSwarmClusterEventsNode

[d8d1932b27529] waiting for daemon to start
docker_cli_swarm_test.go:1702:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1617: DockerSwarmSuite.TestSwarmClusterEventsScope

[d982319b55d9c] waiting for daemon to start
docker_cli_swarm_test.go:1618:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1750: DockerSwarmSuite.TestSwarmClusterEventsSecret

[dab87e1b892bf] waiting for daemon to start
docker_cli_swarm_test.go:1751:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1661: DockerSwarmSuite.TestSwarmClusterEventsService

[da89ffd8c3925] waiting for daemon to start
docker_cli_swarm_test.go:1662:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1597: DockerSwarmSuite.TestSwarmClusterEventsSource

[d791613421c17] waiting for daemon to start
docker_cli_swarm_test.go:1598:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1638: DockerSwarmSuite.TestSwarmClusterEventsType

[d795f5048003a] waiting for daemon to start
docker_cli_swarm_test.go:1639:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1120: DockerSwarmSuite.TestSwarmClusterRotateUnlockKey

[d61621563e9f5] waiting for daemon to start
docker_cli_swarm_test.go:1121:
    d1 := s.AddDaemon(c, true, true) // leader - don't restart this one, we don't want leader election delays
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:355: DockerSwarmSuite.TestSwarmContainerAttachByNetworkId

[de35a75d4992d] waiting for daemon to start
docker_cli_swarm_test.go:356:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:308: DockerSwarmSuite.TestSwarmContainerAutoStart

[d7ec83039a198] waiting for daemon to start
docker_cli_swarm_test.go:309:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:330: DockerSwarmSuite.TestSwarmContainerEndpointOptions

[d2d40f4ebaad3] waiting for daemon to start
docker_cli_swarm_test.go:331:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:510: DockerSwarmSuite.TestSwarmCreateServiceWithNoIngressNetwork

[d2396357e1af2] waiting for daemon to start
docker_cli_swarm_test.go:511:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:135: DockerSwarmSuite.TestSwarmIncompatibleDaemon

[df70bf7555284] waiting for daemon to start
docker_cli_swarm_test.go:137:
    // init swarm mode and stop a daemon
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:456: DockerSwarmSuite.TestSwarmIngressNetwork

[d44a7bcef91b8] waiting for daemon to start
docker_cli_swarm_test.go:457:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:73: DockerSwarmSuite.TestSwarmInit

[d42a83bbbc7b5] waiting for daemon to start
docker_cli_swarm_test.go:74:
    d := s.AddDaemon(c, false, false)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
SKIP: docker_cli_swarm_test.go:116: DockerSwarmSuite.TestSwarmInitIPv6 (unmatched requirement IPv6)

----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:857: DockerSwarmSuite.TestSwarmInitLocked

[dbaae24485af9] waiting for daemon to start
docker_cli_swarm_test.go:858:
    d := s.AddDaemon(c, false, false)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:128: DockerSwarmSuite.TestSwarmInitUnspecifiedAdvertiseAddr

[d59d1ec298e94] waiting for daemon to start
docker_cli_swarm_test.go:129:
    d := s.AddDaemon(c, false, false)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1535: DockerSwarmSuite.TestSwarmInitUnspecifiedDataPathAddr

[d23212cf8837f] waiting for daemon to start
docker_cli_swarm_test.go:1536:
    d := s.AddDaemon(c, false, false)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1378: DockerSwarmSuite.TestSwarmInitWithDrain

[dca041c92cb6d] waiting for daemon to start
docker_cli_swarm_test.go:1379:
    d := s.AddDaemon(c, false, false)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1547: DockerSwarmSuite.TestSwarmJoinLeave

[d6b0898bd4cf4] waiting for daemon to start
docker_cli_swarm_test.go:1548:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:993: DockerSwarmSuite.TestSwarmJoinPromoteLocked

[d2817f50f67ed] waiting for daemon to start
docker_cli_swarm_test.go:994:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1350: DockerSwarmSuite.TestSwarmJoinWithDrain

[d040c5c466dac] waiting for daemon to start
docker_cli_swarm_test.go:1351:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:899: DockerSwarmSuite.TestSwarmLeaveLocked

[dfee958e1eee2] waiting for daemon to start
docker_cli_swarm_test.go:900:
    d := s.AddDaemon(c, false, false)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:932: DockerSwarmSuite.TestSwarmLockUnlockCluster

[d90166ad35044] waiting for daemon to start
docker_cli_swarm_test.go:933:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1239: DockerSwarmSuite.TestSwarmManagerAddress

[db5e8574a36d5] waiting for daemon to start
docker_cli_swarm_test.go:1240:
    d1 := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1309: DockerSwarmSuite.TestSwarmNetworkCreateDup

[d88641b8511f9] waiting for daemon to start
docker_cli_swarm_test.go:1310:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1286: DockerSwarmSuite.TestSwarmNetworkCreateIssue27866

[d3e4eb2149a10] waiting for daemon to start
docker_cli_swarm_test.go:1287:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1260: DockerSwarmSuite.TestSwarmNetworkIPAMOptions

[d5626b97196e3] waiting for daemon to start
docker_cli_swarm_test.go:1261:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:218: DockerSwarmSuite.TestSwarmNodeListFilter

[d66391e6851de] waiting for daemon to start
docker_cli_swarm_test.go:219:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:237: DockerSwarmSuite.TestSwarmNodeTaskListFilter

[d161208a627f5] waiting for daemon to start
docker_cli_swarm_test.go:238:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:264: DockerSwarmSuite.TestSwarmPublishAdd

[d39fe0e0a108b] waiting for daemon to start
docker_cli_swarm_test.go:265:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1331: DockerSwarmSuite.TestSwarmPublishDuplicatePorts

[d9e8e510dc2c3] waiting for daemon to start
docker_cli_swarm_test.go:1332:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
SKIP: docker_cli_swarm_test.go:1389: DockerSwarmSuite.TestSwarmReadonlyRootfs (unmatched requirement DaemonIsLinux)

----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:941: DockerSwarmSuite.TestSwarmRepeatedRootRotation

[d3e5355673fe3] waiting for daemon to start
docker_api_swarm_test.go:942:
    m := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1052: DockerSwarmSuite.TestSwarmRotateUnlockKey

[d1cc54e08490f] waiting for daemon to start
docker_cli_swarm_test.go:1053:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:621: DockerSwarmSuite.TestSwarmServiceEnvFile

[d1e6e1c38434a] waiting for daemon to start
docker_cli_swarm_test.go:622:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:177: DockerSwarmSuite.TestSwarmServiceListFilter

[dc98195053820] waiting for daemon to start
docker_cli_swarm_test.go:178:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:1504: DockerSwarmSuite.TestSwarmServiceLsFilterMode

[d2ff1b7a85539] waiting for daemon to start
docker_cli_swarm_test.go:1505:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:710: DockerSwarmSuite.TestSwarmServiceNetworkUpdate

[d937c379393e9] waiting for daemon to start
docker_cli_swarm_test.go:711:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:639: DockerSwarmSuite.TestSwarmServiceTTY

[d37094a20801d] waiting for daemon to start
docker_cli_swarm_test.go:640:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:687: DockerSwarmSuite.TestSwarmServiceTTYUpdate

[d76e56fcb4e4e] waiting for daemon to start
docker_cli_swarm_test.go:688:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:159: DockerSwarmSuite.TestSwarmServiceTemplatingHostname

[d2aa18aa79b9b] waiting for daemon to start
docker_cli_swarm_test.go:160:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:286: DockerSwarmSuite.TestSwarmServiceWithGroup

[dab9b4c76865b] waiting for daemon to start
docker_cli_swarm_test.go:287:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
SKIP: docker_cli_swarm_test.go:1476: DockerSwarmSuite.TestSwarmStopSignal (unmatched requirement DaemonIsLinux)

----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:529: DockerSwarmSuite.TestSwarmTaskListFilter

[d84d94f3f3b68] waiting for daemon to start
docker_cli_swarm_test.go:530:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:25: DockerSwarmSuite.TestSwarmUpdate

[d2fee7b479816] waiting for daemon to start
docker_cli_swarm_test.go:26:
    d := s.AddDaemon(c, true, true)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_cli_swarm_test.go:832: DockerSwarmSuite.TestUnlockEngineAndUnlockedSwarm

[da90dc1da31dd] waiting for daemon to start
docker_cli_swarm_test.go:833:
    d := s.AddDaemon(c, false, false)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available


----------------------------------------------------------------------
FAIL: docker_api_swarm_test.go:161: DockerSwarmSuite.TestUpdateSwarmAddExternalCA

[d64e7c1ada5cd] waiting for daemon to start
docker_api_swarm_test.go:162:
    d1 := s.AddDaemon(c, false, false)
c:/gopath/src/github.com/docker/docker/internal/test/daemon/daemon.go:203:
    t.Fatalf("failed to start daemon with arguments %v : %v", args, err)
... Error: failed to start daemon with arguments [--swarm-default-advertise-addr=lo] : protocol not available

OOPS: 0 passed, 4 skipped, 91 FAILED
--- FAIL: Test (48.90s)
FAIL
exit status 1
FAIL	github.com/docker/docker/integration-cli	49.039s


ERROR: Failed 'ERROR: Integration tests failed at 12/31/2018 18:29:36. Duration:00:01:02.5413235' at 12/31/2018 18:29:36
At C:\gopath\src\github.com\docker\docker\hack\ci\windows.ps1:851 char:17
+ ...             Throw "ERROR: Integration tests failed at $(Get-Date). Du ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



INFO: Tidying up at end of run
INFO: Saving daemon under test log (d:\CI\CI-c1d1de12cd\dut.err) to d:\temp\CIDUT.log
INFO: Nuke-Everything...
INFO: Container count on control daemon to delete is 1
e79a1077e13a
INFO: Non-base image count on control daemon to delete is 1
Deleted: sha256:d00f262e7ef2b233a3bbbc9ba39f4038fa852de92b478e768e034f95941dd424
Deleted: sha256:4e107f8c7dda78547d0823e8be126b713a79e80423fa3a6b6a35c34858537682
INFO: Killing daemon with PID 10788
INFO: Tidying pidfile d:\CI\CI-c1d1de12cd\docker.pid
INFO: Stopping possible daemon pid 10788
ERROR: The process "10788" not found.
INFO: Nuking d:\CI
time="2018-12-31T18:29:39Z" level=error msg="hcsshim::DestroyLayer - Win32 API call returned error r1=0x80070005 err=Access is denied.id=CI flavour=0" 
ERROR:  hcsshim::DestroyLayer - Win32 API call returned error r1=0x80070005 err=Access is denied.id=CI flavour=0

INFO: executeCI.ps1 exiting at Mon Dec 31 18:29:39 CUT 2018. Duration 00:10:46.5672418

Process leaked file descriptors. See https://jenkins.io/redirect/troubleshooting/process-leaked-file-descriptors for more information
Build step 'Windows PowerShell' marked build as failure
Set build name.
New build name is '#38432'
[PostBuildScript] - Executing post build scripts.
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
Finished: FAILURE
