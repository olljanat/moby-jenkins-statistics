Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ubuntu-1604-overlay2-stable (i-06775b615bc4e4020) (x86_64 ec2 ubuntu overlay2 linux ubuntu-1604 ubuntu-1604-overlay2-stable amd64 docker us-west-2) in workspace /home/ubuntu/workspace/Docker-PRs
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/ubuntu/workspace/Docker-PRs # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision 2cb26cfe9cbf8a64c5046c74d65f4528b22e67f4 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 2cb26cfe9cbf8a64c5046c74d65f4528b22e67f4
Commit message: "Merge pull request #38301 from cyphar/waitgroup-limits"
 > git rev-list --no-walk 2cb26cfe9cbf8a64c5046c74d65f4528b22e67f4 # timeout=10
Set build name.
New build name is '#34057'
[Docker-PRs] $ /bin/bash /tmp/jenkins3157487424210295988.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/34057/head -> origin/pr/34057
Auto-merging pkg/authorization/middleware.go
Merge made by the 'recursive' strategy.
 pkg/authorization/api.go        |  5 +++++
 pkg/authorization/authz.go      |  5 ++++-
 pkg/authorization/middleware.go | 32 +++++++++++++++++++++++++++++++-
 3 files changed, 40 insertions(+), 2 deletions(-)
Sending build context to Docker daemon  45.09MB
Step 1/93 : FROM golang:1.11.4 AS base
 ---> 2422e4d43e15
Step 2/93 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> 23ccfd38161c
Step 3/93 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> ce4b8bd56534
Step 4/93 : FROM base AS criu
 ---> ce4b8bd56534
Step 5/93 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> 460cf79b9d8c
Step 6/93 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> 31904b966638
Step 7/93 : FROM base AS registry
 ---> ce4b8bd56534
Step 8/93 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> b9461418dcf6
Step 9/93 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> bbb0fa16c905
Step 10/93 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> a14ea4b85bd6
Step 11/93 : FROM base AS docker-py
 ---> ce4b8bd56534
Step 12/93 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> 757682e46f77
Step 13/93 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> 689f12e59d4f
Step 14/93 : FROM base AS swagger
 ---> ce4b8bd56534
Step 15/93 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> 1c375e30b608
Step 16/93 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 1cc51611dc89
Step 17/93 : FROM base AS frozen-images
 ---> ce4b8bd56534
Step 18/93 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> a18c687de022
Step 19/93 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> 68f124cd2c7b
Step 20/93 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> af534258c219
Step 21/93 : FROM base AS runtime-dev
 ---> ce4b8bd56534
Step 22/93 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> bef84c8a2d71
Step 23/93 : FROM base AS tomlv
 ---> ce4b8bd56534
Step 24/93 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> 5d1d5b3262c6
Step 25/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> e4e72b161268
Step 26/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 4428d616d895
Step 27/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 114354d3fea4
Step 28/93 : FROM base AS vndr
 ---> ce4b8bd56534
Step 29/93 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> 6ea129627d1a
Step 30/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> a96f6553292a
Step 31/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> d19c6fd17126
Step 32/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> e31c36529f2b
Step 33/93 : FROM base AS containerd
 ---> ce4b8bd56534
Step 34/93 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> c8edb6c5d293
Step 35/93 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> a770b08cb38f
Step 36/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 27d288e39425
Step 37/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 79bea0f623b0
Step 38/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> e21e05335b3d
Step 39/93 : FROM base AS proxy
 ---> ce4b8bd56534
Step 40/93 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> fd920fefca94
Step 41/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> d3102bb79114
Step 42/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> ef66cf0a06e3
Step 43/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 64deefaffcd5
Step 44/93 : FROM base AS gometalinter
 ---> ce4b8bd56534
Step 45/93 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> 0f4a2758ad45
Step 46/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 1e2121eb92e3
Step 47/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 86fda20c87fe
Step 48/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 776a70847606
Step 49/93 : FROM base AS dockercli
 ---> ce4b8bd56534
Step 50/93 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> 994e4ba652f1
Step 51/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 73d59b3c24de
Step 52/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> bd122bf7ebbd
Step 53/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 7b2cce8df2f0
Step 54/93 : FROM runtime-dev AS runc
 ---> bef84c8a2d71
Step 55/93 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> 9c674050e5ab
Step 56/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 43897d7a59e8
Step 57/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 331f143df396
Step 58/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 1ef457a57a23
Step 59/93 : FROM base AS tini
 ---> ce4b8bd56534
Step 60/93 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> 4f255c7bb6db
Step 61/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 618aceef0726
Step 62/93 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> 98182b8553c8
Step 63/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 2b74496bcdaf
Step 64/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 6f7565ba0894
Step 65/93 : FROM runtime-dev AS dev
 ---> bef84c8a2d71
Step 66/93 : RUN groupadd -r docker
 ---> Using cache
 ---> 1f4846cdb147
Step 67/93 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> 1c9cc59270f3
Step 68/93 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> d08a05df111f
Step 69/93 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> ae20c7b9c422
Step 70/93 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> 32ec295f7c85
Step 71/93 : RUN ldconfig
 ---> Using cache
 ---> 320404f2a94e
Step 72/93 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> 19de506e29d0
Step 73/93 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> 26aaa53de3e9
Step 74/93 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> 62df74b625eb
Step 75/93 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> 17a161bac8b7
Step 76/93 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> 4c911da9a97c
Step 77/93 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> a5a832c7f11f
Step 78/93 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> 5b159534db9c
Step 79/93 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> 4ac7b0d02720
Step 80/93 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> 329d68e31388
Step 81/93 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> 07d698ff1eb0
Step 82/93 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> 2cb1891d1a14
Step 83/93 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> d504f33ecb64
Step 84/93 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> a4b266402fc8
Step 85/93 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> d90f607d01a5
Step 86/93 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> 0c8a92b9f43b
Step 87/93 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> 4d1d3364eba8
Step 88/93 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> 25afbbd51226
Step 89/93 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> d0aed2ed9838
Step 90/93 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> c9b39793ed33
Step 91/93 : VOLUME /var/lib/docker
 ---> Using cache
 ---> 902af5e4f999
Step 92/93 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 02e9839dff94
Step 93/93 : COPY . /go/src/github.com/docker/docker
 ---> 3091fc99abe1
Successfully built 3091fc99abe1
Successfully tagged docker:da4b4ef
Congratulations!  All commits are properly signed with the DCO!
pkg/authorization/authz.go:78:3:warning: unknown field RemoteAddr in struct literal (gosimple)
pkg/authorization/authz.go:78:3:warning: unknown field RemoteAddr in struct literal (interfacer)
pkg/authorization/authz.go:78:3:warning: unknown field RemoteAddr in struct literal (unconvert)
Build step 'Execute shell' marked build as failure
Set build name.
New build name is '#34057'
[PostBuildScript] - Executing post build scripts.
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins553312895133836433.sh
+ echo Ensuring container killed.
Ensuring container killed.
+ docker rm -vf docker-pr52169
Error: No such container: docker-pr52169
+ true
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/ubuntu/workspace/Docker-PRs:/workspace busybox chown -R 1000:1000 /workspace
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins1959923678622324858.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ find bundles -name *.log -o -name *.prof -o -name integration.test
+ xargs tar -czf bundles.tar.gz
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: FAILURE
