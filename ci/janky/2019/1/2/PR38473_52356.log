Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ubuntu-1604-overlay2-stable (i-0144e6056bcd284f6) (x86_64 ec2 ubuntu overlay2 linux ubuntu-1604 ubuntu-1604-overlay2-stable amd64 docker us-west-2) in workspace /home/ubuntu/workspace/Docker-PRs
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/ubuntu/workspace/Docker-PRs # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision e0e9942dc5466884e7b2ef5c509a9dab33c4a01a (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f e0e9942dc5466884e7b2ef5c509a9dab33c4a01a
Commit message: "Merge pull request #38419 from thaJeztah/fix_nuke_everything"
 > git rev-list --no-walk e0e9942dc5466884e7b2ef5c509a9dab33c4a01a # timeout=10
Set build name.
New build name is '#38473'
[Docker-PRs] $ /bin/bash /tmp/jenkins8712019216547504861.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38473/head -> origin/pr/38473
Updating e0e9942..6309b7d
Fast-forward
 integration/build/build_test.go            |  3 +--
 integration/container/create_test.go       | 10 +++++-----
 integration/container/diff_test.go         |  3 +--
 integration/container/exec_test.go         |  5 ++---
 integration/container/export_test.go       |  3 +--
 integration/container/health_test.go       |  3 +--
 integration/container/ipcmode_test.go      |  5 ++---
 integration/container/kill_test.go         | 12 ++++++------
 integration/container/links_linux_test.go  |  5 ++---
 integration/container/logs_test.go         |  3 +--
 integration/container/mounts_linux_test.go |  6 +++---
 integration/container/nat_test.go          | 10 ++++++----
 integration/container/pause_test.go        |  6 +++---
 integration/container/ps_test.go           |  3 +--
 integration/container/remove_test.go       | 11 +++++------
 integration/container/rename_test.go       | 15 +++++++--------
 integration/container/resize_test.go       |  7 +++----
 integration/container/run_linux_test.go    |  5 ++---
 integration/container/stats_test.go        |  3 +--
 integration/container/stop_linux_test.go   |  5 ++---
 integration/container/stop_test.go         |  3 +--
 integration/container/stop_windows_test.go |  3 +--
 integration/container/update_linux_test.go |  5 ++---
 integration/container/update_test.go       |  5 ++---
 integration/image/commit_test.go           |  3 +--
 integration/image/import_test.go           |  4 ++--
 integration/image/list_test.go             |  3 +--
 integration/image/remove_test.go           |  3 +--
 integration/image/tag_test.go              | 13 ++++++-------
 integration/network/delete_test.go         | 13 +++++--------
 integration/system/event_test.go           |  4 ++--
 integration/system/info_linux_test.go      |  4 ++--
 integration/system/info_test.go            |  4 ++--
 integration/system/login_test.go           |  4 ++--
 integration/system/version_test.go         |  4 ++--
 integration/volume/volume_test.go          |  6 +++---
 36 files changed, 90 insertions(+), 114 deletions(-)
Sending build context to Docker daemon  45.09MB
Step 1/94 : FROM golang:1.11.4 AS base
 ---> 343df9d12b7b
Step 2/94 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> c13be299347f
Step 3/94 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> e6dd268e988b
Step 4/94 : FROM base AS criu
 ---> e6dd268e988b
Step 5/94 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> c601b64d0524
Step 6/94 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> 0345c30f2aad
Step 7/94 : FROM base AS registry
 ---> e6dd268e988b
Step 8/94 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> fa1f5abf5fe3
Step 9/94 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> c334ec905d6c
Step 10/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 352b7fe48eb3
Step 11/94 : FROM base AS docker-py
 ---> e6dd268e988b
Step 12/94 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> 2a7f5563e734
Step 13/94 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> fc6a8b440068
Step 14/94 : FROM base AS swagger
 ---> e6dd268e988b
Step 15/94 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> 60bf487f5811
Step 16/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 035480b1c210
Step 17/94 : FROM base AS frozen-images
 ---> e6dd268e988b
Step 18/94 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> 6b2b92ee05b4
Step 19/94 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> 2ef6d3988bf4
Step 20/94 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> 885ec8bf1122
Step 21/94 : FROM base AS runtime-dev
 ---> e6dd268e988b
Step 22/94 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> 2f72abf16d33
Step 23/94 : FROM base AS tomlv
 ---> e6dd268e988b
Step 24/94 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> 975829df51b6
Step 25/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 4cd7af1e8c69
Step 26/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 885007d1acfc
Step 27/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 6530c4109b63
Step 28/94 : FROM base AS vndr
 ---> e6dd268e988b
Step 29/94 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> 92b27bb111ce
Step 30/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 9d1062161867
Step 31/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> f61222bca780
Step 32/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 41e7d79f42b7
Step 33/94 : FROM base AS containerd
 ---> e6dd268e988b
Step 34/94 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> 1936672204cc
Step 35/94 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> 93db7a1e79bf
Step 36/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> f42d3bb32dd2
Step 37/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 65ccddda85f4
Step 38/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 4d7cdafeae2e
Step 39/94 : FROM base AS proxy
 ---> e6dd268e988b
Step 40/94 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> 0cac2a3d7277
Step 41/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 8950ce5b3cca
Step 42/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> c2c92c8bf4ad
Step 43/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 46ee271a6307
Step 44/94 : FROM base AS gometalinter
 ---> e6dd268e988b
Step 45/94 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> d5702f4203b4
Step 46/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 645aec81ab3e
Step 47/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 0a1512c1fa0c
Step 48/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> bf0cd0e0a511
Step 49/94 : FROM base AS dockercli
 ---> e6dd268e988b
Step 50/94 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> 87f1cd088d7e
Step 51/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> d0b94a341427
Step 52/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> b609692ff7d7
Step 53/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 90e8b783e31b
Step 54/94 : FROM runtime-dev AS runc
 ---> 2f72abf16d33
Step 55/94 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> bf418cba4d60
Step 56/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> c2e8a89c4e93
Step 57/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> f6739f1e8934
Step 58/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> ff44b75a87c5
Step 59/94 : FROM base AS tini
 ---> e6dd268e988b
Step 60/94 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> 8cea2336bb73
Step 61/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 70a3e6b71c83
Step 62/94 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> 5baac9590476
Step 63/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> bc3280e33b57
Step 64/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 9cdbf7499f8d
Step 65/94 : FROM runtime-dev AS dev
 ---> 2f72abf16d33
Step 66/94 : RUN groupadd -r docker
 ---> Using cache
 ---> b5f697e33817
Step 67/94 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> 9ae94b30e391
Step 68/94 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> c721066a9cd9
Step 69/94 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> a6c041249f50
Step 70/94 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> 2ca5f7376bca
Step 71/94 : RUN ldconfig
 ---> Using cache
 ---> 3c0c3cad3979
Step 72/94 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> d344fc4a12a9
Step 73/94 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> 070a0e2619fd
Step 74/94 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> a1aa4bece5ef
Step 75/94 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> 20e467650776
Step 76/94 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> 47045a0a6e9d
Step 77/94 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> 83cde0ccc73f
Step 78/94 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> 22fdd6844b6d
Step 79/94 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> f49871d7608e
Step 80/94 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> ad402485dc01
Step 81/94 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> 47a37ea5f51b
Step 82/94 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> 564922cf502b
Step 83/94 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> 809283ccb416
Step 84/94 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> 0db850f5d81a
Step 85/94 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> a7edf64d6c12
Step 86/94 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> b939fa244972
Step 87/94 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> 0fc71ce57be4
Step 88/94 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> ce89f713317b
Step 89/94 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> 42e2812f0c3d
Step 90/94 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> 6d68557c445c
Step 91/94 : VOLUME /var/lib/docker
 ---> Using cache
 ---> 400ec50898dc
Step 92/94 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 71504cb72b21
Step 93/94 : FROM dev AS final
 ---> 71504cb72b21
Step 94/94 : COPY . /go/src/github.com/docker/docker
 ---> 97af361d9652
Successfully built 97af361d9652
Successfully tagged docker:6309b7d
Congratulations!  All commits are properly signed with the DCO!
integration/network/delete_test.go:30:1:warning: context.Context should be the first parameter of a function (golint)
Build step 'Execute shell' marked build as failure
Set build name.
New build name is '#38473'
[PostBuildScript] - Executing post build scripts.
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins7792983148757812300.sh
+ echo Ensuring container killed.
Ensuring container killed.
+ docker rm -vf docker-pr52356
Error: No such container: docker-pr52356
+ true
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/ubuntu/workspace/Docker-PRs:/workspace busybox chown -R 1000:1000 /workspace
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins6175268519110889413.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ xargs tar -czf bundles.tar.gz
+ find bundles -name *.log -o -name *.prof -o -name integration.test
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: FAILURE
