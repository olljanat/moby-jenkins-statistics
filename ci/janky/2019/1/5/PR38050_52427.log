Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ubuntu-1604-overlay2-stable (i-020930b8eaac505ae) (x86_64 ec2 ubuntu overlay2 linux ubuntu-1604 ubuntu-1604-overlay2-stable amd64 docker us-west-2) in workspace /home/ubuntu/workspace/Docker-PRs
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/ubuntu/workspace/Docker-PRs # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision 2ee53a42db814c513770421f1b0d48f27faeadea (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 2ee53a42db814c513770421f1b0d48f27faeadea
Commit message: "Merge pull request #38490 from kolyshkin/test-rename-anon-ct"
 > git rev-list --no-walk 2ee53a42db814c513770421f1b0d48f27faeadea # timeout=10
Set build name.
New build name is '#38050'
[Docker-PRs] $ /bin/bash /tmp/jenkins459079659704700429.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38050/head -> origin/pr/38050
Merge made by the 'recursive' strategy.
 Dockerfile                                    | 14 +++++
 cli/config/configdir.go                       |  2 +
 cmd/dockerd/config_common_unix.go             | 21 +++++++
 cmd/dockerd/config_unix.go                    |  4 +-
 cmd/dockerd/daemon.go                         | 43 +++++++++++--
 cmd/dockerd/daemon_unix.go                    | 24 +++++++-
 cmd/dockerd/options.go                        |  2 +
 contrib/dockerd-rootless.sh                   | 69 +++++++++++++++++++++
 daemon/config/config_unix.go                  |  6 ++
 daemon/config/config_windows.go               |  5 ++
 daemon/daemon.go                              |  1 +
 daemon/daemon_unix.go                         |  3 -
 daemon/info.go                                |  3 +
 daemon/info_unix.go                           |  4 ++
 daemon/info_windows.go                        |  4 ++
 daemon/listeners/listeners_linux.go           |  5 ++
 daemon/oci_linux.go                           |  9 ++-
 docs/rootless.md                              | 88 +++++++++++++++++++++++++++
 hack/dockerfile/install/rootlesskit.installer | 34 +++++++++++
 hack/dockerfile/install/slirp4netns.installer | 28 +++++++++
 hack/make/.binary-setup                       |  3 +
 hack/make/binary-daemon                       |  3 +-
 hack/make/install-binary                      |  3 +
 opts/hosts.go                                 | 22 ++++++-
 opts/hosts_test.go                            |  4 +-
 pkg/homedir/homedir_linux.go                  | 88 +++++++++++++++++++++++++++
 pkg/homedir/homedir_others.go                 | 20 ++++++
 pkg/sysinfo/sysinfo_linux.go                  |  4 +-
 rootless/doc.go                               |  2 +
 rootless/rootless.go                          | 22 +++++++
 rootless/specconv/specconv_linux.go           | 38 ++++++++++++
 31 files changed, 559 insertions(+), 19 deletions(-)
 create mode 100755 contrib/dockerd-rootless.sh
 create mode 100644 docs/rootless.md
 create mode 100755 hack/dockerfile/install/rootlesskit.installer
 create mode 100755 hack/dockerfile/install/slirp4netns.installer
 create mode 100644 rootless/doc.go
 create mode 100644 rootless/rootless.go
 create mode 100644 rootless/specconv/specconv_linux.go
Sending build context to Docker daemon  45.14MB
Step 1/108 : FROM golang:1.11.4 AS base
 ---> 343df9d12b7b
Step 2/108 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> 6c42abb18e50
Step 3/108 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> f492d01e1953
Step 4/108 : FROM base AS criu
 ---> f492d01e1953
Step 5/108 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> 03c58c674175
Step 6/108 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> 44831804588b
Step 7/108 : FROM base AS registry
 ---> f492d01e1953
Step 8/108 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> 77a99a6a4d39
Step 9/108 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> 6804fe1ab2c2
Step 10/108 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> b70a8eb3c20d
Step 11/108 : FROM base AS docker-py
 ---> f492d01e1953
Step 12/108 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> 3247df0d6bcc
Step 13/108 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> 325fa1cbdcc9
Step 14/108 : FROM base AS swagger
 ---> f492d01e1953
Step 15/108 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> ea8bd18d2e8f
Step 16/108 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> d4b2c6deac8f
Step 17/108 : FROM base AS frozen-images
 ---> f492d01e1953
Step 18/108 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> 36e79b8907b1
Step 19/108 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> 5b25c604e5f6
Step 20/108 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> ec32d2a8cb22
Step 21/108 : FROM base AS runtime-dev
 ---> f492d01e1953
Step 22/108 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> 59bfdf301aa3
Step 23/108 : FROM base AS tomlv
 ---> f492d01e1953
Step 24/108 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> 031d200e1ee2
Step 25/108 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 76d004190dff
Step 26/108 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 84c731236892
Step 27/108 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 131fb1f52528
Step 28/108 : FROM base AS vndr
 ---> f492d01e1953
Step 29/108 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> ef047dac8ad1
Step 30/108 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 0bacb92683c8
Step 31/108 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 9fb3d3b4b5d6
Step 32/108 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> de6b57a2abd8
Step 33/108 : FROM base AS containerd
 ---> f492d01e1953
Step 34/108 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> 807b4b60c528
Step 35/108 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> 7b9f96756e21
Step 36/108 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 62f44d4ff0b4
Step 37/108 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> c1e7428c3ea1
Step 38/108 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> bd6767a81f51
Step 39/108 : FROM base AS proxy
 ---> f492d01e1953
Step 40/108 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> cfaea83752bc
Step 41/108 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 4020ee0e5944
Step 42/108 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> ce93d820b1e2
Step 43/108 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 2d0748f17f3b
Step 44/108 : FROM base AS gometalinter
 ---> f492d01e1953
Step 45/108 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> 281993ccd8e8
Step 46/108 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> bd098a4c7b9e
Step 47/108 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> ec78549f923f
Step 48/108 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 90fbc94dd24c
Step 49/108 : FROM base AS dockercli
 ---> f492d01e1953
Step 50/108 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> c9e7336bd75c
Step 51/108 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> b81b538d8ddc
Step 52/108 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 97d37d768107
Step 53/108 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> f9cc9c250a0f
Step 54/108 : FROM runtime-dev AS runc
 ---> 59bfdf301aa3
Step 55/108 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> 29cae78dbecf
Step 56/108 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> baf46454ea7a
Step 57/108 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 0c1a3675792d
Step 58/108 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 615813dbe8e6
Step 59/108 : FROM base AS tini
 ---> f492d01e1953
Step 60/108 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> 52fcd0a5e991
Step 61/108 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 602987ec9c2c
Step 62/108 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> b5df2fb1c532
Step 63/108 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> c2a8491e0bd8
Step 64/108 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> a3d23bda1eb4
Step 65/108 : FROM base AS rootlesskit
 ---> f492d01e1953
Step 66/108 : ENV INSTALL_BINARY_NAME=rootlesskit
 ---> Using cache
 ---> bd9fb6b8071c
Step 67/108 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> d68589665a0f
Step 68/108 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 6164fd1c2dce
Step 69/108 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> d3c7fe9e2769
Step 70/108 : COPY ./contrib/dockerd-rootless.sh /build
 ---> Using cache
 ---> ad25c7e8dfed
Step 71/108 : FROM base AS slirp4netns
 ---> f492d01e1953
Step 72/108 : RUN apt-get update && apt-get install -y automake autotools-dev libtool
 ---> Using cache
 ---> 17a79692eef7
Step 73/108 : ENV INSTALL_BINARY_NAME=slirp4netns
 ---> Using cache
 ---> 18fd2d437883
Step 74/108 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 06c8869e5e26
Step 75/108 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> f9e6a4815d8e
Step 76/108 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> bb6409aaa27b
Step 77/108 : FROM runtime-dev AS dev
 ---> 59bfdf301aa3
Step 78/108 : RUN groupadd -r docker
 ---> Using cache
 ---> d5e48c9fc44e
Step 79/108 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> 33fb7c0eba87
Step 80/108 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> 00daa9fbb293
Step 81/108 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> 215610228191
Step 82/108 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> 2c183953a6bd
Step 83/108 : RUN ldconfig
 ---> Using cache
 ---> 1c0dd636d46a
Step 84/108 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> df3169dba63a
Step 85/108 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> 0f3c85e4e2c9
Step 86/108 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> 078634abcef5
Step 87/108 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> 8b2c383204bf
Step 88/108 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> ab80341db258
Step 89/108 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> ebc4824d0916
Step 90/108 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> 3cb158d11756
Step 91/108 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> 16d8f644ad50
Step 92/108 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> 4877fd85701b
Step 93/108 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> 1dbcb735ea41
Step 94/108 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> 7eba18168d75
Step 95/108 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> a77153f21743
Step 96/108 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> 7001cef2ba25
Step 97/108 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> 9ecebfb06359
Step 98/108 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> a4b7cb258982
Step 99/108 : COPY --from=rootlesskit /build/ /usr/local/bin/
 ---> Using cache
 ---> 42003c577986
Step 100/108 : COPY --from=slirp4netns /build/ /usr/local/bin/
 ---> Using cache
 ---> a7ec4de3dbdf
Step 101/108 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> ce60332e2ba2
Step 102/108 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> 3ea2646358dd
Step 103/108 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> 3431e00357e6
Step 104/108 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> ec33ff796c8a
Step 105/108 : VOLUME /var/lib/docker
 ---> Using cache
 ---> d67f146a8b26
Step 106/108 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 87b599d6ad6d
Step 107/108 : FROM dev AS final
 ---> 87b599d6ad6d
Step 108/108 : COPY . /go/src/github.com/docker/docker
 ---> 484072b0813a
Successfully built 484072b0813a
Successfully tagged docker:69d22b9
Congratulations!  All commits are properly signed with the DCO!
Congratulations!  "./pkg/..." is safely isolated from internal code.
No api/types/ or api/swagger.yaml changes in diff.
Congratulations!  No testing.T found.
Congratulations!  All toml source files changed here have valid syntax.
Congratulations!  Changelog CHANGELOG.md is well-formed.
Congratulations!  Changelog CHANGELOG.md dates are in descending order.
Congratulations!  No new tests added to integration-cli.
?   	github.com/docker/docker/api	[no test files]
ok  	github.com/docker/docker/api/server	0.004s	coverage: 7.9% of statements
?   	github.com/docker/docker/api/server/backend/build	[no test files]
ok  	github.com/docker/docker/api/server/httputils	0.003s	coverage: 11.1% of statements
ok  	github.com/docker/docker/api/server/middleware	0.003s	coverage: 43.4% of statements
?   	github.com/docker/docker/api/server/router	[no test files]
?   	github.com/docker/docker/api/server/router/build	[no test files]
?   	github.com/docker/docker/api/server/router/checkpoint	[no test files]
?   	github.com/docker/docker/api/server/router/container	[no test files]
?   	github.com/docker/docker/api/server/router/debug	[no test files]
?   	github.com/docker/docker/api/server/router/distribution	[no test files]
?   	github.com/docker/docker/api/server/router/image	[no test files]
?   	github.com/docker/docker/api/server/router/network	[no test files]
?   	github.com/docker/docker/api/server/router/plugin	[no test files]
?   	github.com/docker/docker/api/server/router/session	[no test files]
?   	github.com/docker/docker/api/server/router/swarm	[no test files]
?   	github.com/docker/docker/api/server/router/system	[no test files]
?   	github.com/docker/docker/api/server/router/volume	[no test files]
?   	github.com/docker/docker/api/types	[no test files]
?   	github.com/docker/docker/api/types/backend	[no test files]
?   	github.com/docker/docker/api/types/blkiodev	[no test files]
?   	github.com/docker/docker/api/types/container	[no test files]
?   	github.com/docker/docker/api/types/events	[no test files]
ok  	github.com/docker/docker/api/types/filters	0.003s	coverage: 94.2% of statements
?   	github.com/docker/docker/api/types/image	[no test files]
?   	github.com/docker/docker/api/types/mount	[no test files]
?   	github.com/docker/docker/api/types/network	[no test files]
?   	github.com/docker/docker/api/types/plugins/logdriver	[no test files]
?   	github.com/docker/docker/api/types/registry	[no test files]
ok  	github.com/docker/docker/api/types/strslice	0.002s	coverage: 90.0% of statements
?   	github.com/docker/docker/api/types/swarm	[no test files]
?   	github.com/docker/docker/api/types/swarm/runtime	[no test files]
ok  	github.com/docker/docker/api/types/time	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/api/types/versions	0.002s	coverage: 75.0% of statements
?   	github.com/docker/docker/api/types/versions/v1p19	[no test files]
?   	github.com/docker/docker/api/types/versions/v1p20	[no test files]
?   	github.com/docker/docker/api/types/volume	[no test files]
?   	github.com/docker/docker/builder	[no test files]
?   	github.com/docker/docker/builder/builder-next	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/containerimage	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/snapshot	[no test files]
?   	github.com/docker/docker/builder/builder-next/exporter	[no test files]
?   	github.com/docker/docker/builder/builder-next/imagerefchecker	[no test files]
?   	github.com/docker/docker/builder/builder-next/worker	[no test files]
ok  	github.com/docker/docker/builder/dockerfile	0.424s	coverage: 45.4% of statements
ok  	github.com/docker/docker/builder/dockerignore	0.003s	coverage: 96.8% of statements
ok  	github.com/docker/docker/builder/fscache	0.112s	coverage: 69.2% of statements
ok  	github.com/docker/docker/builder/remotecontext	0.173s	coverage: 13.7% of statements
ok  	github.com/docker/docker/builder/remotecontext/git	0.600s	coverage: 78.8% of statements
?   	github.com/docker/docker/cli	[no test files]
?   	github.com/docker/docker/cli/config	[no test files]
ok  	github.com/docker/docker/cli/debug	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/client	0.097s	coverage: 75.6% of statements
ok  	github.com/docker/docker/cmd/dockerd	0.043s	coverage: 30.2% of statements
ok  	github.com/docker/docker/cmd/dockerd/hack	0.002s	coverage: 72.9% of statements
ok  	github.com/docker/docker/container	0.114s	coverage: 35.6% of statements
?   	github.com/docker/docker/container/stream	[no test files]
?   	github.com/docker/docker/contrib/apparmor	[no test files]
?   	github.com/docker/docker/contrib/docker-device-tool	[no test files]
?   	github.com/docker/docker/contrib/httpserver	[no test files]
ok  	github.com/docker/docker/daemon	12.122s	coverage: 17.1% of statements
ok  	github.com/docker/docker/daemon/cluster	0.033s	coverage: 0.5% of statements
ok  	github.com/docker/docker/daemon/cluster/controllers/plugin	0.009s	coverage: 65.3% of statements
ok  	github.com/docker/docker/daemon/cluster/convert	0.006s	coverage: 28.0% of statements
?   	github.com/docker/docker/daemon/cluster/executor	[no test files]
ok  	github.com/docker/docker/daemon/cluster/executor/container	3.433s	coverage: 12.7% of statements
?   	github.com/docker/docker/daemon/cluster/provider	[no test files]
ok  	github.com/docker/docker/daemon/config	0.026s	coverage: 84.4% of statements
ok  	github.com/docker/docker/daemon/discovery	0.004s	coverage: 30.4% of statements
ok  	github.com/docker/docker/daemon/events	0.057s	coverage: 50.0% of statements
?   	github.com/docker/docker/daemon/events/testutils	[no test files]
?   	github.com/docker/docker/daemon/exec	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver	0.004s	coverage: 2.2% of statements
ok  	github.com/docker/docker/daemon/graphdriver/aufs	5.281s	coverage: 73.6% of statements
ok  	github.com/docker/docker/daemon/graphdriver/btrfs	0.004s	coverage: 2.9% of statements
ok  	github.com/docker/docker/daemon/graphdriver/copy	0.174s	coverage: 57.0% of statements
ok  	github.com/docker/docker/daemon/graphdriver/devmapper	2.124s	coverage: 45.9% of statements
?   	github.com/docker/docker/daemon/graphdriver/graphtest	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver/overlay	0.766s	coverage: 50.8% of statements
ok  	github.com/docker/docker/daemon/graphdriver/overlay2	2.099s	coverage: 56.8% of statements
?   	github.com/docker/docker/daemon/graphdriver/overlayutils	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver/quota	0.267s	coverage: 75.2% of statements
?   	github.com/docker/docker/daemon/graphdriver/register	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver/vfs	0.005s	coverage: 70.5% of statements
ok  	github.com/docker/docker/daemon/graphdriver/zfs	0.005s	coverage: 3.0% of statements
ok  	github.com/docker/docker/daemon/images	0.010s	coverage: 4.9% of statements
?   	github.com/docker/docker/daemon/initlayer	[no test files]
ok  	github.com/docker/docker/daemon/links	0.002s	coverage: 93.0% of statements
?   	github.com/docker/docker/daemon/listeners	[no test files]
ok  	github.com/docker/docker/daemon/logger	0.215s	coverage: 43.7% of statements
ok  	github.com/docker/docker/daemon/logger/awslogs	0.117s	coverage: 78.6% of statements
?   	github.com/docker/docker/daemon/logger/fluentd	[no test files]
?   	github.com/docker/docker/daemon/logger/gcplogs	[no test files]
ok  	github.com/docker/docker/daemon/logger/gelf	0.004s	coverage: 68.2% of statements
ok  	github.com/docker/docker/daemon/logger/journald	0.004s	coverage: 26.2% of statements
ok  	github.com/docker/docker/daemon/logger/jsonfilelog	0.009s	coverage: 62.1% of statements
ok  	github.com/docker/docker/daemon/logger/jsonfilelog/jsonlog	0.004s	coverage: 88.3% of statements
ok  	github.com/docker/docker/daemon/logger/local	0.011s	coverage: 74.7% of statements
?   	github.com/docker/docker/daemon/logger/logentries	[no test files]
ok  	github.com/docker/docker/daemon/logger/loggerutils	0.007s	coverage: 18.6% of statements
ok  	github.com/docker/docker/daemon/logger/splunk	1.489s	coverage: 84.5% of statements
ok  	github.com/docker/docker/daemon/logger/syslog	0.004s	coverage: 47.8% of statements
ok  	github.com/docker/docker/daemon/logger/templates	0.002s	coverage: 8.3% of statements
?   	github.com/docker/docker/daemon/names	[no test files]
ok  	github.com/docker/docker/daemon/network	0.003s	coverage: 57.1% of statements
?   	github.com/docker/docker/daemon/stats	[no test files]
ok  	github.com/docker/docker/distribution	1.116s	coverage: 16.8% of statements
ok  	github.com/docker/docker/distribution/metadata	0.027s	coverage: 48.2% of statements
?   	github.com/docker/docker/distribution/utils	[no test files]
ok  	github.com/docker/docker/distribution/xfer	1.431s	coverage: 83.4% of statements
?   	github.com/docker/docker/dockerversion	[no test files]
ok  	github.com/docker/docker/errdefs	0.002s	coverage: 76.0% of statements
ok  	github.com/docker/docker/image	0.017s	coverage: 86.3% of statements
ok  	github.com/docker/docker/image/cache	0.006s	coverage: 19.2% of statements
?   	github.com/docker/docker/image/tarexport	[no test files]
ok  	github.com/docker/docker/image/v1	0.006s	coverage: 25.0% of statements
ok  	github.com/docker/docker/internal/procfs	0.002s	coverage: 78.4% of statements
?   	github.com/docker/docker/internal/test	[no test files]
?   	github.com/docker/docker/internal/test/daemon	[no test files]
?   	github.com/docker/docker/internal/test/environment	[no test files]
?   	github.com/docker/docker/internal/test/fakecontext	[no test files]
?   	github.com/docker/docker/internal/test/fakegit	[no test files]
?   	github.com/docker/docker/internal/test/fakestorage	[no test files]
?   	github.com/docker/docker/internal/test/fixtures/load	[no test files]
?   	github.com/docker/docker/internal/test/fixtures/plugin	[no test files]
?   	github.com/docker/docker/internal/test/fixtures/plugin/basic	[no test files]
?   	github.com/docker/docker/internal/test/registry	[no test files]
?   	github.com/docker/docker/internal/test/request	[no test files]
ok  	github.com/docker/docker/internal/testutil	0.002s	coverage: 62.5% of statements
ok  	github.com/docker/docker/layer	8.027s	coverage: 71.4% of statements
ok  	github.com/docker/docker/libcontainerd	0.028s	coverage: 3.4% of statements
?   	github.com/docker/docker/libcontainerd/supervisor	[no test files]
?   	github.com/docker/docker/oci	[no test files]
?   	github.com/docker/docker/oci/caps	[no test files]
ok  	github.com/docker/docker/opts	0.017s	coverage: 68.2% of statements
ok  	github.com/docker/docker/pkg/aaparser	0.002s	coverage: 50.0% of statements
ok  	github.com/docker/docker/pkg/archive	0.387s	coverage: 76.8% of statements
ok  	github.com/docker/docker/pkg/authorization	0.302s	coverage: 66.7% of statements
ok  	github.com/docker/docker/pkg/broadcaster	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/pkg/chrootarchive	2.810s	coverage: 37.0% of statements
?   	github.com/docker/docker/pkg/containerfs	[no test files]
?   	github.com/docker/docker/pkg/devicemapper	[no test files]
ok  	github.com/docker/docker/pkg/directory	0.002s	coverage: 80.0% of statements
ok  	github.com/docker/docker/pkg/discovery	0.003s	coverage: 58.3% of statements
ok  	github.com/docker/docker/pkg/discovery/file	0.004s	coverage: 97.6% of statements
ok  	github.com/docker/docker/pkg/discovery/kv	3.063s	coverage: 84.1% of statements
ok  	github.com/docker/docker/pkg/discovery/memory	0.003s	coverage: 92.3% of statements
ok  	github.com/docker/docker/pkg/discovery/nodes	0.003s	coverage: 93.8% of statements
ok  	github.com/docker/docker/pkg/dmesg	0.003s	coverage: 83.3% of statements
ok  	github.com/docker/docker/pkg/filenotify	0.603s	coverage: 66.3% of statements
ok  	github.com/docker/docker/pkg/fileutils	0.005s	coverage: 89.5% of statements
ok  	github.com/docker/docker/pkg/fsutils	0.154s	coverage: 85.1% of statements
ok  	github.com/docker/docker/pkg/homedir	0.003s	coverage: 10.2% of statements
ok  	github.com/docker/docker/pkg/idtools	0.313s	coverage: 70.2% of statements
ok  	github.com/docker/docker/pkg/ioutils	0.384s	coverage: 69.1% of statements
ok  	github.com/docker/docker/pkg/jsonmessage	0.003s	coverage: 88.3% of statements
ok  	github.com/docker/docker/pkg/locker	0.012s	coverage: 88.9% of statements
ok  	github.com/docker/docker/pkg/longpath	0.002s	coverage: 100.0% of statements
?   	github.com/docker/docker/pkg/loopback	[no test files]
ok  	github.com/docker/docker/pkg/mount	0.454s	coverage: 68.6% of statements
ok  	github.com/docker/docker/pkg/namesgenerator	0.002s	coverage: 85.7% of statements
?   	github.com/docker/docker/pkg/namesgenerator/cmd/names-generator	[no test files]
ok  	github.com/docker/docker/pkg/parsers	0.002s	coverage: 97.0% of statements
ok  	github.com/docker/docker/pkg/parsers/kernel	0.002s	coverage: 60.0% of statements
ok  	github.com/docker/docker/pkg/parsers/operatingsystem	0.003s	coverage: 90.0% of statements
ok  	github.com/docker/docker/pkg/pidfile	0.002s	coverage: 82.4% of statements
?   	github.com/docker/docker/pkg/platform	[no test files]
?   	github.com/docker/docker/pkg/plugingetter	[no test files]
ok  	github.com/docker/docker/pkg/plugins	33.616s	coverage: 76.8% of statements
ok  	github.com/docker/docker/pkg/plugins/pluginrpc-gen	0.009s	coverage: 56.8% of statements
?   	github.com/docker/docker/pkg/plugins/pluginrpc-gen/fixtures	[no test files]
?   	github.com/docker/docker/pkg/plugins/pluginrpc-gen/fixtures/otherfixture	[no test files]
ok  	github.com/docker/docker/pkg/plugins/transport	0.004s	coverage: 85.7% of statements
ok  	github.com/docker/docker/pkg/pools	0.002s	coverage: 87.9% of statements
ok  	github.com/docker/docker/pkg/progress	0.002s	coverage: 75.9% of statements
ok  	github.com/docker/docker/pkg/pubsub	1.037s	coverage: 72.7% of statements
ok  	github.com/docker/docker/pkg/reexec	0.007s	coverage: 82.4% of statements
ok  	github.com/docker/docker/pkg/signal	2.364s	coverage: 61.0% of statements
?   	github.com/docker/docker/pkg/signal/testfiles	[no test files]
ok  	github.com/docker/docker/pkg/stdcopy	0.003s	coverage: 100.0% of statements
ok  	github.com/docker/docker/pkg/streamformatter	0.003s	coverage: 66.2% of statements
ok  	github.com/docker/docker/pkg/stringid	0.002s	coverage: 76.0% of statements
ok  	github.com/docker/docker/pkg/symlink	0.006s	coverage: 87.7% of statements
ok  	github.com/docker/docker/pkg/sysinfo	0.004s	coverage: 75.9% of statements
ok  	github.com/docker/docker/pkg/system	0.015s	coverage: 36.1% of statements
ok  	github.com/docker/docker/pkg/tailfile	0.017s	coverage: 88.6% of statements
ok  	github.com/docker/docker/pkg/tarsum	0.047s	coverage: 89.3% of statements
ok  	github.com/docker/docker/pkg/term	0.003s	coverage: 84.8% of statements
ok  	github.com/docker/docker/pkg/term/windows	0.002s	coverage: 0.0% of statements [no tests to run]
ok  	github.com/docker/docker/pkg/truncindex	0.102s	coverage: 91.5% of statements
ok  	github.com/docker/docker/pkg/urlutil	0.003s	coverage: 100.0% of statements
ok  	github.com/docker/docker/pkg/useragent	0.002s	coverage: 88.9% of statements
ok  	github.com/docker/docker/plugin	0.529s	coverage: 27.3% of statements
ok  	github.com/docker/docker/plugin/executor/containerd	0.007s	coverage: 33.3% of statements
ok  	github.com/docker/docker/plugin/v2	0.003s	coverage: 14.5% of statements
?   	github.com/docker/docker/profiles/apparmor	[no test files]
ok  	github.com/docker/docker/profiles/seccomp	0.004s	coverage: 79.4% of statements
ok  	github.com/docker/docker/reference	0.006s	coverage: 84.4% of statements
ok  	github.com/docker/docker/registry	0.102s	coverage: 57.0% of statements
ok  	github.com/docker/docker/registry/resumable	0.016s	coverage: 100.0% of statements
ok  	github.com/docker/docker/restartmanager	0.002s	coverage: 49.0% of statements
?   	github.com/docker/docker/rootless	[no test files]
?   	github.com/docker/docker/rootless/specconv	[no test files]
ok  	github.com/docker/docker/runconfig	0.007s	coverage: 68.2% of statements
?   	github.com/docker/docker/runconfig/opts	[no test files]
?   	github.com/docker/docker/volume	[no test files]
ok  	github.com/docker/docker/volume/drivers	0.005s	coverage: 36.1% of statements
ok  	github.com/docker/docker/volume/local	0.017s	coverage: 73.0% of statements
ok  	github.com/docker/docker/volume/mounts	0.025s	coverage: 66.8% of statements
ok  	github.com/docker/docker/volume/service	0.014s	coverage: 73.0% of statements
?   	github.com/docker/docker/volume/service/opts	[no test files]
?   	github.com/docker/docker/volume/testutils	[no test files]

  _____          _
 / ____|        | |
| |     ___   __| | ___  ___ _____   __
| |    / _ \ / _` |/ _ \/ __/ _ \ \ / /
| |___| (_) | (_| |  __/ (_| (_) \ V /
 \_____\___/ \__,_|\___|\___\___/ \_/
                              Bash-0b37652


x> No CI provider detected.
    Testing inside Docker? http://docs.codecov.io/docs/testing-with-docker
    Testing with Tox? https://docs.codecov.io/docs/python#section-testing-with-tox
    project root: .
--> token set from env
    Yaml found at: codecov.yml
    -> Found 1 reports
==> Detecting git/mercurial file structure
==> Reading reports
    + coverage.txt bytes=1673015
==> Appending adjustments
    http://docs.codecov.io/docs/fixing-reports
    + Found adjustments
==> Gzipping contents
==> Uploading reports
    url: https://codecov.io
    query: branch=&commit=3f84d6d94ddec751be2782cd780e424305c417e0&build=&build_url=&name=&tag=&slug=moby%2Fmoby&service=&flags=&pr=&job=
    -> Pinging Codecov
    -> Uploading
    -> View reports at https://codecov.io/github/moby/moby/commit/3f84d6d94ddec751be2782cd780e424305c417e0

Removing bundles/

---> Making bundle: binary-daemon (in bundles/binary-daemon)
Building: bundles/binary-daemon/dockerd-dev
Created binary: bundles/binary-daemon/dockerd-dev
Copying nested executables into bundles/binary-daemon

---> Making bundle: dynbinary (in bundles/dynbinary)
Building: bundles/dynbinary-daemon/dockerd-dev
Created binary: bundles/dynbinary-daemon/dockerd-dev

---> Making bundle: test-docker-py (in bundles/test-docker-py)
---> Making bundle: .integration-daemon-start (in bundles/test-docker-py)
Using test binary docker
/etc/init.d/apparmor: 130: /etc/init.d/apparmor: systemd-detect-virt: not found
Starting AppArmor profiles:Warning from stdin (line 1): /sbin/apparmor_parser: cannot use or update cache, disable, or force-complain via stdin
Warning failed to create cache: (null)
.
INFO: Waiting for daemon to start...
Starting dockerd
.
============================= test session starts ==============================
platform linux2 -- Python 2.7.13, pytest-2.9.1, py-1.7.0, pluggy-0.3.1
rootdir: /docker-py, inifile: pytest.ini
plugins: cov-2.1.0
collected 338 items

../../../../../docker-py/tests/integration/api_build_test.py ....s..s........
../../../../../docker-py/tests/integration/api_client_test.py .......
../../../../../docker-py/tests/integration/api_config_test.py .....
../../../../../docker-py/tests/integration/api_container_test.py ....x....x.......x............................................................
../../../../../docker-py/tests/integration/api_exec_test.py .............
../../../../../docker-py/tests/integration/api_healthcheck_test.py ....
../../../../../docker-py/tests/integration/api_image_test.py ...s........s....
../../../../../docker-py/tests/integration/api_network_test.py ...........................
../../../../../docker-py/tests/integration/api_plugin_test.py ...........
../../../../../docker-py/tests/integration/api_secret_test.py .....
../../../../../docker-py/tests/integration/api_service_test.py ......................................................
../../../../../docker-py/tests/integration/api_swarm_test.py ..s...x......
../../../../../docker-py/tests/integration/api_volume_test.py .........
../../../../../docker-py/tests/integration/client_test.py ....
../../../../../docker-py/tests/integration/errors_test.py .
../../../../../docker-py/tests/integration/models_containers_test.py ..............................
../../../../../docker-py/tests/integration/models_images_test.py .............
../../../../../docker-py/tests/integration/models_networks_test.py ....
../../../../../docker-py/tests/integration/models_nodes_test.py .
../../../../../docker-py/tests/integration/models_resources_test.py .
../../../../../docker-py/tests/integration/models_services_test.py ..............X.
../../../../../docker-py/tests/integration/models_swarm_test.py .
../../../../../docker-py/tests/integration/models_volumes_test.py ..
../../../../../docker-py/tests/integration/regression_test.py ......

 generated xml file: /go/src/github.com/docker/docker/bundles/test-docker-py/results.xml 
=========================== short test summary info ============================
XFAIL ../../../../../docker-py/tests/integration/api_container_test.py::CreateContainerTest::test_create_with_cpu_rt_options
  CONFIG_RT_GROUP_SCHED isn't enabled
XFAIL ../../../../../docker-py/tests/integration/api_container_test.py::CreateContainerTest::test_create_with_init_path
  init-path removed in 17.05.0
XFAIL ../../../../../docker-py/tests/integration/api_container_test.py::CreateContainerTest::test_create_with_storage_opt
  Not supported on most drivers
XFAIL ../../../../../docker-py/tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_with_log_driver
  This doesn't seem to be taken into account by the engine
SKIP [1] tests/integration/api_image_test.py:289: Doesn't work inside a container - FIXME
SKIP [1] /docker-py/tests/integration/api_swarm_test.py:31: Test stalls the engine on 1.12.0
SKIP [3] /docker-py/tests/helpers.py:69: Feature requires Docker Engine experimental mode
======== 328 passed, 5 skipped, 4 xfailed, 1 xpassed in 351.64 seconds =========
---> Making bundle: .integration-daemon-stop (in bundles/test-docker-py)
Clearing AppArmor profiles cache:.
All profile caches have been cleared, but no profiles have been unloaded.
Unloading profiles will leave already running processes permanently
unconfined, which can lead to unexpected situations.

To set a process to complain mode, use the command line tool
'aa-complain'. To really tear down all profiles, run the init script
with the 'teardown' option."

---> Making bundle: test-integration (in bundles/test-integration)
Building test suite binary ./integration-cli/test.main
Building test suite binary ./integration/plugin/test.main
Building test suite binary ./integration/plugin/authz/test.main
Building test suite binary ./integration/plugin/logging/test.main
Building test suite binary ./integration/plugin/logging/cmd/test.main
Building test suite binary ./integration/plugin/logging/cmd/close_on_start/test.main
Building test suite binary ./integration/plugin/logging/cmd/dummy/test.main
Building test suite binary ./integration/plugin/common/test.main
Building test suite binary ./integration/plugin/volumes/test.main
Building test suite binary ./integration/plugin/volumes/cmd/test.main
Building test suite binary ./integration/plugin/volumes/cmd/dummy/test.main
Building test suite binary ./integration/plugin/graphdriver/test.main
Building test suite binary ./integration/config/test.main
Building test suite binary ./integration/service/test.main
Building test suite binary ./integration/network/test.main
Building test suite binary ./integration/network/ipvlan/test.main
Building test suite binary ./integration/network/macvlan/test.main
Building test suite binary ./integration/secret/test.main
Building test suite binary ./integration/session/test.main
Building test suite binary ./integration/container/test.main
Building test suite binary ./integration/build/test.main
Building test suite binary ./integration/volume/test.main
Building test suite binary ./integration/system/test.main
Building test suite binary ./integration/image/test.main
---> Making bundle: .integration-daemon-start (in bundles/test-integration)
Using test binary docker
/etc/init.d/apparmor: 130: /etc/init.d/apparmor: systemd-detect-virt: not found
Starting AppArmor profiles:Warning from stdin (line 1): /sbin/apparmor_parser: cannot use or update cache, disable, or force-complain via stdin
Warning failed to create cache: (null)
.
INFO: Waiting for daemon to start...
Starting dockerd
.
---> Making bundle: .integration-daemon-setup (in bundles/test-integration)
---> Making bundle: .ensure-emptyfs (in bundles/test-integration)
Error: No such image: emptyfs
Running integration-test (iteration 1)
Running /go/src/github.com/docker/docker/integration/plugin
testing: warning: no tests to run
PASS
Running /go/src/github.com/docker/docker/integration/plugin/authz
Loaded image: buildpack-deps:jessie
The image busybox:latest already exists, renaming the old one with ID sha256:3a093384ac306cbac30b67f1585e12b30ab1a899374dabc3170b9bca246f1444 to empty string
Loaded image: busybox:latest
Loaded image: busybox:glibc
Loaded image: debian:jessie
The image hello-world:latest already exists, renaming the old one with ID sha256:fce289e99eb9bca977dae136fbe2a82b6b7d4c372474c9235adc1741675f587e to empty string
Loaded image: hello-world:latest
INFO: Testing against a local daemon
=== RUN   TestAuthZPluginAllowRequest
--- PASS: TestAuthZPluginAllowRequest (2.60s)
    daemon.go:296: [d6f91fc44e15b] waiting for daemon to start
    daemon.go:328: [d6f91fc44e15b] daemon started
    daemon.go:283: [d6f91fc44e15b] exiting daemon
=== RUN   TestAuthZPluginTLS
--- PASS: TestAuthZPluginTLS (0.54s)
    daemon.go:296: [d47ed51a75d1a] waiting for daemon to start
    daemon.go:328: [d47ed51a75d1a] daemon started
    daemon.go:283: [d47ed51a75d1a] exiting daemon
=== RUN   TestAuthZPluginDenyRequest
--- PASS: TestAuthZPluginDenyRequest (3.33s)
    daemon.go:296: [d2441cea6a9ad] waiting for daemon to start
    daemon.go:328: [d2441cea6a9ad] daemon started
    daemon.go:283: [d2441cea6a9ad] exiting daemon
=== RUN   TestAuthZPluginAPIDenyResponse
--- PASS: TestAuthZPluginAPIDenyResponse (2.76s)
    daemon.go:296: [df31c52f6b558] waiting for daemon to start
    daemon.go:328: [df31c52f6b558] daemon started
    daemon.go:283: [df31c52f6b558] exiting daemon
=== RUN   TestAuthZPluginDenyResponse
--- PASS: TestAuthZPluginDenyResponse (3.35s)
    daemon.go:296: [d6ea3ebf45f51] waiting for daemon to start
    daemon.go:328: [d6ea3ebf45f51] daemon started
    daemon.go:283: [d6ea3ebf45f51] exiting daemon
=== RUN   TestAuthZPluginAllowEventStream
--- PASS: TestAuthZPluginAllowEventStream (1.24s)
    daemon.go:296: [d04409f88f94a] waiting for daemon to start
    daemon.go:328: [d04409f88f94a] daemon started
    daemon.go:283: [d04409f88f94a] exiting daemon
=== RUN   TestAuthZPluginErrorResponse
--- PASS: TestAuthZPluginErrorResponse (0.54s)
    daemon.go:296: [d07c4c08fd57a] waiting for daemon to start
    daemon.go:328: [d07c4c08fd57a] daemon started
    daemon.go:283: [d07c4c08fd57a] exiting daemon
=== RUN   TestAuthZPluginErrorRequest
--- PASS: TestAuthZPluginErrorRequest (0.54s)
    daemon.go:296: [d031867e32969] waiting for daemon to start
    daemon.go:328: [d031867e32969] daemon started
    daemon.go:283: [d031867e32969] exiting daemon
=== RUN   TestAuthZPluginEnsureNoDuplicatePluginRegistration
--- PASS: TestAuthZPluginEnsureNoDuplicatePluginRegistration (0.53s)
    daemon.go:296: [df2acb7f11e91] waiting for daemon to start
    daemon.go:328: [df2acb7f11e91] daemon started
    daemon.go:283: [df2acb7f11e91] exiting daemon
=== RUN   TestAuthZPluginEnsureLoadImportWorking
--- PASS: TestAuthZPluginEnsureLoadImportWorking (1.42s)
    daemon.go:296: [dd3990e3a0cf9] waiting for daemon to start
    daemon.go:328: [dd3990e3a0cf9] daemon started
    daemon.go:283: [dd3990e3a0cf9] exiting daemon
=== RUN   TestAuthzPluginEnsureContainerCopyToFrom
--- PASS: TestAuthzPluginEnsureContainerCopyToFrom (1.49s)
    daemon.go:296: [da99b7479cf55] waiting for daemon to start
    daemon.go:328: [da99b7479cf55] daemon started
    daemon.go:283: [da99b7479cf55] exiting daemon
=== RUN   TestAuthZPluginHeader
--- PASS: TestAuthZPluginHeader (0.75s)
    daemon.go:296: [d09cb835a91f9] waiting for daemon to start
    daemon.go:328: [d09cb835a91f9] daemon started
    daemon.go:283: [d09cb835a91f9] exiting daemon
=== RUN   TestAuthZPluginV2AllowNonVolumeRequest
--- PASS: TestAuthZPluginV2AllowNonVolumeRequest (6.40s)
    daemon.go:296: [db62266fa11a2] waiting for daemon to start
    daemon.go:328: [db62266fa11a2] daemon started
    daemon.go:283: [db62266fa11a2] exiting daemon
    daemon.go:296: [db62266fa11a2] waiting for daemon to start
    daemon.go:328: [db62266fa11a2] daemon started
    daemon.go:283: [db62266fa11a2] exiting daemon
=== RUN   TestAuthZPluginV2Disable
--- PASS: TestAuthZPluginV2Disable (5.89s)
    daemon.go:296: [d7ac60c12908f] waiting for daemon to start
    daemon.go:328: [d7ac60c12908f] daemon started
    daemon.go:283: [d7ac60c12908f] exiting daemon
    daemon.go:296: [d7ac60c12908f] waiting for daemon to start
    daemon.go:328: [d7ac60c12908f] daemon started
    daemon.go:283: [d7ac60c12908f] exiting daemon
=== RUN   TestAuthZPluginV2RejectVolumeRequests
--- PASS: TestAuthZPluginV2RejectVolumeRequests (5.63s)
    daemon.go:296: [d9d1ae2ed0c97] waiting for daemon to start
    daemon.go:328: [d9d1ae2ed0c97] daemon started
    daemon.go:283: [d9d1ae2ed0c97] exiting daemon
    daemon.go:296: [d9d1ae2ed0c97] waiting for daemon to start
    daemon.go:328: [d9d1ae2ed0c97] daemon started
    daemon.go:283: [d9d1ae2ed0c97] exiting daemon
=== RUN   TestAuthZPluginV2BadManifestFailsDaemonStart
--- PASS: TestAuthZPluginV2BadManifestFailsDaemonStart (13.69s)
    daemon.go:296: [d820544759c9d] waiting for daemon to start
    daemon.go:328: [d820544759c9d] daemon started
    daemon.go:283: [d820544759c9d] exiting daemon
    daemon.go:296: [d820544759c9d] waiting for daemon to start
    daemon.go:296: [d820544759c9d] waiting for daemon to start
    daemon.go:283: [d820544759c9d] exiting daemon
    daemon.go:296: [d820544759c9d] waiting for daemon to start
    daemon.go:328: [d820544759c9d] daemon started
    daemon.go:283: [d820544759c9d] exiting daemon
=== RUN   TestAuthZPluginV2NonexistentFailsDaemonStart
--- PASS: TestAuthZPluginV2NonexistentFailsDaemonStart (16.50s)
    daemon.go:296: [dbc7d6fe6ecbf] waiting for daemon to start
    daemon.go:328: [dbc7d6fe6ecbf] daemon started
    daemon.go:283: [dbc7d6fe6ecbf] exiting daemon
    daemon.go:296: [dbc7d6fe6ecbf] waiting for daemon to start
    daemon.go:296: [dbc7d6fe6ecbf] waiting for daemon to start
    daemon.go:296: [dbc7d6fe6ecbf] waiting for daemon to start
    daemon.go:328: [dbc7d6fe6ecbf] daemon started
    daemon.go:283: [dbc7d6fe6ecbf] exiting daemon
PASS
Running /go/src/github.com/docker/docker/integration/plugin/logging
INFO: Testing against a local daemon
=== RUN   TestContinueAfterPluginCrash
=== PAUSE TestContinueAfterPluginCrash
=== RUN   TestDaemonStartWithLogOpt
=== PAUSE TestDaemonStartWithLogOpt
=== CONT  TestContinueAfterPluginCrash
=== CONT  TestDaemonStartWithLogOpt
--- PASS: TestDaemonStartWithLogOpt (13.45s)
    daemon.go:296: [d6294d751db6e] waiting for daemon to start
    daemon.go:328: [d6294d751db6e] daemon started
    daemon.go:283: [d6294d751db6e] exiting daemon
    daemon.go:296: [d6294d751db6e] waiting for daemon to start
    daemon.go:328: [d6294d751db6e] daemon started
    daemon.go:283: [d6294d751db6e] exiting daemon
--- PASS: TestContinueAfterPluginCrash (18.34s)
    daemon.go:296: [d891ba9e86d4d] waiting for daemon to start
    daemon.go:328: [d891ba9e86d4d] daemon started
    daemon.go:283: [d891ba9e86d4d] exiting daemon
PASS
Running /go/src/github.com/docker/docker/integration/plugin/logging/cmd
testing: warning: no tests to run
PASS
Running /go/src/github.com/docker/docker/integration/plugin/logging/cmd/close_on_start
testing: warning: no tests to run
PASS
Running /go/src/github.com/docker/docker/integration/plugin/logging/cmd/dummy
testing: warning: no tests to run
PASS
Running /go/src/github.com/docker/docker/integration/plugin/common
INFO: Testing against a local daemon
=== RUN   TestPluginInvalidJSON
=== RUN   TestPluginInvalidJSON//plugins/foobar/set
=== PAUSE TestPluginInvalidJSON//plugins/foobar/set
=== CONT  TestPluginInvalidJSON//plugins/foobar/set
--- PASS: TestPluginInvalidJSON (0.02s)
    --- PASS: TestPluginInvalidJSON//plugins/foobar/set (0.00s)
PASS
Running /go/src/github.com/docker/docker/integration/plugin/volumes
INFO: Testing against a local daemon
=== RUN   TestPluginWithDevMounts
=== PAUSE TestPluginWithDevMounts
=== CONT  TestPluginWithDevMounts
--- PASS: TestPluginWithDevMounts (1.74s)
    daemon.go:296: [d2f0918d7bf32] waiting for daemon to start
    daemon.go:328: [d2f0918d7bf32] daemon started
    daemon.go:283: [d2f0918d7bf32] exiting daemon
PASS
Running /go/src/github.com/docker/docker/integration/plugin/volumes/cmd
testing: warning: no tests to run
PASS
Running /go/src/github.com/docker/docker/integration/plugin/volumes/cmd/dummy
testing: warning: no tests to run
PASS
Running /go/src/github.com/docker/docker/integration/plugin/graphdriver
INFO: Testing against a local daemon
=== RUN   TestExternalGraphDriver
=== RUN   TestExternalGraphDriver/json
=== RUN   TestExternalGraphDriver/spec
=== RUN   TestExternalGraphDriver/pull
--- PASS: TestExternalGraphDriver (6.94s)
    daemon.go:296: [d33c93588fefb] waiting for daemon to start
    daemon.go:328: [d33c93588fefb] daemon started
    daemon.go:283: [d33c93588fefb] exiting daemon
    daemon.go:296: [d33c93588fefb] waiting for daemon to start
    daemon.go:328: [d33c93588fefb] daemon started
    daemon.go:283: [d33c93588fefb] exiting daemon
    --- PASS: TestExternalGraphDriver/json (1.71s)
    daemon.go:296: [d33c93588fefb] waiting for daemon to start
    daemon.go:328: [d33c93588fefb] daemon started
    daemon.go:283: [d33c93588fefb] exiting daemon
    daemon.go:296: [d33c93588fefb] waiting for daemon to start
    daemon.go:328: [d33c93588fefb] daemon started
    daemon.go:283: [d33c93588fefb] exiting daemon
    --- PASS: TestExternalGraphDriver/spec (1.71s)
    daemon.go:296: [d33c93588fefb] waiting for daemon to start
    daemon.go:328: [d33c93588fefb] daemon started
    daemon.go:283: [d33c93588fefb] exiting daemon
    --- PASS: TestExternalGraphDriver/pull (3.08s)
=== RUN   TestGraphdriverPluginV2
--- PASS: TestGraphdriverPluginV2 (6.48s)
    daemon.go:296: [d6ffb7c5b75f3] waiting for daemon to start
    daemon.go:328: [d6ffb7c5b75f3] daemon started
    daemon.go:283: [d6ffb7c5b75f3] exiting daemon
    daemon.go:296: [d6ffb7c5b75f3] waiting for daemon to start
    daemon.go:328: [d6ffb7c5b75f3] daemon started
    daemon.go:283: [d6ffb7c5b75f3] exiting daemon
PASS
Running /go/src/github.com/docker/docker/integration/config
INFO: Testing against a local daemon
=== RUN   TestConfigList
--- PASS: TestConfigList (2.18s)
    daemon.go:296: [d6a1e596fccd9] waiting for daemon to start
    daemon.go:328: [d6a1e596fccd9] daemon started
    daemon.go:283: [d6a1e596fccd9] exiting daemon
=== RUN   TestConfigsCreateAndDelete
--- PASS: TestConfigsCreateAndDelete (2.12s)
    daemon.go:296: [dc912367d404b] waiting for daemon to start
    daemon.go:328: [dc912367d404b] daemon started
    daemon.go:283: [dc912367d404b] exiting daemon
=== RUN   TestConfigsUpdate
--- PASS: TestConfigsUpdate (2.12s)
    daemon.go:296: [de0dfe017d330] waiting for daemon to start
    daemon.go:328: [de0dfe017d330] daemon started
    daemon.go:283: [de0dfe017d330] exiting daemon
=== RUN   TestTemplatedConfig
--- PASS: TestTemplatedConfig (2.63s)
    daemon.go:296: [d46272e5c6088] waiting for daemon to start
    daemon.go:328: [d46272e5c6088] daemon started
    daemon.go:283: [d46272e5c6088] exiting daemon
=== RUN   TestConfigInspect
--- PASS: TestConfigInspect (2.18s)
    daemon.go:296: [dbcce2e9f8e3f] waiting for daemon to start
    daemon.go:328: [dbcce2e9f8e3f] daemon started
    daemon.go:283: [dbcce2e9f8e3f] exiting daemon
=== RUN   TestConfigCreateWithLabels
--- PASS: TestConfigCreateWithLabels (2.15s)
    daemon.go:296: [d3647a99aee1b] waiting for daemon to start
    daemon.go:328: [d3647a99aee1b] daemon started
    daemon.go:283: [d3647a99aee1b] exiting daemon
=== RUN   TestConfigCreateResolve
--- PASS: TestConfigCreateResolve (2.10s)
    daemon.go:296: [d5ba45f6ac3df] waiting for daemon to start
    daemon.go:328: [d5ba45f6ac3df] daemon started
    daemon.go:283: [d5ba45f6ac3df] exiting daemon
PASS
Running /go/src/github.com/docker/docker/integration/service
INFO: Testing against a local daemon
=== RUN   TestServiceCreateInit
=== RUN   TestServiceCreateInit/daemonInitDisabled
=== RUN   TestServiceCreateInit/daemonInitEnabled
--- PASS: TestServiceCreateInit (8.10s)
    --- PASS: TestServiceCreateInit/daemonInitDisabled (4.03s)
        daemon.go:296: [dee2c69a18f3c] waiting for daemon to start
        daemon.go:328: [dee2c69a18f3c] daemon started
        daemon.go:283: [dee2c69a18f3c] exiting daemon
    --- PASS: TestServiceCreateInit/daemonInitEnabled (4.05s)
        daemon.go:296: [df3522ae232c7] waiting for daemon to start
        daemon.go:328: [df3522ae232c7] daemon started
        daemon.go:283: [df3522ae232c7] exiting daemon
=== RUN   TestCreateServiceMultipleTimes
--- PASS: TestCreateServiceMultipleTimes (24.01s)
    daemon.go:296: [d65e932f94185] waiting for daemon to start
    daemon.go:328: [d65e932f94185] daemon started
    daemon.go:283: [d65e932f94185] exiting daemon
=== RUN   TestCreateServiceConflict
--- PASS: TestCreateServiceConflict (2.04s)
    daemon.go:296: [d1a8be7d7fe64] waiting for daemon to start
    daemon.go:328: [d1a8be7d7fe64] daemon started
    daemon.go:283: [d1a8be7d7fe64] exiting daemon
=== RUN   TestCreateServiceMaxReplicas
--- PASS: TestCreateServiceMaxReplicas (2.84s)
    daemon.go:296: [d4d04a42fe80c] waiting for daemon to start
    daemon.go:328: [d4d04a42fe80c] daemon started
    daemon.go:283: [d4d04a42fe80c] exiting daemon
=== RUN   TestCreateWithDuplicateNetworkNames
--- PASS: TestCreateWithDuplicateNetworkNames (13.06s)
    daemon.go:296: [dd6c0afbad119] waiting for daemon to start
    daemon.go:328: [dd6c0afbad119] daemon started
    daemon.go:283: [dd6c0afbad119] exiting daemon
=== RUN   TestCreateServiceSecretFileMode
--- PASS: TestCreateServiceSecretFileMode (2.56s)
    daemon.go:296: [d8ffc9608c6d5] waiting for daemon to start
    daemon.go:328: [d8ffc9608c6d5] daemon started
    daemon.go:283: [d8ffc9608c6d5] exiting daemon
=== RUN   TestCreateServiceConfigFileMode
--- PASS: TestCreateServiceConfigFileMode (2.51s)
    daemon.go:296: [d363260988dbe] waiting for daemon to start
    daemon.go:328: [d363260988dbe] daemon started
    daemon.go:283: [d363260988dbe] exiting daemon
=== RUN   TestCreateServiceSysctls
--- PASS: TestCreateServiceSysctls (3.32s)
    daemon.go:296: [d947f15ed3840] waiting for daemon to start
    daemon.go:328: [d947f15ed3840] daemon started
    daemon.go:283: [d947f15ed3840] exiting daemon
=== RUN   TestInspect
--- PASS: TestInspect (2.08s)
    daemon.go:296: [def57bc7f6a65] waiting for daemon to start
    daemon.go:328: [def57bc7f6a65] daemon started
    daemon.go:283: [def57bc7f6a65] exiting daemon
=== RUN   TestDockerNetworkConnectAlias
--- PASS: TestDockerNetworkConnectAlias (3.96s)
    daemon.go:296: [df8ebce072c77] waiting for daemon to start
    daemon.go:328: [df8ebce072c77] daemon started
    daemon.go:283: [df8ebce072c77] exiting daemon
=== RUN   TestServicePlugin
--- PASS: TestServicePlugin (34.89s)
    daemon.go:296: [d6314a229b859] waiting for daemon to start
    daemon.go:328: [d6314a229b859] daemon started
    daemon.go:283: [d6314a229b859] exiting daemon
    daemon.go:296: [d457e2cce057e] waiting for daemon to start
    daemon.go:328: [d457e2cce057e] daemon started
    daemon.go:296: [d45186c81b044] waiting for daemon to start
    daemon.go:328: [d45186c81b044] daemon started
    daemon.go:296: [d00f2e6bbf5af] waiting for daemon to start
    daemon.go:328: [d00f2e6bbf5af] daemon started
    daemon.go:283: [d00f2e6bbf5af] exiting daemon
    daemon.go:283: [d45186c81b044] exiting daemon
    daemon.go:283: [d457e2cce057e] exiting daemon
=== RUN   TestServiceUpdateLabel
--- PASS: TestServiceUpdateLabel (2.11s)
    daemon.go:296: [da1a09e85c0dd] waiting for daemon to start
    daemon.go:328: [da1a09e85c0dd] daemon started
    daemon.go:283: [da1a09e85c0dd] exiting daemon
=== RUN   TestServiceUpdateSecrets
--- FAIL: TestServiceUpdateSecrets (2.08s)
    daemon.go:296: [d8b12f036d934] waiting for daemon to start
    daemon.go:328: [d8b12f036d934] daemon started
    update_test.go:126: assertion failed: error is not nil: Error response from daemon: rpc error: code = Unknown desc = update out of sequence
    daemon.go:283: [d8b12f036d934] exiting daemon
=== RUN   TestServiceUpdateConfigs
--- PASS: TestServiceUpdateConfigs (7.59s)
    daemon.go:296: [db26f8fe2cfd8] waiting for daemon to start
    daemon.go:328: [db26f8fe2cfd8] daemon started
    daemon.go:283: [db26f8fe2cfd8] exiting daemon
FAIL
---> Making bundle: .integration-daemon-stop (in bundles/test-integration)
Clearing AppArmor profiles cache:.
All profile caches have been cleared, but no profiles have been unloaded.
Unloading profiles will leave already running processes permanently
unconfined, which can lead to unexpected situations.

To set a process to complain mode, use the command line tool
'aa-complain'. To really tear down all profiles, run the init script
with the 'teardown' option."
Removing test suite binaries
Build step 'Execute shell' marked build as failure
Set build name.
New build name is '#38050'
[PostBuildScript] - Executing post build scripts.
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins4434050344041101229.sh
+ echo Ensuring container killed.
Ensuring container killed.
+ docker rm -vf docker-pr52427
Error: No such container: docker-pr52427
+ true
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/ubuntu/workspace/Docker-PRs:/workspace busybox chown -R 1000:1000 /workspace
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins1291888459590793997.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ + findxargs tar -czf bundles.tar.gz
 bundles -name *.log -o -name *.prof -o -name integration.test
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: FAILURE
