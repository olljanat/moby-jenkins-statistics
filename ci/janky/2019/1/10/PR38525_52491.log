Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ubuntu-1604-overlay2-stable (i-0d970eabd09d9a79a) (x86_64 ec2 ubuntu overlay2 linux ubuntu-1604 ubuntu-1604-overlay2-stable amd64 docker us-west-2) in workspace /home/ubuntu/workspace/Docker-PRs
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/ubuntu/workspace/Docker-PRs # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision b4842cfe88b39af42416429396aee10d1fe7c3d6 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f b4842cfe88b39af42416429396aee10d1fe7c3d6
Commit message: "Merge pull request #38354 from thaJeztah/fix_ipam_swagger"
 > git rev-list --no-walk b4842cfe88b39af42416429396aee10d1fe7c3d6 # timeout=10
Set build name.
New build name is '#38525'
[Docker-PRs] $ /bin/bash /tmp/jenkins6104559080609546344.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38525/head -> origin/pr/38525
Merge made by the 'recursive' strategy.
 api/types/swarm/service.go                         |   9 +-
 daemon/cluster/convert/service.go                  |   2 +
 vendor.conf                                        |   2 +-
 vendor/github.com/docker/swarmkit/api/types.pb.go  | 684 +++++++++++----------
 vendor/github.com/docker/swarmkit/api/types.proto  |   2 +
 .../docker/swarmkit/manager/controlapi/network.go  |  13 +-
 .../docker/swarmkit/manager/controlapi/service.go  |  23 +-
 .../swarmkit/manager/deallocator/deallocator.go    | 332 ++++++++++
 .../github.com/docker/swarmkit/manager/manager.go  |  19 +
 .../swarmkit/manager/orchestrator/global/global.go |  31 +-
 .../manager/orchestrator/replicated/replicated.go  |   5 +-
 .../manager/orchestrator/replicated/services.go    |  23 +-
 vendor/github.com/docker/swarmkit/vendor.conf      |  40 +-
 13 files changed, 805 insertions(+), 380 deletions(-)
 create mode 100644 vendor/github.com/docker/swarmkit/manager/deallocator/deallocator.go
Sending build context to Docker daemon  45.13MB
Step 1/94 : FROM golang:1.11.4 AS base
 ---> 343df9d12b7b
Step 2/94 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> 12ad7dffe364
Step 3/94 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> e8353ce49919
Step 4/94 : FROM base AS criu
 ---> e8353ce49919
Step 5/94 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> 43ece4863736
Step 6/94 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> 2061010bd863
Step 7/94 : FROM base AS registry
 ---> e8353ce49919
Step 8/94 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> b356d30e2d3c
Step 9/94 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> 42c45852bc5d
Step 10/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> fea4892d7fde
Step 11/94 : FROM base AS docker-py
 ---> e8353ce49919
Step 12/94 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> ba5b2ae84b7c
Step 13/94 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> bd0feaf26104
Step 14/94 : FROM base AS swagger
 ---> e8353ce49919
Step 15/94 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> 1209aea685ea
Step 16/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> bb71e5fff1d2
Step 17/94 : FROM base AS frozen-images
 ---> e8353ce49919
Step 18/94 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> 8f5f0910722b
Step 19/94 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> a9a76c37bf34
Step 20/94 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> 12482d7693d3
Step 21/94 : FROM base AS runtime-dev
 ---> e8353ce49919
Step 22/94 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> bb98421876df
Step 23/94 : FROM base AS tomlv
 ---> e8353ce49919
Step 24/94 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> 953bfd8b2857
Step 25/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> e1d234a5a00b
Step 26/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 1a348bd8b1f9
Step 27/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> d0bb429254a7
Step 28/94 : FROM base AS vndr
 ---> e8353ce49919
Step 29/94 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> 67e74eb4fb3a
Step 30/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> ad5485d44525
Step 31/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 503fd6907f85
Step 32/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 2d1a7cde1fe2
Step 33/94 : FROM base AS containerd
 ---> e8353ce49919
Step 34/94 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> 5e9a56f035c5
Step 35/94 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> 0051183bc853
Step 36/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> a69c926cee84
Step 37/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> ae9a56365e40
Step 38/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> c76ae2a8367c
Step 39/94 : FROM base AS proxy
 ---> e8353ce49919
Step 40/94 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> 536ee2ef1c6d
Step 41/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> ccee2879192c
Step 42/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> d19cca946220
Step 43/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> f0d192487de5
Step 44/94 : FROM base AS gometalinter
 ---> e8353ce49919
Step 45/94 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> 6b4cb8f2801f
Step 46/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> a392b2afd9d0
Step 47/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 70d300b2a143
Step 48/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> f42180fe316f
Step 49/94 : FROM base AS dockercli
 ---> e8353ce49919
Step 50/94 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> fbb4fc00def9
Step 51/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 90cca171eb78
Step 52/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> db023ad7de1b
Step 53/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> cac429d42a4a
Step 54/94 : FROM runtime-dev AS runc
 ---> bb98421876df
Step 55/94 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> ea9d14ed7068
Step 56/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> f8e1291cbe53
Step 57/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 7b12e0545741
Step 58/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 1294244e5ab9
Step 59/94 : FROM base AS tini
 ---> e8353ce49919
Step 60/94 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> 0fd144df683c
Step 61/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> ac4f9fcf587b
Step 62/94 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> 2b1b118eb0e6
Step 63/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> fb88ce5480c3
Step 64/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> c8069500b5fc
Step 65/94 : FROM runtime-dev AS dev
 ---> bb98421876df
Step 66/94 : RUN groupadd -r docker
 ---> Using cache
 ---> 1cad4602cdd1
Step 67/94 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> 6c1e8fd82396
Step 68/94 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> 388461b29ad3
Step 69/94 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> a3db3221a88c
Step 70/94 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> a79d1fb97162
Step 71/94 : RUN ldconfig
 ---> Using cache
 ---> 09e6de02c9fa
Step 72/94 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> b131143a87c2
Step 73/94 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> 1153973c51c5
Step 74/94 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> 2c5388d4c156
Step 75/94 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> 1218006fb99c
Step 76/94 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> de2e6893023d
Step 77/94 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> a9ed5c226d2b
Step 78/94 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> 774fc85215ce
Step 79/94 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> 5b816519899c
Step 80/94 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> 0fcd8cebdeb9
Step 81/94 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> 88117d328a7c
Step 82/94 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> 2813ce3c90aa
Step 83/94 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> e0b333176450
Step 84/94 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> b9daf891bc0b
Step 85/94 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> b4ac132a18a0
Step 86/94 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> 9e37e429f6f4
Step 87/94 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> f1171e17e087
Step 88/94 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> 8b03219c466f
Step 89/94 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> 7fb0bdc6948e
Step 90/94 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> f75b619643de
Step 91/94 : VOLUME /var/lib/docker
 ---> Using cache
 ---> da96a74f0388
Step 92/94 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 1de7ef43ef9f
Step 93/94 : FROM dev AS final
 ---> 1de7ef43ef9f
Step 94/94 : COPY . /go/src/github.com/docker/docker
 ---> 036c9015474b
Successfully built 036c9015474b
Successfully tagged docker:2ace3e4
Congratulations!  All commits are properly signed with the DCO!
Congratulations!  "./pkg/..." is safely isolated from internal code.
The result of hack/generate-swagger-api.sh differs

diff --git a/api/types/container/container_wait.go b/api/types/container/container_wait.go
index 9e3910a6b4..06b0f02077 100644
--- a/api/types/container/container_wait.go
+++ b/api/types/container/container_wait.go
@@ -7,14 +7,6 @@ package container
 // See hack/generate-swagger-api.sh
 // ----------------------------------------------------------------------------
 
-// ContainerWaitOKBodyError container waiting error, if any
-// swagger:model ContainerWaitOKBodyError
-type ContainerWaitOKBodyError struct {
-
-	// Details of an error
-	Message string `json:"Message,omitempty"`
-}
-
 // ContainerWaitOKBody OK response to ContainerWait operation
 // swagger:model ContainerWaitOKBody
 type ContainerWaitOKBody struct {
@@ -27,3 +19,11 @@ type ContainerWaitOKBody struct {
 	// Required: true
 	StatusCode int64 `json:"StatusCode"`
 }
+
+// ContainerWaitOKBodyError container waiting error, if any
+// swagger:model ContainerWaitOKBodyError
+type ContainerWaitOKBodyError struct {
+
+	// Details of an error
+	Message string `json:"Message,omitempty"`
+}

Please update api/swagger.yaml with any api changes, then 
run `hack/generate-swagger-api.sh`.
Build step 'Execute shell' marked build as failure
Set build name.
New build name is '#38525'
[PostBuildScript] - Executing post build scripts.
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins101417681498290036.sh
+ echo Ensuring container killed.
Ensuring container killed.
+ docker rm -vf docker-pr52491
Error: No such container: docker-pr52491
+ true
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/ubuntu/workspace/Docker-PRs:/workspace busybox chown -R 1000:1000 /workspace
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins6332329388909907812.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ xargs tar -czf bundles.tar.gz
+ find bundles -name *.log -o -name *.prof -o -name integration.test
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: FAILURE
