Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ubuntu-1604-overlay2 (i-0992546ed21208c02) (x86_64 ubuntu overlay2 linux ubuntu-1604 ubuntu-1604-overlay2 ubuntu-1604-overlay2-stable amd64) in workspace /home/ubuntu/workspace/Docker-PRs
No credentials specified
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/ubuntu/workspace/Docker-PRs # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision cefc60ccfa13a4db41a0463fe206af47879054b5 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f cefc60ccfa13a4db41a0463fe206af47879054b5
Commit message: "Merge pull request #39255 from thaJeztah/fix_windows_errortype"
 > git rev-list --no-walk cefc60ccfa13a4db41a0463fe206af47879054b5 # timeout=10
Set build name.
New build name is '#39173'
[Docker-PRs] $ /bin/bash /tmp/jenkins3726306783033927457.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/39173/head -> origin/pr/39173
Merge made by the 'recursive' strategy.
 api/server/router/swarm/helpers.go             |  7 +++
 api/swagger.yaml                               | 14 ++++-
 api/types/swarm/container.go                   | 13 +++--
 daemon/cluster/convert/container.go            | 76 +++++++++++++-------------
 daemon/cluster/executor/container/container.go |  1 +
 docs/api/version-history.md                    |  7 ++-
 integration/internal/swarm/service.go          |  8 +++
 integration/service/create_test.go             | 76 ++++++++++++++++++++++++++
 8 files changed, 157 insertions(+), 45 deletions(-)
Sending build context to Docker daemon     48MB
Step 1/112 : ARG CROSS="false"
Step 2/112 : FROM golang:1.12.5 AS base
 ---> 7ced090ee82e
Step 3/112 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> 843261a7011b
Step 4/112 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> 4659f1c353d9
Step 5/112 : FROM base AS criu
 ---> 4659f1c353d9
Step 6/112 : ENV CRIU_VERSION 3.11
 ---> Using cache
 ---> 56136875cdc4
Step 7/112 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> b22e97d2e825
Step 8/112 : FROM base AS registry
 ---> 4659f1c353d9
Step 9/112 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> b579b6ac6a2f
Step 10/112 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> ddb9e1efb5bf
Step 11/112 : FROM base AS docker-py
 ---> 4659f1c353d9
Step 12/112 : ENV DOCKER_PY_COMMIT ac922192959870774ad8428344d9faa0555f7ba6
 ---> Using cache
 ---> 03796e69f5c4
Step 13/112 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> 433435af8253
Step 14/112 : FROM base AS swagger
 ---> 4659f1c353d9
Step 15/112 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> 03d4ebc434b0
Step 16/112 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 9a147c9cc25b
Step 17/112 : FROM base AS frozen-images
 ---> 4659f1c353d9
Step 18/112 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> f8a9dceb9907
Step 19/112 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> f894f940328d
Step 20/112 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> e75738fa04dd
Step 21/112 : FROM base AS cross-false
 ---> 4659f1c353d9
Step 22/112 : FROM base AS cross-true
 ---> 4659f1c353d9
Step 23/112 : RUN dpkg --add-architecture armhf
 ---> Using cache
 ---> 87f5639c2af2
Step 24/112 : RUN dpkg --add-architecture arm64
 ---> Using cache
 ---> 11acdf46addc
Step 25/112 : RUN dpkg --add-architecture armel
 ---> Using cache
 ---> cd9e5ac713e9
Step 26/112 : RUN if [ "$(go env GOHOSTARCH)" = "amd64" ]; then 	apt-get update 	&& apt-get install -y --no-install-recommends 		crossbuild-essential-armhf 		crossbuild-essential-arm64 		crossbuild-essential-armel; 	fi
 ---> Using cache
 ---> 12a023d9a44e
Step 27/112 : FROM cross-${CROSS} as dev-base
 ---> 4659f1c353d9
Step 28/112 : FROM dev-base AS runtime-dev-cross-false
 ---> 4659f1c353d9
Step 29/112 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> d45ce2610e47
Step 30/112 : FROM cross-true AS runtime-dev-cross-true
 ---> 12a023d9a44e
Step 31/112 : RUN if [ "$(go env GOHOSTARCH)" = "amd64" ]; then 	apt-get update 	&& apt-get install -y 		libseccomp-dev:armhf 		libseccomp-dev:arm64 		libseccomp-dev:armel 		libapparmor-dev:armhf 		libapparmor-dev:arm64 		libapparmor-dev:armel 		libapparmor-dev 		libseccomp-dev; 	fi
 ---> Using cache
 ---> f53f26c02087
Step 32/112 : FROM runtime-dev-cross-${CROSS} AS runtime-dev
 ---> d45ce2610e47
Step 33/112 : FROM base AS tomlv
 ---> 4659f1c353d9
Step 34/112 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> 9611111f9d7a
Step 35/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 495c3a23b8c5
Step 36/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 0374197e5e7d
Step 37/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Running in 4000622f3f92
[91m+ RM_GOPATH=0
+ TMP_GOPATH=
+ : /build
+ '[' -z '' ']'
++ mktemp -d
+ export GOPATH=/tmp/tmp.Ds7s85CWiC
+ GOPATH=/tmp/tmp.Ds7s85CWiC
+ RM_GOPATH=1
++ dirname ./install.sh
[0m[91m+ dir=.
[0m[91m+ bin=tomlv
+ shift
[0m[91m+ '[' '!' -f ./tomlv.installer ']'
[0m[91m+ . ./tomlv.installer
[0m[91m++ TOMLV_COMMIT=3012a1dbe2e4bd1391d42b32f0577cb7bbc7f005
[0m[91m+ install_tomlv
+ echo 'Install tomlv version 3012a1dbe2e4bd1391d42b32f0577cb7bbc7f005'
[0m[91m+ git clone https://github.com/BurntSushi/toml.git /tmp/tmp.Ds7s85CWiC/src/github.com/BurntSushi/toml
[0mInstall tomlv version 3012a1dbe2e4bd1391d42b32f0577cb7bbc7f005
[91mCloning into '/tmp/tmp.Ds7s85CWiC/src/github.com/BurntSushi/toml'...
[0m[91m+ cd /tmp/tmp.Ds7s85CWiC/src/github.com/BurntSushi/toml
[0m[91m+ git checkout -q 3012a1dbe2e4bd1391d42b32f0577cb7bbc7f005
[0m[91m+ go build -v -buildmode=pie -o /build/tomlv github.com/BurntSushi/toml/cmd/tomlv
[0m[91merrors
[0m[91minternal/cpu
[0m[91mmath/bits
[0m[91minternal/bytealg
[0m[91mmath
[0m[91mruntime/internal/atomic
[0m[91mruntime/internal/sys
[0m[91mruntime/internal/math
[0m[91mruntime
[0m[91municode/utf8
[0m[91mstrconv
[0m[91minternal/race
[0m[91msync/atomic
[0m[91municode
[0m[91minternal/testlog
[0m[91mencoding
[0m[91mruntime/cgo
[0m[91msync
[0m[91mio
[0m[91mreflect
[0m[91msyscall
[0m[91mtime
[0m[91msort
[0m[91minternal/poll
[0m[91minternal/fmtsort
[0m[91minternal/syscall/unix
[0m[91mstrings
[0m[91mos
[0m[91mbytes
[0m[91mfmt
[0m[91mbufio
[0m[91mpath/filepath
[0m[91mio/ioutil
[0m[91mpath
[0m[91mtext/tabwriter
[0m[91mflag
[0m[91mgithub.com/BurntSushi/toml
[0m[91mlog
[0m[91mgithub.com/BurntSushi/toml/cmd/tomlv
[0mRemoving intermediate container 4000622f3f92
 ---> 695917e0df8b
Step 38/112 : FROM base AS vndr
 ---> 4659f1c353d9
Step 39/112 : ENV INSTALL_BINARY_NAME=vndr
 ---> Running in e3b820587f43
Removing intermediate container e3b820587f43
 ---> 2aae73184796
Step 40/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> 0f7a52c936fa
Step 41/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> b506b4dd9637
Step 42/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Running in 2bd2f3af2b3c
[91m+ RM_GOPATH=0
+ TMP_GOPATH=
+ : /build
+ '[' -z '' ']'
++ mktemp -d
+ export GOPATH=/tmp/tmp.ecSsjWdseA
+ GOPATH=/tmp/tmp.ecSsjWdseA
+ RM_GOPATH=1
[0m[91m++ dirname ./install.sh
+ dir=.
+ bin=vndr
+ shift
+ '[' '!' -f ./vndr.installer ']'
+ . ./vndr.installer
++ VNDR_COMMIT=81cb8916aad3c8d06193f008dba3e16f82851f52
+ install_vndr
+ echo 'Install vndr version 81cb8916aad3c8d06193f008dba3e16f82851f52'
+ git clone https://github.com/LK4D4/vndr.git /tmp/tmp.ecSsjWdseA/src/github.com/LK4D4/vndr
[0m[91mCloning into '/tmp/tmp.ecSsjWdseA/src/github.com/LK4D4/vndr'...
[0mInstall vndr version 81cb8916aad3c8d06193f008dba3e16f82851f52
[91m+ cd /tmp/tmp.ecSsjWdseA/src/github.com/LK4D4/vndr
[0m[91m+ git checkout -q 81cb8916aad3c8d06193f008dba3e16f82851f52
[0m[91m+ go build -buildmode=pie -v -o /build/vndr .
[0m[91merrors
[0m[91minternal/cpu
[0m[91minternal/race
[0m[91mruntime/internal/atomic
[0m[91mruntime/internal/sys
[0m[91minternal/bytealg
[0m[91mruntime/internal/math
[0m[91msync/atomic
[0m[91municode
[0m[91mruntime
[0m[91municode/utf8
[0m[91mmath/bits
[0m[91mmath
[0m[91mstrconv
[0m[91minternal/testlog
[0m[91mencoding
[0m[91municode/utf16
[0m[91mcontainer/list
[0m[91mcrypto/internal/subtle
[0m[91mcrypto/subtle
[0m[91mcrypto/rc4
[0m[91minternal/x/crypto/cryptobyte/asn1
[0m[91minternal/nettrace
[0m[91minternal/x/net/dns/dnsmessage
[0m[91mruntime/cgo
[0m[91minternal/x/crypto/curve25519
[0m[91msync
[0m[91mio
[0m[91mreflect
[0m[91mbytes
[0m[91mbufio
[0m[91msyscall
[0m[91mtime
[0m[91msort
[0m[91minternal/fmtsort
[0m[91minternal/syscall/unix
[0m[91mstrings
[0m[91mpath
[0m[91minternal/poll
[0m[91mregexp/syntax
[0m[91mos
[0m[91mregexp
[0m[91mfmt
[0m[91mpath/filepath
[0m[91mflag
[0m[91mgo/token
[0m[91mgo/scanner
[0m[91mio/ioutil
[0m[91mnet/url
[0m[91mgo/ast
[0m[91mtext/template/parse
[0m[91mgo/parser
[0m[91mtext/template
[0m[91mlog
[0m[91mencoding/binary
[0m[91mgo/doc
[0m[91mencoding/base64
[0m[91mencoding/json
[0m[91mgithub.com/LK4D4/vndr/build
[0m[91mencoding/xml
[0m[91mgithub.com/LK4D4/vndr/godl/singleflight
[0m[91mcompress/flate
[0m[91mhash
[0m[91mhash/crc32
[0m[91mcompress/gzip
[0m[91mcontext
[0m[91mcrypto/cipher
[0m[91mmath/rand
[0m[91mmath/big
[0m[91mcrypto/aes
[0m[91mcrypto
[0m[91mcrypto/des
[0m[91mcrypto/internal/randutil
[0m[91mcrypto/sha512
[0m[91mcrypto/hmac
[0m[91mcrypto/md5
[0m[91mcrypto/sha1
[0m[91mcrypto/sha256
[0m[91mencoding/hex
[0m[91mencoding/pem
[0m[91mcrypto/rand
[0m[91mcrypto/elliptic
[0m[91mencoding/asn1
[0m[91mcrypto/rsa
[0m[91mcrypto/ecdsa
[0m[91mcrypto/dsa
[0m[91mcrypto/x509/pkix
[0m[91minternal/x/crypto/cryptobyte
[0m[91minternal/singleflight
[0m[91mnet
[0m[91minternal/x/crypto/internal/chacha20
[0m[91minternal/x/crypto/poly1305
[0m[91minternal/x/crypto/chacha20poly1305
[0m[91minternal/x/crypto/hkdf
[0m[91minternal/x/text/transform
[0m[91minternal/x/text/unicode/bidi
[0m[91minternal/x/text/secure/bidirule
[0m[91minternal/x/text/unicode/norm
[0m[91minternal/x/net/idna
[0m[91minternal/x/net/http2/hpack
[0m[91mmime
[0m[91mmime/quotedprintable
[0m[91mnet/http/internal
[0m[91mos/exec
[0m[91mnet/textproto
[0m[91mcrypto/x509
[0m[91minternal/x/net/http/httpguts
[0m[91minternal/x/net/http/httpproxy
[0m[91mmime/multipart
[0m[91mcrypto/tls
[0m[91mnet/http/httptrace
[0m[91mnet/http
[0m[91mgithub.com/LK4D4/vndr/godl
[0m[91mgithub.com/LK4D4/vndr
[0mRemoving intermediate container 2bd2f3af2b3c
 ---> f00d1afc9237
Step 43/112 : FROM dev-base AS containerd
 ---> 4659f1c353d9
Step 44/112 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Running in 56434b0a6f50
Get:1 http://security.debian.org/debian-security stretch/updates InRelease [94.3 kB]
Get:2 http://security.debian.org/debian-security stretch/updates/main amd64 Packages [492 kB]
Ign:3 http://cdn-fastly.deb.debian.org/debian stretch InRelease
Get:4 http://cdn-fastly.deb.debian.org/debian stretch-updates InRelease [91.0 kB]
Get:5 http://cdn-fastly.deb.debian.org/debian stretch Release [118 kB]
Get:6 http://cdn-fastly.deb.debian.org/debian stretch Release.gpg [2434 B]
Get:7 http://cdn-fastly.deb.debian.org/debian stretch-updates/main amd64 Packages [27.2 kB]
Get:8 http://cdn-fastly.deb.debian.org/debian stretch/main amd64 Packages [7082 kB]
Fetched 7907 kB in 3s (2562 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  btrfs-progs liblzo2-2
The following NEW packages will be installed:
  btrfs-progs btrfs-tools liblzo2-2
0 upgraded, 3 newly installed, 0 to remove and 1 not upgraded.
Need to get 649 kB of archives.
After this operation, 4320 kB of additional disk space will be used.
Get:1 http://cdn-fastly.deb.debian.org/debian stretch/main amd64 liblzo2-2 amd64 2.08-1.2+b2 [55.0 kB]
Get:2 http://cdn-fastly.deb.debian.org/debian stretch/main amd64 btrfs-progs amd64 4.7.3-1 [577 kB]
Get:3 http://cdn-fastly.deb.debian.org/debian stretch/main amd64 btrfs-tools amd64 4.7.3-1 [16.9 kB]
[91mdebconf: delaying package configuration, since apt-utils is not installed
[0mFetched 649 kB in 1s (493 kB/s)
Selecting previously unselected package liblzo2-2:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 15090 files and directories currently installed.)
Preparing to unpack .../liblzo2-2_2.08-1.2+b2_amd64.deb ...
Unpacking liblzo2-2:amd64 (2.08-1.2+b2) ...
Selecting previously unselected package btrfs-progs.
Preparing to unpack .../btrfs-progs_4.7.3-1_amd64.deb ...
Unpacking btrfs-progs (4.7.3-1) ...
Selecting previously unselected package btrfs-tools.
Preparing to unpack .../btrfs-tools_4.7.3-1_amd64.deb ...
Unpacking btrfs-tools (4.7.3-1) ...
Processing triggers for libc-bin (2.24-11+deb9u4) ...
Setting up liblzo2-2:amd64 (2.08-1.2+b2) ...
Setting up btrfs-progs (4.7.3-1) ...
Setting up btrfs-tools (4.7.3-1) ...
Processing triggers for libc-bin (2.24-11+deb9u4) ...
Removing intermediate container 56434b0a6f50
 ---> ed89bd9d18f9
Step 45/112 : ENV INSTALL_BINARY_NAME=containerd
 ---> Running in 49fcf0a28bb3
Removing intermediate container 49fcf0a28bb3
 ---> 8b34feacc869
Step 46/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> 1b0d89e4aced
Step 47/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> afcfd4b199a6
Step 48/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Running in 53eb6480bcce
[91m+ RM_GOPATH=0
[0m[91m+ TMP_GOPATH=
+ : /build
+ '[' -z '' ']'
[0m[91m++ mktemp -d
+ export GOPATH=/tmp/tmp.qvwQjWkeOD
+ GOPATH=/tmp/tmp.qvwQjWkeOD
+ RM_GOPATH=1
++ dirname ./install.sh
[0m[91m+ dir=.
+ bin=containerd
+ shift
+ '[' '!' -f ./containerd.installer ']'
+ . ./containerd.installer
++ CONTAINERD_COMMIT=894b81a4b802e4eb2a91d1ce216b8817763c29fb
+ install_containerd
+ echo 'Install containerd version 894b81a4b802e4eb2a91d1ce216b8817763c29fb'
+ git clone https://github.com/containerd/containerd.git /tmp/tmp.qvwQjWkeOD/src/github.com/containerd/containerd
Cloning into '/tmp/tmp.qvwQjWkeOD/src/github.com/containerd/containerd'...
[0mInstall containerd version 894b81a4b802e4eb2a91d1ce216b8817763c29fb
[91m+ cd /tmp/tmp.qvwQjWkeOD/src/github.com/containerd/containerd
[0m[91m+ git checkout -q 894b81a4b802e4eb2a91d1ce216b8817763c29fb
[0m[91m+ export 'BUILDTAGS=netgo osusergo static_build'
+ BUILDTAGS='netgo osusergo static_build'
+ export EXTRA_FLAGS=-buildmode=pie
+ EXTRA_FLAGS=-buildmode=pie
+ export 'EXTRA_LDFLAGS=-extldflags "-fno-PIC -static"'
+ EXTRA_LDFLAGS='-extldflags "-fno-PIC -static"'
+ '[' '' = dynamic ']'
+ make
[0m🇩 bin/ctr
🇩 bin/containerd
🇩 bin/containerd-stress
🇩 bin/containerd-shim
🇩 bin/containerd-shim-runc-v1
🇩 binaries
[91m+ mkdir -p /build
[0m[91m+ cp bin/containerd /build/containerd
[0m[91m+ cp bin/containerd-shim /build/containerd-shim
[0m[91m+ cp bin/ctr /build/ctr
[0mRemoving intermediate container 53eb6480bcce
 ---> d0c8c6788411
Step 49/112 : FROM dev-base AS proxy
 ---> 4659f1c353d9
Step 50/112 : ENV INSTALL_BINARY_NAME=proxy
 ---> Running in 6e1885bc714c
Removing intermediate container 6e1885bc714c
 ---> d4a05653dc21
Step 51/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> 4a472a1552a9
Step 52/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> 91f5b23808ac
Step 53/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Running in 7969f15ff66e
[91m+ RM_GOPATH=0
+ TMP_GOPATH=
+ : /build
+ '[' -z '' ']'
++ mktemp -d
[0m[91m+ export GOPATH=/tmp/tmp.OiQ9xVhoOk
+ GOPATH=/tmp/tmp.OiQ9xVhoOk
+ RM_GOPATH=1
[0m[91m++ dirname ./install.sh
[0m[91m+ dir=.
[0mInstall docker-proxy version 5ac07abef4eee176423fdc1b870d435258e2d381
[91m+ bin=proxy
+ shift
+ '[' '!' -f ./proxy.installer ']'
+ . ./proxy.installer
++ LIBNETWORK_COMMIT=5ac07abef4eee176423fdc1b870d435258e2d381
+ install_proxy
+ case "$1" in
+ export CGO_ENABLED=0
+ CGO_ENABLED=0
+ _install_proxy
+ echo 'Install docker-proxy version 5ac07abef4eee176423fdc1b870d435258e2d381'
+ git clone https://github.com/docker/libnetwork.git /tmp/tmp.OiQ9xVhoOk/src/github.com/docker/libnetwork
[0m[91mCloning into '/tmp/tmp.OiQ9xVhoOk/src/github.com/docker/libnetwork'...
[0m[91m+ cd /tmp/tmp.OiQ9xVhoOk/src/github.com/docker/libnetwork
[0m[91m+ git checkout -q 5ac07abef4eee176423fdc1b870d435258e2d381
[0m[91m+ go build -ldflags= -o /build/docker-proxy github.com/docker/libnetwork/cmd/proxy
[0mRemoving intermediate container 7969f15ff66e
 ---> ab64ad7975d1
Step 54/112 : FROM base AS gometalinter
 ---> 4659f1c353d9
Step 55/112 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Running in 9f55f0774a3f
Removing intermediate container 9f55f0774a3f
 ---> 8b145e927f1e
Step 56/112 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> ba166732b737
Step 57/112 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> 5be8d2587bce
Step 58/112 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Running in 0573ae99b35f
[91m+ RM_GOPATH=0
+ TMP_GOPATH=
+ : /build
+ '[' -z '' ']'
++ mktemp -d
[0m[91m+ export GOPATH=/tmp/tmp.Da0eXMwtdX
+ GOPATH=/tmp/tmp.Da0eXMwtdX
+ RM_GOPATH=1
++ dirname ./install.sh
[0m[91m+ dir=.
+ bin=gometalinter
+ shift
+ '[' '!' -f ./gometalinter.installer ']'
+ . ./gometalinter.installer
++ GOMETALINTER_COMMIT=v2.0.6
+ install_gometalinter
+ echo 'Installing gometalinter version v2.0.6'
+ go get -d github.com/alecthomas/gometalinter
[0mInstalling gometalinter version v2.0.6
[91m+ cd /tmp/tmp.Da0eXMwtdX/src/github.com/alecthomas/gometalinter
[0m[91m+ git checkout -q v2.0.6
[0m[91m+ go build -buildmode=pie -o /build/gometalinter github.com/alecthomas/gometalinter
[0m[91m+ GOBIN=/build
+ /build/gometalinter --install
[0mInstalling:
  deadcode
  dupl
  errcheck
  gas
  gochecknoglobals
  gochecknoinits
  goconst
  gocyclo
  goimports
  golint
  gosimple
  gotype
  gotypex
  ineffassign
  interfacer
  lll
  maligned
  megacheck
  misspell
  nakedret
  safesql
  staticcheck
  structcheck
  unconvert
  unparam
  unused
  varcheck
Set build name.
New build name is '#39173'
Build was aborted
Aborted by Gordon
[PostBuildScript] - Executing post build scripts.
/tmp/jenkins3726306783033927457.sh: line 14: 29301 Terminated              docker build --rm --force-rm --build-arg APT_MIRROR=cdn-fastly.deb.debian.org -t docker:$GITCOMMIT .
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins7515296509017675594.sh
+ echo Ensuring container killed.
Ensuring container killed.
+ docker rm -vf docker-pr54297
Error: No such container: docker-pr54297
+ true
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/ubuntu/workspace/Docker-PRs:/workspace busybox chown -R 1000:1000 /workspace
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins4474112570352084668.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ + find bundles -name *.log -o -name *.profxargs tar -czf bundles.tar.gz
 -o -name integration.test
find: ‘bundles’: No such file or directory
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: ABORTED
