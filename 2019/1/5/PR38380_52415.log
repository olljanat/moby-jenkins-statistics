Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ubuntu-1604-overlay2-stable (i-0c82389e43345e27e) (x86_64 ec2 ubuntu overlay2 linux ubuntu-1604 ubuntu-1604-overlay2-stable amd64 docker us-west-2) in workspace /home/ubuntu/workspace/Docker-PRs
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/ubuntu/workspace/Docker-PRs # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision 2ee53a42db814c513770421f1b0d48f27faeadea (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 2ee53a42db814c513770421f1b0d48f27faeadea
Commit message: "Merge pull request #38490 from kolyshkin/test-rename-anon-ct"
 > git rev-list --no-walk 926edd68a545e6fda83e66d054158a70474356a1 # timeout=10
Set build name.
New build name is '#38380'
[Docker-PRs] $ /bin/bash /tmp/jenkins6190907230358682937.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38380/head -> origin/pr/38380
Merge made by the 'recursive' strategy.
 api/server/router/container/container_routes.go |  5 ++
 api/swagger.yaml                                | 12 +++-
 api/types/container/host_config.go              |  7 ++-
 daemon/oci_linux.go                             |  7 ++-
 daemon/oci_windows.go                           |  9 ++-
 docs/api/version-history.md                     |  3 +
 integration/container/create_test.go            | 73 +++++++++++++++++++++++++
 oci/caps/utils.go                               | 26 +++++++--
 oci/defaults.go                                 | 11 ++--
 oci/oci.go                                      | 15 +----
 10 files changed, 136 insertions(+), 32 deletions(-)
Sending build context to Docker daemon  45.11MB
Step 1/94 : FROM golang:1.11.4 AS base
 ---> 343df9d12b7b
Step 2/94 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> 0100a0ec59cc
Step 3/94 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> 843921a80e5a
Step 4/94 : FROM base AS criu
 ---> 843921a80e5a
Step 5/94 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> cb1e79eac295
Step 6/94 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> 25482007dc87
Step 7/94 : FROM base AS registry
 ---> 843921a80e5a
Step 8/94 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> b0203f67e128
Step 9/94 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> 83d3850357e0
Step 10/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> a7882c85afaf
Step 11/94 : FROM base AS docker-py
 ---> 843921a80e5a
Step 12/94 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> 3e5031525fd6
Step 13/94 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> fce4d490fba4
Step 14/94 : FROM base AS swagger
 ---> 843921a80e5a
Step 15/94 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> 54ad652978e4
Step 16/94 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 5bb54812e019
Step 17/94 : FROM base AS frozen-images
 ---> 843921a80e5a
Step 18/94 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> 987cbbb2c655
Step 19/94 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> 8f6c7cf6730b
Step 20/94 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> 370e223edc0a
Step 21/94 : FROM base AS runtime-dev
 ---> 843921a80e5a
Step 22/94 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> af4e27c58e31
Step 23/94 : FROM base AS tomlv
 ---> 843921a80e5a
Step 24/94 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> fd900b2180ae
Step 25/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 0f7bdcd7c5fc
Step 26/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> b7baad670466
Step 27/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> ec9bedd21d1f
Step 28/94 : FROM base AS vndr
 ---> 843921a80e5a
Step 29/94 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> 612cfada15ba
Step 30/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 9ea3a24a7975
Step 31/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> f43473490930
Step 32/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> cf9623022f1b
Step 33/94 : FROM base AS containerd
 ---> 843921a80e5a
Step 34/94 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> a1af153ab5af
Step 35/94 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> 417aab35495e
Step 36/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 084f61a46d03
Step 37/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> c0b853bbeb2d
Step 38/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 78193a95ce14
Step 39/94 : FROM base AS proxy
 ---> 843921a80e5a
Step 40/94 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> a6b0f05385f3
Step 41/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> b3094e47fbb7
Step 42/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> ef57dd1f85fc
Step 43/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 2e2ace50f0e2
Step 44/94 : FROM base AS gometalinter
 ---> 843921a80e5a
Step 45/94 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> b92f48e70cfa
Step 46/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> b4161ff9b432
Step 47/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 4b4a3e088ed7
Step 48/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 1c38681b6f43
Step 49/94 : FROM base AS dockercli
 ---> 843921a80e5a
Step 50/94 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> d6a0518d356a
Step 51/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 8f2ca8d9b6cc
Step 52/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 798b8cf554ad
Step 53/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> c4ed7e1aa085
Step 54/94 : FROM runtime-dev AS runc
 ---> af4e27c58e31
Step 55/94 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> a07dcb4ea422
Step 56/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> f3cd998621b9
Step 57/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 9ea467d747f1
Step 58/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 61494bf9f788
Step 59/94 : FROM base AS tini
 ---> 843921a80e5a
Step 60/94 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> 91f45161034e
Step 61/94 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 0bcf8c75283b
Step 62/94 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> 52398b2e14b0
Step 63/94 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 08f474f8eb96
Step 64/94 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> d765b0a516be
Step 65/94 : FROM runtime-dev AS dev
 ---> af4e27c58e31
Step 66/94 : RUN groupadd -r docker
 ---> Using cache
 ---> b70713ab406e
Step 67/94 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> cbc1edd268f2
Step 68/94 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> ac562a441e75
Step 69/94 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> fb07e7503091
Step 70/94 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> 0c75e26d9066
Step 71/94 : RUN ldconfig
 ---> Using cache
 ---> 8411c3c79b97
Step 72/94 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> d557b398b724
Step 73/94 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> 9c481b714b28
Step 74/94 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> 238b479b6dd8
Step 75/94 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> 4c9ca7406dde
Step 76/94 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> 9a81caeffb30
Step 77/94 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> 6618f9fdfb99
Step 78/94 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> 1906ab65a155
Step 79/94 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> a8abe2108364
Step 80/94 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> 4cd8d3004737
Step 81/94 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> a0bb2dc800e9
Step 82/94 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> 4d4855ac91ab
Step 83/94 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> d41182c83281
Step 84/94 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> 1e8ddc9113c1
Step 85/94 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> e001849662d0
Step 86/94 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> f2abb05776b2
Step 87/94 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> 8e5b9fb932b9
Step 88/94 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> 15e536ab64ea
Step 89/94 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> 5b20e9e8df8a
Step 90/94 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> 893931555f56
Step 91/94 : VOLUME /var/lib/docker
 ---> Using cache
 ---> 8739487ef801
Step 92/94 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 56ae5cad44ff
Step 93/94 : FROM dev AS final
 ---> 56ae5cad44ff
Step 94/94 : COPY . /go/src/github.com/docker/docker
 ---> 09700b057f0e
Successfully built 09700b057f0e
Successfully tagged docker:2f4995b
Congratulations!  All commits are properly signed with the DCO!
Congratulations!  "./pkg/..." is safely isolated from internal code.
The swagger spec at "api/swagger.yaml" is valid against swagger specification 2.0
The result of hack/generate-swagger-api.sh differs

diff --git a/api/types/container/container_wait.go b/api/types/container/container_wait.go
index 9e3910a6b4..06b0f02077 100644
--- a/api/types/container/container_wait.go
+++ b/api/types/container/container_wait.go
@@ -7,14 +7,6 @@ package container
 // See hack/generate-swagger-api.sh
 // ----------------------------------------------------------------------------
 
-// ContainerWaitOKBodyError container waiting error, if any
-// swagger:model ContainerWaitOKBodyError
-type ContainerWaitOKBodyError struct {
-
-	// Details of an error
-	Message string `json:"Message,omitempty"`
-}
-
 // ContainerWaitOKBody OK response to ContainerWait operation
 // swagger:model ContainerWaitOKBody
 type ContainerWaitOKBody struct {
@@ -27,3 +19,11 @@ type ContainerWaitOKBody struct {
 	// Required: true
 	StatusCode int64 `json:"StatusCode"`
 }
+
+// ContainerWaitOKBodyError container waiting error, if any
+// swagger:model ContainerWaitOKBodyError
+type ContainerWaitOKBodyError struct {
+
+	// Details of an error
+	Message string `json:"Message,omitempty"`
+}

Please update api/swagger.yaml with any api changes, then 
run `hack/generate-swagger-api.sh`.
Build step 'Execute shell' marked build as failure
Set build name.
New build name is '#38380'
[PostBuildScript] - Executing post build scripts.
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins2311800406279749665.sh
+ echo Ensuring container killed.
Ensuring container killed.
+ docker rm -vf docker-pr52415
Error: No such container: docker-pr52415
+ true
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/ubuntu/workspace/Docker-PRs:/workspace busybox chown -R 1000:1000 /workspace
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins8491858694006254361.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ find bundles -name+ xargs tar -czf bundles.tar.gz
 *.log -o -name *.prof -o -name integration.test
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: FAILURE
