Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ubuntu-1604-overlay2-stable (i-0b3e3c33adb0268c8) (x86_64 ec2 ubuntu overlay2 linux ubuntu-1604 ubuntu-1604-overlay2-stable amd64 docker us-west-2) in workspace /home/ubuntu/workspace/Docker-PRs
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/ubuntu/workspace/Docker-PRs # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision 92b34ec9c6a6be8c1b5751b1572b6293c7708423 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 92b34ec9c6a6be8c1b5751b1572b6293c7708423
Commit message: "Merge pull request #38408 from josegonzalez/patch-1"
 > git rev-list --no-walk 92b34ec9c6a6be8c1b5751b1572b6293c7708423 # timeout=10
Set build name.
New build name is '#38410'
[Docker-PRs] $ /bin/bash /tmp/jenkins6771885548257770345.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38410/head -> origin/pr/38410
Merge made by the 'recursive' strategy.
 Dockerfile          |  2 +-
 Dockerfile.e2e      |  2 +-
 Dockerfile.simple   |  2 +-
 Dockerfile.windows  | 91 +++--------------------------------------------------
 hack/ci/windows.ps1 | 23 ++++++++------
 5 files changed, 22 insertions(+), 98 deletions(-)
Sending build context to Docker daemon  45.08MB
Step 1/93 : FROM golang:1.11.4 AS base
 ---> 2422e4d43e15
Step 2/93 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> 0d25a1eff947
Step 3/93 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> 58e622ddf83f
Step 4/93 : FROM base AS criu
 ---> 58e622ddf83f
Step 5/93 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> d01b425be466
Step 6/93 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> c84f3f3430e3
Step 7/93 : FROM base AS registry
 ---> 58e622ddf83f
Step 8/93 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> 731d5c3f3706
Step 9/93 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> 33c7960e4800
Step 10/93 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> bef90924c8ab
Step 11/93 : FROM base AS docker-py
 ---> 58e622ddf83f
Step 12/93 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> 2c686be20539
Step 13/93 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> f897bdf3aa30
Step 14/93 : FROM base AS swagger
 ---> 58e622ddf83f
Step 15/93 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> bcd8785b7c0a
Step 16/93 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> a0af0f4b0b09
Step 17/93 : FROM base AS frozen-images
 ---> 58e622ddf83f
Step 18/93 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> 4c9d53a718fe
Step 19/93 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> b2c4268bde2b
Step 20/93 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> 464b5599cc7f
Step 21/93 : FROM base AS runtime-dev
 ---> 58e622ddf83f
Step 22/93 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> 1c434c1d2d33
Step 23/93 : FROM base AS tomlv
 ---> 58e622ddf83f
Step 24/93 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> eb252c0590be
Step 25/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 5466c19763eb
Step 26/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 67160c30adfe
Step 27/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 9ece9c9ec409
Step 28/93 : FROM base AS vndr
 ---> 58e622ddf83f
Step 29/93 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> bbe846172695
Step 30/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> b5a225f85dcd
Step 31/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 6bc6d4d749f3
Step 32/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 71fc49b178e7
Step 33/93 : FROM base AS containerd
 ---> 58e622ddf83f
Step 34/93 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> 220f1bf5d59a
Step 35/93 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> 770ddd068c76
Step 36/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> f3eac8f58cce
Step 37/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 03079de961f8
Step 38/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 01a7bbb60b0d
Step 39/93 : FROM base AS proxy
 ---> 58e622ddf83f
Step 40/93 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> 22015865b513
Step 41/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 235223b414f7
Step 42/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> e6f547f79ddb
Step 43/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> d40ffaf14320
Step 44/93 : FROM base AS gometalinter
 ---> 58e622ddf83f
Step 45/93 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> e2990a56d84a
Step 46/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 590f290fcd67
Step 47/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 11e93c95422f
Step 48/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> e1ac7c6122ed
Step 49/93 : FROM base AS dockercli
 ---> 58e622ddf83f
Step 50/93 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> 41418e39341f
Step 51/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 7a01a502ec87
Step 52/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 865c13a9def8
Step 53/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> a2a03050a9f2
Step 54/93 : FROM runtime-dev AS runc
 ---> 1c434c1d2d33
Step 55/93 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> f54bca514030
Step 56/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> a0f0a1f401bc
Step 57/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 4c2173c747e3
Step 58/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 6f3d0f3afa5a
Step 59/93 : FROM base AS tini
 ---> 58e622ddf83f
Step 60/93 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> e2ec96ab1e6b
Step 61/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 765d8ca7e704
Step 62/93 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> d89132c029e6
Step 63/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 486aa3f3b51a
Step 64/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> f268bee8fdbc
Step 65/93 : FROM runtime-dev AS dev
 ---> 1c434c1d2d33
Step 66/93 : RUN groupadd -r docker
 ---> Using cache
 ---> f00c2218c252
Step 67/93 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> 28c397369f52
Step 68/93 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> 33acba56b6d9
Step 69/93 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> b11ee08d438f
Step 70/93 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> 20fe2c0cd518
Step 71/93 : RUN ldconfig
 ---> Using cache
 ---> c5adb4a2021c
Step 72/93 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> 81b0713f2955
Step 73/93 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> a534bd5f8b5d
Step 74/93 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> bcdeb9c87b6d
Step 75/93 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> 022a30502962
Step 76/93 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> 42ed906b2b9d
Step 77/93 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> 349e8d58c287
Step 78/93 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> fb377e94c68e
Step 79/93 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> ed04128e0241
Step 80/93 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> d56f8095a9f7
Step 81/93 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> 5243acd8f98e
Step 82/93 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> f20b43dd89aa
Step 83/93 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> 3ed83f4eb6a7
Step 84/93 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> 2a30485ab6b7
Step 85/93 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> fde81083190d
Step 86/93 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> eada6ff2c20e
Step 87/93 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> 7c12a2bb1909
Step 88/93 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> e85676a0ffaf
Step 89/93 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> 6b891f65efe2
Step 90/93 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> 51034c594748
Step 91/93 : VOLUME /var/lib/docker
 ---> Using cache
 ---> 144c8246153a
Step 92/93 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 5c82038ecfb8
Step 93/93 : COPY . /go/src/github.com/docker/docker
 ---> cca3a53bab0a
Successfully built cca3a53bab0a
Successfully tagged docker:a3e3b0c
Congratulations!  All commits are properly signed with the DCO!
Congratulations!  "./pkg/..." is safely isolated from internal code.
No api/types/ or api/swagger.yaml changes in diff.
Congratulations!  No testing.T found.
Congratulations!  All toml source files changed here have valid syntax.
Congratulations!  Changelog CHANGELOG.md is well-formed.
Congratulations!  Changelog CHANGELOG.md dates are in descending order.
Congratulations!  No new tests added to integration-cli.
?   	github.com/docker/docker/api	[no test files]
ok  	github.com/docker/docker/api/server	0.004s	coverage: 7.9% of statements
Set build name.
New build name is '#38410'
Build was aborted
Aborted by Gordon
[PostBuildScript] - Executing post build scripts.
/tmp/jenkins6771885548257770345.sh: line 26: 12087 Terminated              docker run --rm -t --privileged -v "$WORKSPACE/bundles:/go/src/github.com/docker/docker/bundles" -v "$WORKSPACE/.git:/go/src/github.com/docker/docker/.git" --name docker-pr$BUILD_NUMBER -e DOCKER_GITCOMMIT=${GITCOMMIT} -e DOCKER_GRAPHDRIVER=vfs -e DOCKER_EXECDRIVER=native -e CODECOV_TOKEN -e GIT_SHA1 docker:$GITCOMMIT hack/ci/janky
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins7560539133549498718.sh
+ echo Ensuring container killed.
Ensuring container killed.
+ docker rm -vf docker-pr52124
docker-pr52124
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/ubuntu/workspace/Docker-PRs:/workspace busybox chown -R 1000:1000 /workspace
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins8827776443415717208.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ find bundles -name *.log -o -name *.prof -o -name integration.test
+ xargs tar -czf bundles.tar.gz
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: ABORTED
