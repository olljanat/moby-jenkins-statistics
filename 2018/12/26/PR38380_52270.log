Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ubuntu-1604-overlay2-stable (i-010795d8cbea0dd81) (x86_64 ec2 ubuntu overlay2 linux ubuntu-1604 ubuntu-1604-overlay2-stable amd64 docker us-west-2) in workspace /home/ubuntu/workspace/Docker-PRs
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/ubuntu/workspace/Docker-PRs # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision 5ddb1d410a8b5ea35a6d57200b42582993f1e125 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 5ddb1d410a8b5ea35a6d57200b42582993f1e125
Commit message: "Merge pull request #38426 from thaJeztah/remove_unused_experimental_check"
 > git rev-list --no-walk 5ddb1d410a8b5ea35a6d57200b42582993f1e125 # timeout=10
Set build name.
New build name is '#38380'
[Docker-PRs] $ /bin/bash /tmp/jenkins6501565307197446161.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38380/head -> origin/pr/38380
Updating 5ddb1d4..e695b49
Fast-forward
 api/server/router/container/container_routes.go |  5 ++
 api/swagger.yaml                                |  5 ++
 api/types/container/host_config.go              |  7 ++-
 daemon/oci_linux.go                             |  7 ++-
 daemon/oci_windows.go                           |  9 ++-
 docs/api/version-history.md                     |  3 +
 integration/container/create_test.go            | 73 +++++++++++++++++++++++++
 oci/caps/utils.go                               | 26 +++++++--
 oci/defaults.go                                 | 11 ++--
 oci/oci.go                                      | 15 +----
 10 files changed, 131 insertions(+), 30 deletions(-)
Sending build context to Docker daemon  45.09MB
Step 1/93 : FROM golang:1.11.4 AS base
 ---> 2422e4d43e15
Step 2/93 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> 4975531ce58d
Step 3/93 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> 03d691b34cb4
Step 4/93 : FROM base AS criu
 ---> 03d691b34cb4
Step 5/93 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> 68e31c9c1cdb
Step 6/93 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> 75b281262602
Step 7/93 : FROM base AS registry
 ---> 03d691b34cb4
Step 8/93 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> bbb30ade57ef
Step 9/93 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> 78cf223ca62d
Step 10/93 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 1a929995c6ed
Step 11/93 : FROM base AS docker-py
 ---> 03d691b34cb4
Step 12/93 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> 25b7b71c7e00
Step 13/93 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> c1f39525f464
Step 14/93 : FROM base AS swagger
 ---> 03d691b34cb4
Step 15/93 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> e0f5480675fd
Step 16/93 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 91239616a857
Step 17/93 : FROM base AS frozen-images
 ---> 03d691b34cb4
Step 18/93 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> 2b489ab324ac
Step 19/93 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> ee8d69559603
Step 20/93 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> a6e96d144d98
Step 21/93 : FROM base AS runtime-dev
 ---> 03d691b34cb4
Step 22/93 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> 4dfa935de1dd
Step 23/93 : FROM base AS tomlv
 ---> 03d691b34cb4
Step 24/93 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> bc9bf37e076d
Step 25/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> c6c1639f1779
Step 26/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 3418e6d69d33
Step 27/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> a436e6a6a43a
Step 28/93 : FROM base AS vndr
 ---> 03d691b34cb4
Step 29/93 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> 3b4f87e93b7b
Step 30/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 21a89596193a
Step 31/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 83babad049d9
Step 32/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> c2b247a43ebc
Step 33/93 : FROM base AS containerd
 ---> 03d691b34cb4
Step 34/93 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> ecf71f734f65
Step 35/93 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> b0465720e4bf
Step 36/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> e20d3775ab3a
Step 37/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 8efd7426f6ed
Step 38/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 44020997f190
Step 39/93 : FROM base AS proxy
 ---> 03d691b34cb4
Step 40/93 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> 7b8d06a09f05
Step 41/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 91e131894add
Step 42/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> db524b61e057
Step 43/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 656b92d213e4
Step 44/93 : FROM base AS gometalinter
 ---> 03d691b34cb4
Step 45/93 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> e3083e83e0d1
Step 46/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 9410dbdb1276
Step 47/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 80e4a37f9ec5
Step 48/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> df04e405c42d
Step 49/93 : FROM base AS dockercli
 ---> 03d691b34cb4
Step 50/93 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> b8665dd7e193
Step 51/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 790dfa73de13
Step 52/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 3510ef21671f
Step 53/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> ce485e776966
Step 54/93 : FROM runtime-dev AS runc
 ---> 4dfa935de1dd
Step 55/93 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> 17cabade8cfd
Step 56/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 9cdff6e61d26
Step 57/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> da18c0eb881e
Step 58/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 2e9e40da1831
Step 59/93 : FROM base AS tini
 ---> 03d691b34cb4
Step 60/93 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> 4f97cd6256c5
Step 61/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 518f4353cf97
Step 62/93 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> 67b4c30029e5
Step 63/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> ef25ef53f7a5
Step 64/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> f4484f4ff15a
Step 65/93 : FROM runtime-dev AS dev
 ---> 4dfa935de1dd
Step 66/93 : RUN groupadd -r docker
 ---> Using cache
 ---> 45e3dc38e7af
Step 67/93 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> 5cfb349f12a8
Step 68/93 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> e1eaa2297961
Step 69/93 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> 2ab87a9126b9
Step 70/93 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> b3b068bb02f6
Step 71/93 : RUN ldconfig
 ---> Using cache
 ---> 03bcd467049e
Step 72/93 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> bcd25b306db4
Step 73/93 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> d4dbad08cc56
Step 74/93 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> a0315a3de8da
Step 75/93 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> a2cab5c4fab3
Step 76/93 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> 0387d1ef9b9c
Step 77/93 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> 2b1b816c1598
Step 78/93 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> 8c1b4006666a
Step 79/93 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> 49a4925f63c3
Step 80/93 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> 5c927b20d28d
Step 81/93 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> 1c31f2a8afec
Step 82/93 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> 2c767b3bc3a2
Step 83/93 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> f5e1b25af308
Step 84/93 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> 6ab042b8065b
Step 85/93 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> 92231c616aed
Step 86/93 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> 1a5bbffeb123
Step 87/93 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> 038a0ff5d66f
Step 88/93 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> f367235701cd
Step 89/93 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> 5a0d7da8847b
Step 90/93 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> bd3c5a4926bc
Step 91/93 : VOLUME /var/lib/docker
 ---> Using cache
 ---> 85811efca557
Step 92/93 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> e26a00f0258a
Step 93/93 : COPY . /go/src/github.com/docker/docker
 ---> 8e3c4ef073b0
Successfully built 8e3c4ef073b0
Successfully tagged docker:e695b49
Congratulations!  All commits are properly signed with the DCO!
Congratulations!  "./pkg/..." is safely isolated from internal code.
The swagger spec at "api/swagger.yaml" is valid against swagger specification 2.0
The result of hack/generate-swagger-api.sh differs

diff --git a/api/types/container/container_wait.go b/api/types/container/container_wait.go
index 9e3910a6b4..06b0f02077 100644
--- a/api/types/container/container_wait.go
+++ b/api/types/container/container_wait.go
@@ -7,14 +7,6 @@ package container
 // See hack/generate-swagger-api.sh
 // ----------------------------------------------------------------------------
 
-// ContainerWaitOKBodyError container waiting error, if any
-// swagger:model ContainerWaitOKBodyError
-type ContainerWaitOKBodyError struct {
-
-	// Details of an error
-	Message string `json:"Message,omitempty"`
-}
-
 // ContainerWaitOKBody OK response to ContainerWait operation
 // swagger:model ContainerWaitOKBody
 type ContainerWaitOKBody struct {
@@ -27,3 +19,11 @@ type ContainerWaitOKBody struct {
 	// Required: true
 	StatusCode int64 `json:"StatusCode"`
 }
+
+// ContainerWaitOKBodyError container waiting error, if any
+// swagger:model ContainerWaitOKBodyError
+type ContainerWaitOKBodyError struct {
+
+	// Details of an error
+	Message string `json:"Message,omitempty"`
+}

Please update api/swagger.yaml with any api changes, then 
run `hack/generate-swagger-api.sh`.
Build step 'Execute shell' marked build as failure
Set build name.
New build name is '#38380'
[PostBuildScript] - Executing post build scripts.
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins4770529968525171058.sh
+ echo Ensuring container killed.
Ensuring container killed.
+ docker rm -vf docker-pr52270
Error: No such container: docker-pr52270
+ true
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/ubuntu/workspace/Docker-PRs:/workspace busybox chown -R 1000:1000 /workspace
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins45957509678236566.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ find+ xargs tar -czf bundles.tar.gz
 bundles -name *.log -o -name *.prof -o -name integration.test
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: FAILURE
