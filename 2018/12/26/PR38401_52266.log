Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ubuntu-1604-overlay2-stable (i-01897630dbc664b79) (x86_64 ec2 ubuntu overlay2 linux ubuntu-1604 ubuntu-1604-overlay2-stable amd64 docker us-west-2) in workspace /home/ubuntu/workspace/Docker-PRs
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/ubuntu/workspace/Docker-PRs # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision 5ddb1d410a8b5ea35a6d57200b42582993f1e125 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 5ddb1d410a8b5ea35a6d57200b42582993f1e125
Commit message: "Merge pull request #38426 from thaJeztah/remove_unused_experimental_check"
 > git rev-list --no-walk 5ddb1d410a8b5ea35a6d57200b42582993f1e125 # timeout=10
Set build name.
New build name is '#38401'
[Docker-PRs] $ /bin/bash /tmp/jenkins3231690314185119615.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/38401/head -> origin/pr/38401
Auto-merging daemon/daemon.go
Merge made by the 'recursive' strategy.
 daemon/daemon.go | 35 +++++++++++++++++++----------------
 1 file changed, 19 insertions(+), 16 deletions(-)
Sending build context to Docker daemon  45.09MB
Step 1/93 : FROM golang:1.11.4 AS base
 ---> 2422e4d43e15
Step 2/93 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> 9a1c082e858f
Step 3/93 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> ed426b3f68dc
Step 4/93 : FROM base AS criu
 ---> ed426b3f68dc
Step 5/93 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> e313ddda0fc5
Step 6/93 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> f071afa3a4ac
Step 7/93 : FROM base AS registry
 ---> ed426b3f68dc
Step 8/93 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> 3b0f2dae8ec1
Step 9/93 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> 616d4d6dd39a
Step 10/93 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 01d3b8e025e5
Step 11/93 : FROM base AS docker-py
 ---> ed426b3f68dc
Step 12/93 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> 5d70576a7e08
Step 13/93 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> 80647037343e
Step 14/93 : FROM base AS swagger
 ---> ed426b3f68dc
Step 15/93 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> 550331ec3833
Step 16/93 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> b31d838a2104
Step 17/93 : FROM base AS frozen-images
 ---> ed426b3f68dc
Step 18/93 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> 727c1c8bde4f
Step 19/93 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> 8105170edf05
Step 20/93 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> 369026e4abff
Step 21/93 : FROM base AS runtime-dev
 ---> ed426b3f68dc
Step 22/93 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> 09aa12bf26ae
Step 23/93 : FROM base AS tomlv
 ---> ed426b3f68dc
Step 24/93 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> 7a0f24e3c1f6
Step 25/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> ff1a2f90456b
Step 26/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> b03d9885a5fe
Step 27/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> f7cbf31ddfd5
Step 28/93 : FROM base AS vndr
 ---> ed426b3f68dc
Step 29/93 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> d3ab2ed930c8
Step 30/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 3dd51e605ec1
Step 31/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 078212b0d47f
Step 32/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 0107fc7a39a9
Step 33/93 : FROM base AS containerd
 ---> ed426b3f68dc
Step 34/93 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> b6b1354f78fb
Step 35/93 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> 961c8e1d5ef1
Step 36/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 3dd48bc851b7
Step 37/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> a73fd6fd0623
Step 38/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> d791ec9955a6
Step 39/93 : FROM base AS proxy
 ---> ed426b3f68dc
Step 40/93 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> 39e8a2d4c911
Step 41/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 5eb2405c1663
Step 42/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> ce76274b1c4a
Step 43/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> eb821634388b
Step 44/93 : FROM base AS gometalinter
 ---> ed426b3f68dc
Step 45/93 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> 9f671c677365
Step 46/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 61e4532d32d2
Step 47/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> a9d47c24755c
Step 48/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 4eee8d488a15
Step 49/93 : FROM base AS dockercli
 ---> ed426b3f68dc
Step 50/93 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> af18bebfb210
Step 51/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> f5abac819658
Step 52/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> e21e90edd8f9
Step 53/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 2f79c45faa68
Step 54/93 : FROM runtime-dev AS runc
 ---> 09aa12bf26ae
Step 55/93 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> 38551e00c2fe
Step 56/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> b65a7a6bed0e
Step 57/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> c7e2d24e84d5
Step 58/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> ea3ff7f8b423
Step 59/93 : FROM base AS tini
 ---> ed426b3f68dc
Step 60/93 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> 51c720ef8baa
Step 61/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> f77268e7e52a
Step 62/93 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> 3bc2cbf4b725
Step 63/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 4d293004c9f6
Step 64/93 : RUN PREFIX=/build ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> c1e17a9400ba
Step 65/93 : FROM runtime-dev AS dev
 ---> 09aa12bf26ae
Step 66/93 : RUN groupadd -r docker
 ---> Using cache
 ---> 87437e69bd14
Step 67/93 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> 1bb049a3eab9
Step 68/93 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> 077b8c640282
Step 69/93 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> 86f0401fff49
Step 70/93 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> d0162ad7bf98
Step 71/93 : RUN ldconfig
 ---> Using cache
 ---> 673f66f5d766
Step 72/93 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> 2fe4db85fc8d
Step 73/93 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> 213e2add2228
Step 74/93 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> e06836d62d30
Step 75/93 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> 8dcb3b464086
Step 76/93 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> 3d183a7cde61
Step 77/93 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> b1dc3c385ee4
Step 78/93 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> c7808986b974
Step 79/93 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> d48e2b97e2d3
Step 80/93 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> ab0167f87a74
Step 81/93 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> 3bcfa6bd1044
Step 82/93 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> 9fb7ef5be27e
Step 83/93 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> 075c01eff3c1
Step 84/93 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> 7b72dbf9e84b
Step 85/93 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> 3c78269da7d7
Step 86/93 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> 6cd50cefe5ed
Step 87/93 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> 33fd119dca33
Step 88/93 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> b5136977a1ff
Step 89/93 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> 2138be360c38
Step 90/93 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> a1b94c0267a9
Step 91/93 : VOLUME /var/lib/docker
 ---> Using cache
 ---> 246db1303ab4
Step 92/93 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 1820a81d8013
Step 93/93 : COPY . /go/src/github.com/docker/docker
 ---> 283ceda6ebba
Successfully built 283ceda6ebba
Successfully tagged docker:d7e2fb0
Congratulations!  All commits are properly signed with the DCO!
daemon/daemon.go:833:30:warning: undeclared name: distributionMetadataStore (gosimple)
daemon/daemon.go:966:2:warning: ineffectual assignment to imageStore (ineffassign)
daemon/daemon.go:998:2:warning: ineffectual assignment to rs (ineffassign)
daemon/daemon.go:1003:2:warning: ineffectual assignment to distributionMetadataStore (ineffassign)
daemon/daemon.go:836:30:warning: undeclared name: layerStores (interfacer)
daemon/daemon.go:835:30:warning: undeclared name: imageStore (interfacer)
daemon/daemon.go:833:30:warning: undeclared name: distributionMetadataStore (interfacer)
daemon/daemon.go:1003:2:warning: distributionMetadataStore declared but not used (interfacer)
daemon/daemon.go:998:2:warning: rs declared but not used (interfacer)
daemon/daemon.go:966:2:warning: imageStore declared but not used (interfacer)
daemon/daemon.go:841:30:warning: undeclared name: trustKey (interfacer)
daemon/daemon.go:839:30:warning: undeclared name: rs (interfacer)
daemon/daemon.go:1003:2:warning: distributionMetadataStore declared but not used (unconvert)
daemon/daemon.go:998:2:warning: rs declared but not used (unconvert)
daemon/daemon.go:839:30:warning: undeclared name: rs (unconvert)
daemon/daemon.go:841:30:warning: undeclared name: trustKey (unconvert)
daemon/daemon.go:836:30:warning: undeclared name: layerStores (unconvert)
daemon/daemon.go:835:30:warning: undeclared name: imageStore (unconvert)
daemon/daemon.go:833:30:warning: undeclared name: distributionMetadataStore (unconvert)
daemon/daemon.go:966:2:warning: imageStore declared but not used (unconvert)
Build step 'Execute shell' marked build as failure
Set build name.
New build name is '#38401'
[PostBuildScript] - Executing post build scripts.
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins368159034810105828.sh
+ echo Ensuring container killed.
Ensuring container killed.
+ docker rm -vf docker-pr52266
Error: No such container: docker-pr52266
+ true
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/ubuntu/workspace/Docker-PRs:/workspace busybox chown -R 1000:1000 /workspace
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins88625505855053207.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ xargs tar -czf bundles.tar.gz
+ find bundles -name *.log -o -name *.prof -o -name integration.test
tar: Cowardly refusing to create an empty archive
Try 'tar --help' or 'tar --usage' for more information.
+ true
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: FAILURE
