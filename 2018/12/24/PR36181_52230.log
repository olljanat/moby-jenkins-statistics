Started by user Gordon
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[EnvInject] - Loading node environment variables.
Building remotely on ubuntu-1604-overlay2-stable (i-0ea970de4a4c9c433) (x86_64 ec2 ubuntu overlay2 linux ubuntu-1604 ubuntu-1604-overlay2-stable amd64 docker us-west-2) in workspace /home/ubuntu/workspace/Docker-PRs
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/moby/moby.git
 > git init /home/ubuntu/workspace/Docker-PRs # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/moby/moby.git # timeout=10
Fetching upstream changes from https://github.com/moby/moby.git
 > git fetch --tags --progress https://github.com/moby/moby.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse origin/master^{commit} # timeout=10
Checking out Revision d147fe0582f44c0fc22ec8bdffff44939dd54d52 (origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f d147fe0582f44c0fc22ec8bdffff44939dd54d52
Commit message: "Merge pull request #38413 from slp/master"
 > git rev-list --no-walk d147fe0582f44c0fc22ec8bdffff44939dd54d52 # timeout=10
Set build name.
New build name is '#36181'
[Docker-PRs] $ /bin/bash /tmp/jenkins2426856776606259858.sh
From https://github.com/moby/moby
 * [new ref]         refs/pull/36181/head -> origin/pr/36181
Updating d147fe0..634a38c
Fast-forward
 .idea/docker.iml    |   8 +
 .idea/modules.xml   |   8 +
 .idea/vcs.xml       |   6 +
 .idea/workspace.xml | 873 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 daemon/oci_linux.go |   9 +
 5 files changed, 904 insertions(+)
 create mode 100644 .idea/docker.iml
 create mode 100644 .idea/modules.xml
 create mode 100644 .idea/vcs.xml
 create mode 100644 .idea/workspace.xml
Sending build context to Docker daemon  45.14MB
Step 1/93 : FROM golang:1.11.4 AS base
 ---> 2422e4d43e15
Step 2/93 : ARG APT_MIRROR=deb.debian.org
 ---> Using cache
 ---> d3c922141020
Step 3/93 : RUN sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
 ---> Using cache
 ---> 6ae4b9279541
Step 4/93 : FROM base AS criu
 ---> 6ae4b9279541
Step 5/93 : ENV CRIU_VERSION 3.6
 ---> Using cache
 ---> e2720f22cdfa
Step 6/93 : RUN apt-get update && apt-get install -y 	libnet-dev 	libprotobuf-c0-dev 	libprotobuf-dev 	libnl-3-dev 	libcap-dev 	protobuf-compiler 	protobuf-c-compiler 	python-protobuf 	&& mkdir -p /usr/src/criu 	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 	&& cd /usr/src/criu 	&& make 	&& make PREFIX=/build/ install-criu
 ---> Using cache
 ---> ec5e8b403f4d
Step 7/93 : FROM base AS registry
 ---> 6ae4b9279541
Step 8/93 : ENV REGISTRY_COMMIT_SCHEMA1 ec87e9b6971d831f0eff752ddb54fb64693e51cd
 ---> Using cache
 ---> 9133f222afc4
Step 9/93 : ENV REGISTRY_COMMIT 47a064d4195a9b56133891bbb13620c3ac83a827
 ---> Using cache
 ---> 5a86e79a10fc
Step 10/93 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/docker/distribution.git "$GOPATH/src/github.com/docker/distribution" 	&& (cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT") 	&& GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH" 		go build -buildmode=pie -o /build/registry-v2 github.com/docker/distribution/cmd/registry 	&& case $(dpkg --print-architecture) in 		amd64|ppc64*|s390x) 		(cd "$GOPATH/src/github.com/docker/distribution" && git checkout -q "$REGISTRY_COMMIT_SCHEMA1"); 		GOPATH="$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH"; 			go build -buildmode=pie -o /build/registry-v2-schema1 github.com/docker/distribution/cmd/registry; 		;; 	   esac 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 6fc539b0a63d
Step 11/93 : FROM base AS docker-py
 ---> 6ae4b9279541
Step 12/93 : ENV DOCKER_PY_COMMIT 8b246db271a85d6541dc458838627e89c683e42f
 ---> Using cache
 ---> 1b0a47ea4b26
Step 13/93 : RUN git clone https://github.com/docker/docker-py.git /build 	&& cd /build 	&& git checkout -q $DOCKER_PY_COMMIT
 ---> Using cache
 ---> 59ebec9eb0e3
Step 14/93 : FROM base AS swagger
 ---> 6ae4b9279541
Step 15/93 : ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb
 ---> Using cache
 ---> 4561f7f05cf4
Step 16/93 : RUN set -x 	&& export GOPATH="$(mktemp -d)" 	&& git clone https://github.com/go-swagger/go-swagger.git "$GOPATH/src/github.com/go-swagger/go-swagger" 	&& (cd "$GOPATH/src/github.com/go-swagger/go-swagger" && git checkout -q "$GO_SWAGGER_COMMIT") 	&& go build -o /build/swagger github.com/go-swagger/go-swagger/cmd/swagger 	&& rm -rf "$GOPATH"
 ---> Using cache
 ---> 6792aa3a0145
Step 17/93 : FROM base AS frozen-images
 ---> 6ae4b9279541
Step 18/93 : RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
 ---> Using cache
 ---> 74b9380570aa
Step 19/93 : COPY contrib/download-frozen-image-v2.sh /
 ---> Using cache
 ---> d6442473694d
Step 20/93 : RUN /download-frozen-image-v2.sh /build 	buildpack-deps:jessie@sha256:dd86dced7c9cd2a724e779730f0a53f93b7ef42228d4344b25ce9a42a1486251 	busybox:latest@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0 	busybox:glibc@sha256:0b55a30394294ab23b9afd58fab94e61a923f5834fba7ddbae7f8e0c11ba85e6 	debian:jessie@sha256:287a20c5f73087ab406e6b364833e3fb7b3ae63ca0eb3486555dc27ed32c6e60 	hello-world:latest@sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c
 ---> Using cache
 ---> 919b25b647ed
Step 21/93 : FROM base AS runtime-dev
 ---> 6ae4b9279541
Step 22/93 : RUN apt-get update && apt-get install -y 	libapparmor-dev 	libseccomp-dev
 ---> Using cache
 ---> 9806d1b1980a
Step 23/93 : FROM base AS tomlv
 ---> 6ae4b9279541
Step 24/93 : ENV INSTALL_BINARY_NAME=tomlv
 ---> Using cache
 ---> ceb036c066d9
Step 25/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 5364b59a6f35
Step 26/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 5c1d4fc62fcd
Step 27/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> e3450596a90c
Step 28/93 : FROM base AS vndr
 ---> 6ae4b9279541
Step 29/93 : ENV INSTALL_BINARY_NAME=vndr
 ---> Using cache
 ---> 1802c4a79bbc
Step 30/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> ff7d0868c0df
Step 31/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 22b3d3883656
Step 32/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> ec7c1d967976
Step 33/93 : FROM base AS containerd
 ---> 6ae4b9279541
Step 34/93 : RUN apt-get update && apt-get install -y btrfs-tools
 ---> Using cache
 ---> 6f137a2fe4ac
Step 35/93 : ENV INSTALL_BINARY_NAME=containerd
 ---> Using cache
 ---> c3179f40aa21
Step 36/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> b3570264b5a6
Step 37/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 33d455e90cd8
Step 38/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> e977cdaf48bb
Step 39/93 : FROM base AS proxy
 ---> 6ae4b9279541
Step 40/93 : ENV INSTALL_BINARY_NAME=proxy
 ---> Using cache
 ---> 83658e0f86bc
Step 41/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 7b7085a85b29
Step 42/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> b0a928e237eb
Step 43/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> aecd379b1ecd
Step 44/93 : FROM base AS gometalinter
 ---> 6ae4b9279541
Step 45/93 : ENV INSTALL_BINARY_NAME=gometalinter
 ---> Using cache
 ---> 3cf24ecdefab
Step 46/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 3cc8efa86b2c
Step 47/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 8a5094ceba48
Step 48/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> 80d7c49895c0
Step 49/93 : FROM base AS dockercli
 ---> 6ae4b9279541
Step 50/93 : ENV INSTALL_BINARY_NAME=dockercli
 ---> Using cache
 ---> ca07d6828ff1
Step 51/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> f157842847c5
Step 52/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 1c944081df60
Step 53/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> c92c594ba94f
Step 54/93 : FROM runtime-dev AS runc
 ---> 9806d1b1980a
Step 55/93 : ENV INSTALL_BINARY_NAME=runc
 ---> Using cache
 ---> 1e5813c0797b
Step 56/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> 7afb5403f462
Step 57/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> 68d308a24752
Step 58/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> bc91766b6c4b
Step 59/93 : FROM base AS tini
 ---> 6ae4b9279541
Step 60/93 : RUN apt-get update && apt-get install -y cmake vim-common
 ---> Using cache
 ---> dc455ce375fe
Step 61/93 : COPY hack/dockerfile/install/install.sh ./install.sh
 ---> Using cache
 ---> f835ebcdedfa
Step 62/93 : ENV INSTALL_BINARY_NAME=tini
 ---> Using cache
 ---> 3cc6ed5d9bc6
Step 63/93 : COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 ---> Using cache
 ---> bb3422ed822e
Step 64/93 : RUN PREFIX=/build/ ./install.sh $INSTALL_BINARY_NAME
 ---> Using cache
 ---> a454a7b6f0c2
Step 65/93 : FROM runtime-dev AS dev
 ---> 9806d1b1980a
Step 66/93 : RUN groupadd -r docker
 ---> Using cache
 ---> 037989f1480f
Step 67/93 : RUN useradd --create-home --gid docker unprivilegeduser
 ---> Using cache
 ---> 0a1d16086bbe
Step 68/93 : RUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc
 ---> Using cache
 ---> bf074ec0fd1a
Step 69/93 : RUN echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
 ---> Using cache
 ---> 41f6a406b7c7
Step 70/93 : RUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
 ---> Using cache
 ---> a343d39aa3a0
Step 71/93 : RUN ldconfig
 ---> Using cache
 ---> f9fb866c6c11
Step 72/93 : RUN apt-get update && apt-get install -y 	apparmor 	aufs-tools 	bash-completion 	btrfs-tools 	iptables 	jq 	libcap2-bin 	libdevmapper-dev 	libudev-dev 	libsystemd-dev 	binutils-mingw-w64 	g++-mingw-w64-x86-64 	net-tools 	pigz 	python-backports.ssl-match-hostname 	python-dev 	python-mock 	python-pip 	python-requests 	python-setuptools 	python-websocket 	python-wheel 	thin-provisioning-tools 	vim 	vim-common 	xfsprogs 	zip 	bzip2 	xz-utils 	--no-install-recommends
 ---> Using cache
 ---> ea399dc2910d
Step 73/93 : COPY --from=swagger /build/swagger* /usr/local/bin/
 ---> Using cache
 ---> 3921447e28ee
Step 74/93 : COPY --from=frozen-images /build/ /docker-frozen-images
 ---> Using cache
 ---> a04d23eca406
Step 75/93 : COPY --from=gometalinter /build/ /usr/local/bin/
 ---> Using cache
 ---> dac42832280b
Step 76/93 : COPY --from=tomlv /build/ /usr/local/bin/
 ---> Using cache
 ---> f257ba8c9a3e
Step 77/93 : COPY --from=vndr /build/ /usr/local/bin/
 ---> Using cache
 ---> 69dffd253d03
Step 78/93 : COPY --from=tini /build/ /usr/local/bin/
 ---> Using cache
 ---> 031e42da4922
Step 79/93 : COPY --from=runc /build/ /usr/local/bin/
 ---> Using cache
 ---> 2838831c07bf
Step 80/93 : COPY --from=containerd /build/ /usr/local/bin/
 ---> Using cache
 ---> 7f8737e6875c
Step 81/93 : COPY --from=proxy /build/ /usr/local/bin/
 ---> Using cache
 ---> 9f4f8fca2177
Step 82/93 : COPY --from=dockercli /build/ /usr/local/cli
 ---> Using cache
 ---> b236ff9ab7e8
Step 83/93 : COPY --from=registry /build/registry* /usr/local/bin/
 ---> Using cache
 ---> e9ee59f98faa
Step 84/93 : COPY --from=criu /build/ /usr/local/
 ---> Using cache
 ---> 97d6c3c2d10b
Step 85/93 : COPY --from=docker-py /build/ /docker-py
 ---> Using cache
 ---> 973f2943bc00
Step 86/93 : RUN cd /docker-py 	&& pip install docker-pycreds==0.2.1 	&& pip install yamllint==1.5.0 	&& pip install -r test-requirements.txt
 ---> Using cache
 ---> e75063ea7b2c
Step 87/93 : ENV PATH=/usr/local/cli:$PATH
 ---> Using cache
 ---> 900fcfd84e0c
Step 88/93 : ENV DOCKER_BUILDTAGS apparmor seccomp selinux
 ---> Using cache
 ---> b5e3fd3ccd32
Step 89/93 : ENV GOMETALINTER_OPTS="--deadline=2m"
 ---> Using cache
 ---> f283e586af58
Step 90/93 : WORKDIR /go/src/github.com/docker/docker
 ---> Using cache
 ---> 5b688c1bdf60
Step 91/93 : VOLUME /var/lib/docker
 ---> Using cache
 ---> dfd22d8d02c1
Step 92/93 : ENTRYPOINT ["hack/dind"]
 ---> Using cache
 ---> 24422bc62c91
Step 93/93 : COPY . /go/src/github.com/docker/docker
 ---> e3281d4eee7c
Successfully built e3281d4eee7c
Successfully tagged docker:634a38c
Congratulations!  All commits are properly signed with the DCO!
Congratulations!  "./pkg/..." is safely isolated from internal code.
No api/types/ or api/swagger.yaml changes in diff.
Congratulations!  No testing.T found.
Congratulations!  All toml source files changed here have valid syntax.
Congratulations!  Changelog CHANGELOG.md is well-formed.
Congratulations!  Changelog CHANGELOG.md dates are in descending order.
Congratulations!  No new tests added to integration-cli.
?   	github.com/docker/docker/api	[no test files]
ok  	github.com/docker/docker/api/server	0.004s	coverage: 7.9% of statements
?   	github.com/docker/docker/api/server/backend/build	[no test files]
ok  	github.com/docker/docker/api/server/httputils	0.004s	coverage: 11.1% of statements
ok  	github.com/docker/docker/api/server/middleware	0.004s	coverage: 43.4% of statements
?   	github.com/docker/docker/api/server/router	[no test files]
?   	github.com/docker/docker/api/server/router/build	[no test files]
?   	github.com/docker/docker/api/server/router/checkpoint	[no test files]
?   	github.com/docker/docker/api/server/router/container	[no test files]
?   	github.com/docker/docker/api/server/router/debug	[no test files]
?   	github.com/docker/docker/api/server/router/distribution	[no test files]
?   	github.com/docker/docker/api/server/router/image	[no test files]
?   	github.com/docker/docker/api/server/router/network	[no test files]
?   	github.com/docker/docker/api/server/router/plugin	[no test files]
?   	github.com/docker/docker/api/server/router/session	[no test files]
?   	github.com/docker/docker/api/server/router/swarm	[no test files]
?   	github.com/docker/docker/api/server/router/system	[no test files]
?   	github.com/docker/docker/api/server/router/volume	[no test files]
?   	github.com/docker/docker/api/types	[no test files]
?   	github.com/docker/docker/api/types/backend	[no test files]
?   	github.com/docker/docker/api/types/blkiodev	[no test files]
?   	github.com/docker/docker/api/types/container	[no test files]
?   	github.com/docker/docker/api/types/events	[no test files]
ok  	github.com/docker/docker/api/types/filters	0.003s	coverage: 94.2% of statements
?   	github.com/docker/docker/api/types/image	[no test files]
?   	github.com/docker/docker/api/types/mount	[no test files]
?   	github.com/docker/docker/api/types/network	[no test files]
?   	github.com/docker/docker/api/types/plugins/logdriver	[no test files]
?   	github.com/docker/docker/api/types/registry	[no test files]
ok  	github.com/docker/docker/api/types/strslice	0.002s	coverage: 90.0% of statements
?   	github.com/docker/docker/api/types/swarm	[no test files]
?   	github.com/docker/docker/api/types/swarm/runtime	[no test files]
ok  	github.com/docker/docker/api/types/time	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/api/types/versions	0.002s	coverage: 75.0% of statements
?   	github.com/docker/docker/api/types/versions/v1p19	[no test files]
?   	github.com/docker/docker/api/types/versions/v1p20	[no test files]
?   	github.com/docker/docker/api/types/volume	[no test files]
?   	github.com/docker/docker/builder	[no test files]
?   	github.com/docker/docker/builder/builder-next	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/containerimage	[no test files]
?   	github.com/docker/docker/builder/builder-next/adapters/snapshot	[no test files]
?   	github.com/docker/docker/builder/builder-next/exporter	[no test files]
?   	github.com/docker/docker/builder/builder-next/imagerefchecker	[no test files]
?   	github.com/docker/docker/builder/builder-next/worker	[no test files]
ok  	github.com/docker/docker/builder/dockerfile	0.384s	coverage: 45.4% of statements
ok  	github.com/docker/docker/builder/dockerignore	0.002s	coverage: 96.8% of statements
ok  	github.com/docker/docker/builder/fscache	0.111s	coverage: 69.2% of statements
ok  	github.com/docker/docker/builder/remotecontext	0.159s	coverage: 13.7% of statements
ok  	github.com/docker/docker/builder/remotecontext/git	0.607s	coverage: 78.8% of statements
?   	github.com/docker/docker/cli	[no test files]
?   	github.com/docker/docker/cli/config	[no test files]
ok  	github.com/docker/docker/cli/debug	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/client	0.098s	coverage: 75.6% of statements
ok  	github.com/docker/docker/cmd/dockerd	0.042s	coverage: 31.4% of statements
ok  	github.com/docker/docker/cmd/dockerd/hack	0.002s	coverage: 72.9% of statements
ok  	github.com/docker/docker/container	0.114s	coverage: 35.6% of statements
?   	github.com/docker/docker/container/stream	[no test files]
?   	github.com/docker/docker/contrib/apparmor	[no test files]
?   	github.com/docker/docker/contrib/docker-device-tool	[no test files]
?   	github.com/docker/docker/contrib/httpserver	[no test files]
ok  	github.com/docker/docker/daemon	12.130s	coverage: 17.1% of statements
ok  	github.com/docker/docker/daemon/cluster	0.039s	coverage: 0.5% of statements
ok  	github.com/docker/docker/daemon/cluster/controllers/plugin	0.008s	coverage: 65.3% of statements
ok  	github.com/docker/docker/daemon/cluster/convert	0.006s	coverage: 28.0% of statements
?   	github.com/docker/docker/daemon/cluster/executor	[no test files]
ok  	github.com/docker/docker/daemon/cluster/executor/container	3.432s	coverage: 12.7% of statements
?   	github.com/docker/docker/daemon/cluster/provider	[no test files]
ok  	github.com/docker/docker/daemon/config	0.028s	coverage: 84.8% of statements
ok  	github.com/docker/docker/daemon/discovery	0.004s	coverage: 30.4% of statements
ok  	github.com/docker/docker/daemon/events	0.057s	coverage: 50.0% of statements
?   	github.com/docker/docker/daemon/events/testutils	[no test files]
?   	github.com/docker/docker/daemon/exec	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver	0.004s	coverage: 2.2% of statements
ok  	github.com/docker/docker/daemon/graphdriver/aufs	5.205s	coverage: 73.6% of statements
ok  	github.com/docker/docker/daemon/graphdriver/btrfs	0.005s	coverage: 2.9% of statements
ok  	github.com/docker/docker/daemon/graphdriver/copy	0.174s	coverage: 57.0% of statements
ok  	github.com/docker/docker/daemon/graphdriver/devmapper	2.332s	coverage: 45.9% of statements
?   	github.com/docker/docker/daemon/graphdriver/graphtest	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver/overlay	0.771s	coverage: 50.8% of statements
ok  	github.com/docker/docker/daemon/graphdriver/overlay2	2.113s	coverage: 56.8% of statements
?   	github.com/docker/docker/daemon/graphdriver/overlayutils	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver/quota	0.259s	coverage: 75.2% of statements
?   	github.com/docker/docker/daemon/graphdriver/register	[no test files]
ok  	github.com/docker/docker/daemon/graphdriver/vfs	0.005s	coverage: 70.5% of statements
ok  	github.com/docker/docker/daemon/graphdriver/zfs	0.004s	coverage: 3.0% of statements
ok  	github.com/docker/docker/daemon/images	0.010s	coverage: 4.9% of statements
?   	github.com/docker/docker/daemon/initlayer	[no test files]
ok  	github.com/docker/docker/daemon/links	0.002s	coverage: 93.0% of statements
?   	github.com/docker/docker/daemon/listeners	[no test files]
ok  	github.com/docker/docker/daemon/logger	0.214s	coverage: 43.7% of statements
ok  	github.com/docker/docker/daemon/logger/awslogs	0.112s	coverage: 71.7% of statements
?   	github.com/docker/docker/daemon/logger/fluentd	[no test files]
?   	github.com/docker/docker/daemon/logger/gcplogs	[no test files]
ok  	github.com/docker/docker/daemon/logger/gelf	0.005s	coverage: 68.2% of statements
ok  	github.com/docker/docker/daemon/logger/journald	0.004s	coverage: 26.2% of statements
ok  	github.com/docker/docker/daemon/logger/jsonfilelog	0.006s	coverage: 62.1% of statements
ok  	github.com/docker/docker/daemon/logger/jsonfilelog/jsonlog	0.004s	coverage: 88.3% of statements
ok  	github.com/docker/docker/daemon/logger/local	0.011s	coverage: 74.7% of statements
?   	github.com/docker/docker/daemon/logger/logentries	[no test files]
ok  	github.com/docker/docker/daemon/logger/loggerutils	0.007s	coverage: 18.6% of statements
ok  	github.com/docker/docker/daemon/logger/splunk	1.488s	coverage: 84.5% of statements
ok  	github.com/docker/docker/daemon/logger/syslog	0.004s	coverage: 22.8% of statements
ok  	github.com/docker/docker/daemon/logger/templates	0.002s	coverage: 8.3% of statements
?   	github.com/docker/docker/daemon/names	[no test files]
ok  	github.com/docker/docker/daemon/network	0.003s	coverage: 57.1% of statements
?   	github.com/docker/docker/daemon/stats	[no test files]
ok  	github.com/docker/docker/distribution	1.095s	coverage: 16.8% of statements
ok  	github.com/docker/docker/distribution/metadata	0.027s	coverage: 48.2% of statements
?   	github.com/docker/docker/distribution/utils	[no test files]
ok  	github.com/docker/docker/distribution/xfer	1.431s	coverage: 83.9% of statements
?   	github.com/docker/docker/dockerversion	[no test files]
ok  	github.com/docker/docker/errdefs	0.002s	coverage: 76.6% of statements
ok  	github.com/docker/docker/image	0.016s	coverage: 86.3% of statements
ok  	github.com/docker/docker/image/cache	0.006s	coverage: 19.2% of statements
?   	github.com/docker/docker/image/tarexport	[no test files]
ok  	github.com/docker/docker/image/v1	0.006s	coverage: 25.0% of statements
ok  	github.com/docker/docker/internal/procfs	0.003s	coverage: 78.4% of statements
?   	github.com/docker/docker/internal/test	[no test files]
?   	github.com/docker/docker/internal/test/daemon	[no test files]
?   	github.com/docker/docker/internal/test/environment	[no test files]
?   	github.com/docker/docker/internal/test/fakecontext	[no test files]
?   	github.com/docker/docker/internal/test/fakegit	[no test files]
?   	github.com/docker/docker/internal/test/fakestorage	[no test files]
?   	github.com/docker/docker/internal/test/fixtures/load	[no test files]
?   	github.com/docker/docker/internal/test/fixtures/plugin	[no test files]
?   	github.com/docker/docker/internal/test/fixtures/plugin/basic	[no test files]
?   	github.com/docker/docker/internal/test/registry	[no test files]
?   	github.com/docker/docker/internal/test/request	[no test files]
ok  	github.com/docker/docker/internal/testutil	0.003s	coverage: 62.5% of statements
ok  	github.com/docker/docker/layer	7.455s	coverage: 71.4% of statements
ok  	github.com/docker/docker/libcontainerd	0.028s	coverage: 3.4% of statements
?   	github.com/docker/docker/libcontainerd/supervisor	[no test files]
?   	github.com/docker/docker/oci	[no test files]
?   	github.com/docker/docker/oci/caps	[no test files]
ok  	github.com/docker/docker/opts	0.016s	coverage: 68.4% of statements
ok  	github.com/docker/docker/pkg/aaparser	0.002s	coverage: 50.0% of statements
ok  	github.com/docker/docker/pkg/archive	0.316s	coverage: 82.3% of statements
ok  	github.com/docker/docker/pkg/authorization	0.158s	coverage: 66.7% of statements
ok  	github.com/docker/docker/pkg/broadcaster	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/pkg/chrootarchive	2.841s	coverage: 37.0% of statements
?   	github.com/docker/docker/pkg/containerfs	[no test files]
?   	github.com/docker/docker/pkg/devicemapper	[no test files]
ok  	github.com/docker/docker/pkg/directory	0.002s	coverage: 80.0% of statements
ok  	github.com/docker/docker/pkg/discovery	0.004s	coverage: 58.3% of statements
ok  	github.com/docker/docker/pkg/discovery/file	0.004s	coverage: 97.6% of statements
ok  	github.com/docker/docker/pkg/discovery/kv	3.061s	coverage: 84.1% of statements
ok  	github.com/docker/docker/pkg/discovery/memory	0.005s	coverage: 92.3% of statements
ok  	github.com/docker/docker/pkg/discovery/nodes	0.003s	coverage: 93.8% of statements
ok  	github.com/docker/docker/pkg/dmesg	0.003s	coverage: 83.3% of statements
ok  	github.com/docker/docker/pkg/filenotify	0.603s	coverage: 66.3% of statements
ok  	github.com/docker/docker/pkg/fileutils	0.006s	coverage: 89.5% of statements
ok  	github.com/docker/docker/pkg/fsutils	0.158s	coverage: 85.1% of statements
ok  	github.com/docker/docker/pkg/homedir	0.003s	coverage: 41.7% of statements
ok  	github.com/docker/docker/pkg/idtools	0.394s	coverage: 70.2% of statements
ok  	github.com/docker/docker/pkg/ioutils	0.388s	coverage: 69.1% of statements
ok  	github.com/docker/docker/pkg/jsonmessage	0.003s	coverage: 88.3% of statements
ok  	github.com/docker/docker/pkg/locker	0.013s	coverage: 88.9% of statements
ok  	github.com/docker/docker/pkg/longpath	0.002s	coverage: 100.0% of statements
?   	github.com/docker/docker/pkg/loopback	[no test files]
ok  	github.com/docker/docker/pkg/mount	0.486s	coverage: 68.6% of statements
ok  	github.com/docker/docker/pkg/namesgenerator	0.002s	coverage: 85.7% of statements
?   	github.com/docker/docker/pkg/namesgenerator/cmd/names-generator	[no test files]
ok  	github.com/docker/docker/pkg/parsers	0.002s	coverage: 97.0% of statements
ok  	github.com/docker/docker/pkg/parsers/kernel	0.002s	coverage: 60.0% of statements
ok  	github.com/docker/docker/pkg/parsers/operatingsystem	0.002s	coverage: 90.0% of statements
ok  	github.com/docker/docker/pkg/pidfile	0.002s	coverage: 82.4% of statements
?   	github.com/docker/docker/pkg/platform	[no test files]
?   	github.com/docker/docker/pkg/plugingetter	[no test files]
ok  	github.com/docker/docker/pkg/plugins	33.617s	coverage: 76.8% of statements
ok  	github.com/docker/docker/pkg/plugins/pluginrpc-gen	0.007s	coverage: 56.8% of statements
?   	github.com/docker/docker/pkg/plugins/pluginrpc-gen/fixtures	[no test files]
?   	github.com/docker/docker/pkg/plugins/pluginrpc-gen/fixtures/otherfixture	[no test files]
ok  	github.com/docker/docker/pkg/plugins/transport	0.003s	coverage: 85.7% of statements
ok  	github.com/docker/docker/pkg/pools	0.002s	coverage: 87.9% of statements
ok  	github.com/docker/docker/pkg/progress	0.002s	coverage: 75.9% of statements
ok  	github.com/docker/docker/pkg/pubsub	1.037s	coverage: 72.7% of statements
ok  	github.com/docker/docker/pkg/reexec	0.008s	coverage: 82.4% of statements
ok  	github.com/docker/docker/pkg/signal	2.372s	coverage: 61.0% of statements
?   	github.com/docker/docker/pkg/signal/testfiles	[no test files]
ok  	github.com/docker/docker/pkg/stdcopy	0.003s	coverage: 100.0% of statements
ok  	github.com/docker/docker/pkg/streamformatter	0.003s	coverage: 66.2% of statements
ok  	github.com/docker/docker/pkg/stringid	0.002s	coverage: 76.0% of statements
ok  	github.com/docker/docker/pkg/symlink	0.006s	coverage: 87.7% of statements
ok  	github.com/docker/docker/pkg/sysinfo	0.004s	coverage: 75.8% of statements
ok  	github.com/docker/docker/pkg/system	0.017s	coverage: 36.1% of statements
ok  	github.com/docker/docker/pkg/tailfile	0.017s	coverage: 88.6% of statements
ok  	github.com/docker/docker/pkg/tarsum	0.047s	coverage: 89.3% of statements
ok  	github.com/docker/docker/pkg/term	0.003s	coverage: 85.9% of statements
ok  	github.com/docker/docker/pkg/term/windows	0.002s	coverage: 0.0% of statements [no tests to run]
ok  	github.com/docker/docker/pkg/truncindex	0.102s	coverage: 91.5% of statements
ok  	github.com/docker/docker/pkg/urlutil	0.002s	coverage: 100.0% of statements
ok  	github.com/docker/docker/pkg/useragent	0.002s	coverage: 88.9% of statements
ok  	github.com/docker/docker/plugin	0.529s	coverage: 27.3% of statements
ok  	github.com/docker/docker/plugin/executor/containerd	0.007s	coverage: 33.3% of statements
ok  	github.com/docker/docker/plugin/v2	0.003s	coverage: 14.5% of statements
?   	github.com/docker/docker/profiles/apparmor	[no test files]
ok  	github.com/docker/docker/profiles/seccomp	0.006s	coverage: 79.4% of statements
ok  	github.com/docker/docker/reference	0.006s	coverage: 84.4% of statements
ok  	github.com/docker/docker/registry	0.105s	coverage: 57.0% of statements
ok  	github.com/docker/docker/registry/resumable	0.016s	coverage: 100.0% of statements
ok  	github.com/docker/docker/restartmanager	0.002s	coverage: 47.1% of statements
ok  	github.com/docker/docker/runconfig	0.009s	coverage: 68.2% of statements
?   	github.com/docker/docker/runconfig/opts	[no test files]
?   	github.com/docker/docker/volume	[no test files]
ok  	github.com/docker/docker/volume/drivers	0.005s	coverage: 36.1% of statements
ok  	github.com/docker/docker/volume/local	0.017s	coverage: 73.0% of statements
ok  	github.com/docker/docker/volume/mounts	0.025s	coverage: 66.8% of statements
ok  	github.com/docker/docker/volume/service	0.013s	coverage: 73.0% of statements
?   	github.com/docker/docker/volume/service/opts	[no test files]
?   	github.com/docker/docker/volume/testutils	[no test files]

  _____          _
 / ____|        | |
| |     ___   __| | ___  ___ _____   __
| |    / _ \ / _` |/ _ \/ __/ _ \ \ / /
| |___| (_) | (_| |  __/ (_| (_) \ V /
 \_____\___/ \__,_|\___|\___\___/ \_/
                              Bash-0b37652


x> No CI provider detected.
    Testing inside Docker? http://docs.codecov.io/docs/testing-with-docker
    Testing with Tox? https://docs.codecov.io/docs/python#section-testing-with-tox
    project root: .
--> token set from env
    Yaml found at: codecov.yml
    -> Found 1 reports
==> Detecting git/mercurial file structure
==> Reading reports
    + coverage.txt bytes=1662945
==> Appending adjustments
    http://docs.codecov.io/docs/fixing-reports
    + Found adjustments
==> Gzipping contents
==> Uploading reports
    url: https://codecov.io
    query: branch=&commit=634a38c58755c23a513701537ded30472be0522f&build=&build_url=&name=&tag=&slug=moby%2Fmoby&service=&flags=&pr=&job=
    -> Pinging Codecov
    -> Uploading
    -> View reports at https://codecov.io/github/moby/moby/commit/634a38c58755c23a513701537ded30472be0522f

Removing bundles/

---> Making bundle: binary-daemon (in bundles/binary-daemon)
Building: bundles/binary-daemon/dockerd-dev
Created binary: bundles/binary-daemon/dockerd-dev
Copying nested executables into bundles/binary-daemon

---> Making bundle: dynbinary (in bundles/dynbinary)
Building: bundles/dynbinary-daemon/dockerd-dev
Created binary: bundles/dynbinary-daemon/dockerd-dev

---> Making bundle: test-docker-py (in bundles/test-docker-py)
---> Making bundle: .integration-daemon-start (in bundles/test-docker-py)
Using test binary docker
/etc/init.d/apparmor: 130: /etc/init.d/apparmor: systemd-detect-virt: not found
Starting AppArmor profiles:Warning from stdin (line 1): /sbin/apparmor_parser: cannot use or update cache, disable, or force-complain via stdin
Warning failed to create cache: (null)
.
INFO: Waiting for daemon to start...
Starting dockerd
.
============================= test session starts ==============================
platform linux2 -- Python 2.7.13, pytest-2.9.1, py-1.7.0, pluggy-0.3.1
rootdir: /docker-py, inifile: pytest.ini
plugins: cov-2.1.0
collected 338 items

../../../../../docker-py/tests/integration/api_build_test.py ....s..s........
../../../../../docker-py/tests/integration/api_client_test.py .......
../../../../../docker-py/tests/integration/api_config_test.py .....
../../../../../docker-py/tests/integration/api_container_test.py ....x....x.......x............................................................
../../../../../docker-py/tests/integration/api_exec_test.py .............
../../../../../docker-py/tests/integration/api_healthcheck_test.py ....
../../../../../docker-py/tests/integration/api_image_test.py ...s........s....
../../../../../docker-py/tests/integration/api_network_test.py ...........................
../../../../../docker-py/tests/integration/api_plugin_test.py ......Set build name.
New build name is '#36181'
Build was aborted
Aborted by Gordon
[PostBuildScript] - Executing post build scripts.
/tmp/jenkins2426856776606259858.sh: line 26:  8277 Terminated              docker run --rm -t --privileged -v "$WORKSPACE/bundles:/go/src/github.com/docker/docker/bundles" -v "$WORKSPACE/.git:/go/src/github.com/docker/docker/.git" --name docker-pr$BUILD_NUMBER -e DOCKER_GITCOMMIT=${GITCOMMIT} -e DOCKER_GRAPHDRIVER=vfs -e DOCKER_EXECDRIVER=native -e CODECOV_TOKEN -e GIT_SHA1 docker:$GITCOMMIT hack/ci/janky
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins7394555126570534573.sh
+ echo Ensuring container killed.
Ensuring container killed.
+ docker rm -vf docker-pr52230
docker-pr52230
+ echo Chowning /workspace to jenkins user
Chowning /workspace to jenkins user
+ id -u
+ id -g
+ docker run --rm -v /home/ubuntu/workspace/Docker-PRs:/workspace busybox chown -R 1000:1000 /workspace
[Docker-PRs] $ /bin/sh -xe /tmp/jenkins378631285975900490.sh
+ echo Creating bundles.tar.gz
Creating bundles.tar.gz
+ xargs tar -czf bundles.tar.gz
+ find bundles -name *.log -o -name *.prof -o -name integration.test
Archiving artifacts
Notifying endpoint with url 'https://leeroy.dockerproject.org/notification/jenkins'
[WS-CLEANUP] Deleting project workspace...[WS-CLEANUP] done
Finished: ABORTED
